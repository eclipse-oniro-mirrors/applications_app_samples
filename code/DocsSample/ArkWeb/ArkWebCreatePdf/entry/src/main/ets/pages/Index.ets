/*
* Copyright (c) 2025 Huawei Device Co., Ltd.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import { BusinessError } from '@kit.BasicServicesKit';
import { common } from '@kit.AbilityKit';
import hilog from '@ohos.hilog';

const TAG = '[Sample_WebCreatePdf]'
const DOMAIN = 0xF811
const BUNDLE = 'WebCreatePdf_'

@Entry
@Component
struct Index {
  build() {
    Column({ space: 10 }) {
      Button('createPdfCallback')
        .onClick(() => {
          let context = this.getUIContext().getHostContext() as common.UIAbilityContext;
          AppStorage.setOrCreate<string>("filesDirPath",context.filesDir)
          this.getUIContext().getRouter().pushUrl({
            url: 'pages/WebCreatePdfCallback',
          })
            .catch((error: BusinessError) => {
              hilog.error(DOMAIN, TAG, BUNDLE + `pushUrl failed, code is ${error.code}, message is ${error.message}`)
            })
        })
      Button('createPdfPromise')
        .onClick(() => {
          let context = this.getUIContext().getHostContext() as common.UIAbilityContext;
          AppStorage.setOrCreate<string>("filesDirPath",context.filesDir);
          this.getUIContext().getRouter().pushUrl({
            url: 'pages/WebCreatePdfPromise',
          })
            .catch((error: BusinessError) => {
              hilog.error(DOMAIN, TAG, BUNDLE + `pushUrl failed, code is ${error.code}, message is ${error.message}`);
            })
        })
    }.height('100%')
    .width('100%')
  }
}
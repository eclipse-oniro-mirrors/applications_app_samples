/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { hilog } from '@kit.PerformanceAnalysisKit';
const DOMAIN = 0x0001;
const TAG = 'arktsobservedv2andtrace';
// [Start Nested_Class]
@ObservedV2
class Pencil {
  @Trace public length: number = 21; // 当length变化时，会刷新关联的组件
}
class Bag {
  // Public property representing the width dimension
 public width: number = 50;
  // Public property representing the height dimension
 public height: number = 60;
 public pencil: Pencil = new Pencil();
}
class NestedClassSon {
  // Public property storing the age value
 public age: number = 5;
 public school: string = 'some';
 public bag: Bag = new Bag();
}

@Entry
@ComponentV2
struct Page {
  son: NestedClassSon = new NestedClassSon();
  // Variable to track the number of times the component has been rendered
  renderTimes: number = 0;
  isRender(id: number): number {
    hilog.info(DOMAIN,TAG,`id: ${id} renderTimes: ${this.renderTimes}`);
    this.renderTimes++;
    return 40;
  };

  build() {
    Column() {
      Text('pencil length'+ this.son.bag.pencil.length)
        .fontSize(this.isRender(1))   // UINode (1)
      Button('change length')
        .onClick(() => {
          // 点击更改length值，UINode（1）会刷新
          this.son.bag.pencil.length += 100;
        });
      Button('assign Son')
        .onClick(() => {
          // 由于变量son非状态变量，因此无法刷新UINode（1）
          this.son = new NestedClassSon();
        });
    }
  }
}
// [End Nested_Class]
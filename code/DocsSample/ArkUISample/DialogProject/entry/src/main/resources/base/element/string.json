{
  "string": [
    {
      "name": "module_desc",
      "value": "module description"
    },
    {
      "name": "EntryAbility_desc",
      "value": "description"
    },
    {
      "name": "EntryAbility_label",
      "value": "DialogProject"
    },
    {
      "name": "CustomDialog_dialog",
      "value": "自定义弹窗"
    },
    {
      "name": "CustomDialog_create",
      "value": "创建自定义弹框"
    },
    {
      "name": "CustomDialog_Animation",
      "value": "弹窗渐出动画预览"
    },
    {
      "name": "CustomDialog_Animation1",
      "value": "弹出框动画"
    },
    {
      "name": "CustomDialog_interaction",
      "value": "弹出框交互"
    },
    {
      "name": "CustomDialog_interaction1",
      "value": "弹出框交互页面跳转"
    },
    {
      "name": "CustomDialog_shadow",
      "value": "弹窗设置边框阴影预览"
    },
    {
      "name": "CustomDialog_style",
      "value": "弹出框的样式"
    },
    {
      "name": "CustomDialog_nest",
      "value": "嵌套自定义弹出框"
    },
    {
      "name": "CustomDialog_create_des",
      "value": "使用@CustomDialog装饰器装饰自定义弹出框，可在此装饰器内自定义弹出框内容。CustomDialogController需在@Component内定义。"
    },
    {
      "name": "CustomDialog_create_title",
      "value": "创建自定义弹出框"
    },
    {
      "name": "CustomDialog_interaction_des",
      "value": "弹出框可用于数据交互，完成用户一系列响应操作。"
    },
    {
      "name": "CustomDialog_interaction_title",
      "value": "弹出框的交互"
    },
    {
      "name": "CustomDialog_interaction1_des",
      "value": "可通过弹出框中的按钮实现路由跳转，同时获取跳转页面向当前页传入的参数。"
    },
    {
      "name": "CustomDialog_interaction1_title",
      "value": "弹出框的交互页面跳转"
    },
    {
      "name": "CustomDialog_animation_des",
      "value": "弹出框通过定义openAnimation控制弹出框出现动画的持续时间，速度等参数。"
    },
    {
      "name": "CustomDialog_animation_title",
      "value": "弹出框的动画"
    },
    {
      "name": "CustomDialog_Style_des",
      "value": "弹出框通过定义宽度、高度、背景色、阴影等参数来控制样式。"
    },
    {
      "name": "CustomDialog_Style_title",
      "value": "弹出框的样式"
    },
    {
      "name": "CustomDialog_nest_des",
      "value": "弹出框通过定义宽度、高度、背景色、阴影等参数来控制样式。"
    },
    {
      "name": "CustomDialog_nest_title",
      "value": "弹出框的样式"
    },
    {
      "name": "CustomDialog_ActionSheet",
      "value": "列表选择弹窗"
    },
    {
      "name": "CustomDialog_AlertDialog",
      "value": "警告弹窗"
    },
    {
      "name": "CustomDialog_calender",
      "value": "日历选择器弹窗"
    },
    {
      "name": "CustomDialog_date",
      "value": "日期滑动选择器弹窗"
    },
    {
      "name": "CustomDialog_text",
      "value": "文本滑动选择器弹窗"
    },
    {
      "name": "CustomDialog_time",
      "value": "时间滑动选择器弹窗"
    },
    {
      "name": "CalendarPickerDialog_title",
      "value": "日历选择器弹窗"
    },
    {
      "name": "CalendarPickerDialog_des",
      "value": "日历选择器弹窗提供日历视图，包含年、月和星期信息，通过CalendarPickerDialog接口实现。开发者可调用show函数，定义并弹出日历选择器弹窗。"
    },
    {
      "name": "DatePicker_title",
      "value": "日期滑动选择器弹窗"
    },
    {
      "name": "DatePicker_des",
      "value": "开发者可以利用指定的日期范围，创建日期滑动选择器弹窗，将日期信息清晰地展示在弹出的窗口上。"
    },
    {
      "name": "TimePicker_title",
      "value": "时间滑动选择器弹窗"
    },
    {
      "name": "TimePicker_des",
      "value": "开发者可根据24小时的时间区间，创建时间滑动选择器弹窗，将时间信息清晰地展示在弹出的窗口上。"
    },
    {
      "name": "TextPicker_title",
      "value": "文本滑动选择器弹窗"
    },
    {
      "name": "TextPicker_des",
      "value": "开发者可根据指定的选择范围，创建文本滑动选择器弹窗，将文本信息清晰地展示在弹出的窗口上。"
    },
    {
      "name": "ActionSheet_title",
      "value": "列表选择弹窗"
    },
    {
      "name": "ActionSheet_des",
      "value": "列表选择器弹窗适用于呈现多个操作选项，尤其当界面中仅需展示操作列表而无其他内容时。"
    },
    {
      "name": "AlertDialog_title",
      "value": "警告弹窗"
    },
    {
      "name": "AlertDialog_des",
      "value": "需要向用户提问或得到用户的许可时，可使用警告弹窗。"
    },
    {
      "name": "fixed_dialog",
      "value": "固定样式弹出框"
    },
    {
      "name": "menu_single",
      "value": "菜单选项单级"
    },
    {
      "name": "menu_forbid",
      "value": "菜单不可选择"
    },
    {
      "name": "menu_more",
      "value": "菜单选项多级"
    },
    {
      "name": "menu_subtitle",
      "value": "小标题"
    },
    {
      "name": "menu_selection",
      "value": "菜单选项"
    },
    {
      "name": "menu_default",
      "value": "默认样式"
    },
    {
      "name": "menu_bind",
      "value": "属性绑定"
    },
    {
      "name": "menu_rightClick",
      "value": "支持鼠标右键的菜单"
    },
    {
      "name": "create_menu",
      "value": "创建菜单"
    },
    {
      "name": "menu",
      "value": "菜单"
    },
    {
      "name": "CreateMenu_title",
      "value": "创建自定义样式的菜单"
    },
    {
      "name": "CreateMenu_des",
      "value": "菜单需要调用bindMenu接口来实现。bindMenu响应绑定组件的点击事件，绑定组件后手势点击对应组件后即可弹出。"
    },
    {
      "name": "Customdialog_title",
      "value": "不依赖UI组件的全局自定义弹出框"
    },
    {
      "name": "Customdialog_des",
      "value": "由于CustomDialogController在使用上存在诸多限制，不支持动态创建也不支持动态刷新，在相对较复杂的应用场景中推荐使用UIContext中获取到的PromptAction对象提供的openCustomDialog接口来实现自定义弹出框。"
    },
    {
      "name": "close_dialog",
      "value": "关闭弹窗"
    },
    {
      "name": "change_dialog",
      "value": "改变弹窗位置"
    },
    {
      "name": "change_text",
      "value": "该按钮呼出的弹窗，点击“改变弹窗位置”弹窗由上对齐更新为底部对齐"
    },
    {
      "name": "open_customDialog",
      "value": "不依赖UI组件的全局自定义弹出框"
    },
    {
      "name": "button_popup",
      "value": "带按钮的提示气泡"
    },
    {
      "name": "custom_popup",
      "value": "自定义气泡"
    },
    {
      "name": "popup",
      "value": "气泡提示"
    },
    {
      "name": "TextPopup_title",
      "value": "文本提示气泡"
    },
    {
      "name": "TextPopup_des",
      "value": "文本提示气泡常用于只展示带有文本的信息提示，不带有任何交互的场景。Popup属性需绑定组件，当bindPopup属性中参数show为true时会弹出气泡提示。"
    },
    {
      "name": "onStateChange_title",
      "value": "添加气泡状态变化的事件"
    },
    {
      "name": "onStateChange_des",
      "value": "通过onStateChange参数为气泡添加状态变化的事件回调，可以判断当前气泡的显示状态。"
    },
    {
      "name": "ButtonPopup_title",
      "value": "带按钮的提示气泡"
    },
    {
      "name": "ButtonPopup_des",
      "value": "通过primaryButton、secondaryButton属性为气泡最多设置两个Button按钮，通过此按钮进行简单的交互，开发者可以通过配置action参数来设置想要触发的操作。"
    },
    {
      "name": "AnimationPopup_title",
      "value": "气泡的动画"
    },
    {
      "name": "AnimationPopup_des",
      "value": "气泡通过定义transition控制气泡的进场和出场动画效果。"
    },
    {
      "name": "CustomPopup_title",
      "value": "自定义气泡"
    },
    {
      "name": "CustomPopup_des",
      "value": "开发者可以使用CustomPopupOptions的builder创建自定义气泡，@Builder中可以放自定义的内容。除此之外，还可以通过popupColor等参数控制气泡样式。"
    },
    {
      "name": "StylePopup_title",
      "value": "气泡样式"
    },
    {
      "name": "StylePopup_des",
      "value": "气泡除了可以通过builder实现自定义气泡，还可以通过接口设置气泡的样式和显示效果。"
    },
    {
      "name": "toast",
      "value": "即时反馈"
    },
    {
      "name": "CreateToast_title",
      "value": "创建即时反馈"
    },
    {
      "name": "CreateToast_des",
      "value": "适用于短时间内提示框自动消失的场景。"
    },
    {
      "name": "OpenCloseToast_title",
      "value": "显示关闭即时反馈"
    },
    {
      "name": "OpenCloseToast_des",
      "value": "适用于提示框提留时间较长，用户操作可以提前关闭提示框的场景。"
    },
    {
      "name": "openCustomDialog",
      "value": "自定义弹出框/openCustomDialog"
    },
    {
      "name": "CustomDialog1",
      "value": "基础自定义弹出框/CustomDialog"
    },
    {
      "name": "FixedStyleDialog1",
      "value": "固定样式弹出框/FixedStyleDialog"
    },
    {
      "name": "Menu1",
      "value": "菜单控制/Menu"
    },
    {
      "name": "Toast1",
      "value": "即时反馈/Toast"
    },
    {
      "name": "Popup1",
      "value": "气泡提示/Popup"
    },
    {
      "name": "back",
      "value": "点击返回"
    },
    {
      "name": "ShowActionMenu_title",
      "value": "操作菜单"
    },
    {
      "name": "ShowActionMenu_des",
      "value": "操作菜单通过UIContext中的getPromptAction方法获取到PromptAction对象，再通过该对象调用showActionMenu接口实现，支持在回调或开发者自定义类中使用。"
    },
    {
      "name": "ShowDialog_title",
      "value": "对话框"
    },
    {
      "name": "ShowDialog_des",
      "value": "对话框通过UIContext中的getPromptAction方法获取到PromptAction对象，再通过该对象调用showDialog接口实现，支持在回调或开发者自定义类中使用。"
    },
    {
      "name": "DefaultAndTopToast_title",
      "value": "即时反馈模式对比"
    },
    {
      "name": "DefaultAndTopToast_des",
      "value": "即时反馈提供了两种显示模式，分别为DEFAULT（显示在应用内）、TOP_MOST（显示在应用之上）。"
    },
    {
      "name": "CreateCustomDialog1_title",
      "value": "创建自定义弹出框1"
    },
    {
      "name": "CreateCustomDialog1_desc",
      "value": "使用@CustomDialog装饰器装饰自定义弹出框，可在此装饰器内自定义弹出框内容。CustomDialogController需在@Component内定义。"
    },
    {
      "name": "DialogInteraction2_title",
      "value": "弹出框的交互2"
    },
    {
      "name": "DialogInteraction2_desc",
      "value": "页面内需要在构造器内进行接收，同时创建相应的函数操作。"
    },
    {
      "name": "DialogInteraction3_title",
      "value": "弹出框的交互3"
    },
    {
      "name": "DialogInteraction3_desc",
      "value": "可通过弹出框中的按钮实现路由跳转，同时获取跳转页面向当前页传入的参数。"
    },
    {
      "name": "DialogAnimation1_title",
      "value": "弹出框的动画1"
    },
    {
      "name": "DialogAnimation1_desc",
      "value": "弹出框通过定义openAnimation控制弹出框出现动画的持续时间，速度等参数。"
    },
    {
      "name": "DialogStyle1_title",
      "value": "弹出框的样式1"
    },
    {
      "name": "DialogStyle1_desc",
      "value": "通过定义弹出框的宽度、高度、背景色、阴影等参数，控制其样式。"
    },
    {
      "name": "NestDialog1_title",
      "value": "嵌套自定义弹出框1"
    },
    {
      "name": "NestDialog1_desc",
      "value": "通过第一个弹出框打开第二个弹出框时，最好将第二个弹出框定义在第一个弹出框的父组件处，通过父组件传给第一个弹出框的回调来打开第二个弹出框。"
    },
    {
      "name": "DialogWithPhysicalBack_title",
      "value": "实现弹出框的物理返回拦截"
    },
    {
      "name": "DialogWithPhysicalBack_desc",
      "value": "执行点击遮障层关闭、侧滑（左滑或右滑）、三键Back、键盘ESC关闭等交互操作时，如果注册了CustomDialogControllerOptions中的onWillDismiss回调函数，弹出框不会立即关闭。在回调函数中，通过DismissDialogAction中的reason属性获取阻拦关闭弹出框的操作类型，根据原因决定是否关闭弹出框。"
    },
    {
      "name": "DialogAvoidSoftKeyboard_title",
      "value": "设置弹出框避让软键盘的距离"
    },
    {
      "name": "DialogAvoidSoftKeyboard_desc",
      "value": "为显示弹出框的独立性，弹出框弹出时会与周边进行避让，包括状态栏、导航条以及键盘等留有间距。故当软键盘弹出时，默认情况下，弹出框会自动避开软键盘，并与之保持16vp的距离。从API version 15开始，开发者可以利用CustomDialogControllerOptions中的keyboardAvoidMode和keyboardAvoidDistance这两个配置项，来设置弹出框在软键盘弹出时的行为，包括是否需要避开软键盘以及与软键盘之间的距离。"
    },
    {
      "name": "GetDialogStatus_title",
      "value": "获取弹出框的状态"
    },
    {
      "name": "GetDialogStatus_desc",
      "value": "在业务模块中，页面上可能会同时出现多个弹出框。为避免重复打开相同的弹出框，建议在显示弹出框前，先通过控制器检查其当前状态。如果弹出框已处于显示状态，则不应再次打开。"
    },
    {
      "name": "i_am_content",
      "value": "我是内容"
    },
    {
      "name": "open_windows",
      "value": "打开弹窗"
    },
    {
      "name": "the_second_page_is",
      "value": "第二个页面的内容为"
    },
    {
      "name": "wether_to_get_the_second_page",
      "value": "是否获取第二个页面的内容"
    },
    {
      "name": "click_and_return",
      "value": "点击返回"
    }
  ]
}
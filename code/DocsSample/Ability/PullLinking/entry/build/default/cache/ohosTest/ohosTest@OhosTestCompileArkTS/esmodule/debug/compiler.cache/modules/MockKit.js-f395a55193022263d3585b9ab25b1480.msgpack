‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄'≠/*
 * Copyright (c) 2022-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import ExtendInterface from './ExtendInterface';
import VerificationMode from './VerificationMode';
import ArgumentMatchers from './ArgumentMatchers';

class MockKit {
  constructor() {
    this.mFunctions = [];
    this.stubs = new Map();
    this.recordCalls = new Map();
    this.currentSetKey = new Map();
    this.mockObj = null;
    this.recordMockedMethod = new Map();
  }

  init() {
    this.reset();
  }

  reset() {
    this.mFunctions = [];
    this.stubs = {};
    this.recordCalls = {};
    this.currentSetKey = new Map();
    this.mockObj = null;
    this.recordMockedMethod = new Map();
  }

  clearAll() {
    this.reset();
    var props = Object.keys(this);
    for (var i = 0; i < props.length; i++) {
      delete this[props[i]];
    }

    var props = Object.getOwnPropertyNames(this);
    for (var i = 0; i < props.length; i++) {
      delete this[props[i]];
    }
    for (var key in this) {
      delete this[key];
    }
  }

  clear(obj) {
    if (!obj) {
      throw Error('Please enter an object to be cleaned');
    }
    if (typeof obj !== 'object' && typeof obj !== 'function') {
      throw new Error('Not a object or static class');
    }
    this.recordMockedMethod.forEach(function (value, key, map) {
      if (key) {
        obj[key] = value;
      }
    });
  }

  ignoreMock(obj, method) {
    if (typeof obj !== 'object' && typeof obj !== 'function') {
      throw new Error('Not a object or static class');
    }
    if (typeof method !== 'function') {
      throw new Error('Not a function');
    }
    let og = this.recordMockedMethod.get(method.propName);
    if (og) {
      obj[method.propName] = og;
      this.recordMockedMethod.set(method.propName, undefined);
    }
  }

  extend(dest, source) {
    dest['stub'] = source['stub'];
    dest['afterReturn'] = source['afterReturn'];
    dest['afterReturnNothing'] = source['afterReturnNothing'];
    dest['afterAction'] = source['afterAction'];
    dest['afterThrow'] = source['afterThrow'];
    dest['stubMockedCall'] = source['stubMockedCall'];
    dest['clear'] = source['clear'];
    return dest;
  }

  stubApply(f, params, returnInfo) {
    let values = this.stubs.get(f);
    if (!values) {
      values = new Map();
    }
    let key = params[0];
    if (typeof key === 'undefined') {
      key = 'anonymous-mock-' + f.propName;
    } else {
      key = [];
      const matcher = new ArgumentMatchers();
      for (let i = 0; i < params.length; i++) {
        const param = params[i];
        const matchKey = matcher.matcheStubKey(param);
        if (matchKey) {
          key.push(matchKey);
        } else {
          key.push(param);
        }
      }
    }
    this.currentSetKey.set(f, key);
    values.set(key, returnInfo);
    this.stubs.set(f, values);
  }

  getReturnInfo(f, params) {
    let values = this.stubs.get(f);
    if (!values) {
      return undefined;
    }
    let returnKet = params[0];
    const anonymousName = 'anonymous-mock-' + f.propName;
    if (typeof returnKet === 'undefined') {
      returnKet = anonymousName;
      let stubSetKey = this.currentSetKey.get(f);

      if (stubSetKey && (typeof (returnKet) !== 'undefined')) {
        returnKet = stubSetKey;
      }
    } else {
      returnKet = this.getReturnKet(values, params, returnKet, anonymousName);
    }

    return values.get(returnKet);
  }

  getReturnKet(values, params, defaultValue, anonymousName) {
    let flag = true;
    let returnKet = defaultValue;
    values.forEach((value, paramsKey, map) => {
      if (
        flag &&
        paramsKey !== anonymousName &&
        paramsKey.length === params.length &&
        this.checkIsRightValue(paramsKey, params)
      ) {
        returnKet = paramsKey;
        flag = false;
      }
    });
    return returnKet;
  }

  checkIsRightValue(paramsKey, params) {
    const matcher = new ArgumentMatchers();
    return paramsKey.every((key, j) => {
      if (ArgumentMatchers.isRegExp(key) && typeof params[j] === 'string') {
        return key.test(params[j]);
      }
      const matchKey = matcher.matcheReturnKey(params[j], undefined, key);
      if (matchKey && matchKey === key) {
        return true;
      } else if (this.checkIsEqual(params[j], key)) {
        return true;
      }
      return false;
    });
  }

  checkIsEqual(value1, value2) {
    if (value1 === value2) {
      return true;
    }
    if (typeof value1 !== typeof value2) {
      return false;
    }
    if (Array.isArray(value1) && Array.isArray(value2)) {
      if (value1.length !== value2.length) {
        return false;
      }
      for (let i = 0; i < value1.length; i++) {
        if (!this.checkIsEqual(value1[i], value2[i])) {
          return false;
        }
      }
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object Object]' &&
      Object.prototype.toString.call(value2) === '[object Object]') {
      const keys1 = Object.keys(value1);
      const keys2 = Object.keys(value2);
      if (keys1.length !== keys2.length) {
        return false;
      }
      for (let key of keys1) {
        if (!keys2.includes(key) || !this.checkIsEqual(value1[key], value2[key])) {
          return false;
        }
      }
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object Date]' &&
      Object.prototype.toString.call(value2) === '[object Date]' &&
      value1.getTime() === value2.getTime()) {
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object RegExp]' &&
      Object.prototype.toString.call(value2) === '[object RegExp]' &&
      value1.toString() === value2.toString()) {
      return true;
    }
    return false;
  }

  findName(obj, value) {
    let properties = this.findProperties(obj);
    let name = null;
    properties
      .filter((item) => item !== 'caller' && item !== 'arguments')
      .forEach(function (va1, idx, array) {
        if (obj[va1] === value) {
          name = va1;
        }
      });
    return name;
  }

  isFunctionFromPrototype(f, container, propName) {
    if (
      container.constructor !== Object &&
      container.constructor.prototype !== container
    ) {
      return container.constructor.prototype[propName] === f;
    }
    return false;
  }

  findProperties(obj, ...arg) {
    function getProperty(newObj) {
      if (newObj.__proto__ === null) {
        return [];
      }
      let properties = Object.getOwnPropertyNames(newObj);
      return [...properties, ...getProperty(newObj.__proto__)];
    }
    return getProperty(obj);
  }

  recordMethodCall(originalMethod, args) {
    Function.prototype.getName = function () {
      return this.name || this.toString().match(/function\s*([^(]*)\(/)[1];
    };
    let name = originalMethod.getName();
    let arglistString = name + '(' + Array.from(args).toString() + ')';
    let records = this.recordCalls.get(arglistString);
    if (!records) {
      records = 0;
    }
    records++;
    this.recordCalls.set(arglistString, records);
  }

  mockFunc(originalObject, originalMethod) {
    let tmp = this;
    this.originalMethod = originalMethod;
    let f = function () {
      let args = arguments;
      let action = tmp.getReturnInfo(f, args);
      if (originalMethod) {
        tmp.recordMethodCall(originalMethod, args);
      }
      if (action) {
        return action.apply(this, args);
      }
    };

    f.container = null || originalObject;
    f.original = originalMethod || null;

    if (originalObject && originalMethod) {
      if (typeof originalMethod !== 'function') {
        throw new Error('Not a function');
      }
      var name = this.findName(originalObject, originalMethod);
      originalObject[name] = f;
      this.recordMockedMethod.set(name, originalMethod);
      f.propName = name;
      f.originalFromPrototype = this.isFunctionFromPrototype(
        f.original,
        originalObject,
        f.propName
      );
    }
    f.mocker = this;
    this.mFunctions.push(f);
    this.extend(f, new ExtendInterface(this));
    return f;
  }

  verify(methodName, argsArray) {
    if (!methodName) {
      throw Error('not a function name');
    }
    let a = this.recordCalls.get(methodName + '(' + argsArray.toString() + ')');
    return new VerificationMode(a ? a : 0);
  }

  mockObject(object) {
    if (!object || typeof object === 'string') {
      throw Error(`this ${object} cannot be mocked`);
    }
    const _this = this;
    let mockedObject = {};
    let keys = Reflect.ownKeys(object);
    keys
      .filter((key) => typeof Reflect.get(object, key) === 'function')
      .forEach((key) => {
        mockedObject[key] = object[key];
        mockedObject[key] = _this.mockFunc(mockedObject, mockedObject[key]);
      });
    return mockedObject;
  }
}

function ifMockedFunction(f) {
  if (
    Object.prototype.toString.call(f) !== '[object Function]' &&
    Object.prototype.toString.call(f) !== '[object AsyncFunction]'
  ) {
    throw Error('not a function');
  }
  if (!f.stub) {
    throw Error('not a mock function');
  }
  return true;
}

function when(f) {
  if (!ifMockedFunction(f)) {
    throw Error('not a mock function');
  }
  return f.stub.bind(f);
}

export { MockKit, when };
¬ìŸØD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\ExtendInterface.jsŸ∞D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\VerificationMode.jsŸ∞D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\ArgumentMatchers.jsŸßD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\MockKit.js‘rBò±isLocalDependencyØisNodeEntryFileßpkgPathßpkgName™pkgVersion±belongProjectPath±dependencyPkgInfo®commonjs¬¬ŸáD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium¨@ohos/hypium¶1.0.24ŸJD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking‘rCíßpkgName™pkgVersion¨@ohos/hypium¶1.0.24‘rDíØhasNamedExports™isCommonJS√¬√⁄'≠/*
 * Copyright (c) 2022-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import ExtendInterface from './ExtendInterface';
import VerificationMode from './VerificationMode';
import ArgumentMatchers from './ArgumentMatchers';

class MockKit {
  constructor() {
    this.mFunctions = [];
    this.stubs = new Map();
    this.recordCalls = new Map();
    this.currentSetKey = new Map();
    this.mockObj = null;
    this.recordMockedMethod = new Map();
  }

  init() {
    this.reset();
  }

  reset() {
    this.mFunctions = [];
    this.stubs = {};
    this.recordCalls = {};
    this.currentSetKey = new Map();
    this.mockObj = null;
    this.recordMockedMethod = new Map();
  }

  clearAll() {
    this.reset();
    var props = Object.keys(this);
    for (var i = 0; i < props.length; i++) {
      delete this[props[i]];
    }

    var props = Object.getOwnPropertyNames(this);
    for (var i = 0; i < props.length; i++) {
      delete this[props[i]];
    }
    for (var key in this) {
      delete this[key];
    }
  }

  clear(obj) {
    if (!obj) {
      throw Error('Please enter an object to be cleaned');
    }
    if (typeof obj !== 'object' && typeof obj !== 'function') {
      throw new Error('Not a object or static class');
    }
    this.recordMockedMethod.forEach(function (value, key, map) {
      if (key) {
        obj[key] = value;
      }
    });
  }

  ignoreMock(obj, method) {
    if (typeof obj !== 'object' && typeof obj !== 'function') {
      throw new Error('Not a object or static class');
    }
    if (typeof method !== 'function') {
      throw new Error('Not a function');
    }
    let og = this.recordMockedMethod.get(method.propName);
    if (og) {
      obj[method.propName] = og;
      this.recordMockedMethod.set(method.propName, undefined);
    }
  }

  extend(dest, source) {
    dest['stub'] = source['stub'];
    dest['afterReturn'] = source['afterReturn'];
    dest['afterReturnNothing'] = source['afterReturnNothing'];
    dest['afterAction'] = source['afterAction'];
    dest['afterThrow'] = source['afterThrow'];
    dest['stubMockedCall'] = source['stubMockedCall'];
    dest['clear'] = source['clear'];
    return dest;
  }

  stubApply(f, params, returnInfo) {
    let values = this.stubs.get(f);
    if (!values) {
      values = new Map();
    }
    let key = params[0];
    if (typeof key === 'undefined') {
      key = 'anonymous-mock-' + f.propName;
    } else {
      key = [];
      const matcher = new ArgumentMatchers();
      for (let i = 0; i < params.length; i++) {
        const param = params[i];
        const matchKey = matcher.matcheStubKey(param);
        if (matchKey) {
          key.push(matchKey);
        } else {
          key.push(param);
        }
      }
    }
    this.currentSetKey.set(f, key);
    values.set(key, returnInfo);
    this.stubs.set(f, values);
  }

  getReturnInfo(f, params) {
    let values = this.stubs.get(f);
    if (!values) {
      return undefined;
    }
    let returnKet = params[0];
    const anonymousName = 'anonymous-mock-' + f.propName;
    if (typeof returnKet === 'undefined') {
      returnKet = anonymousName;
      let stubSetKey = this.currentSetKey.get(f);

      if (stubSetKey && (typeof (returnKet) !== 'undefined')) {
        returnKet = stubSetKey;
      }
    } else {
      returnKet = this.getReturnKet(values, params, returnKet, anonymousName);
    }

    return values.get(returnKet);
  }

  getReturnKet(values, params, defaultValue, anonymousName) {
    let flag = true;
    let returnKet = defaultValue;
    values.forEach((value, paramsKey, map) => {
      if (
        flag &&
        paramsKey !== anonymousName &&
        paramsKey.length === params.length &&
        this.checkIsRightValue(paramsKey, params)
      ) {
        returnKet = paramsKey;
        flag = false;
      }
    });
    return returnKet;
  }

  checkIsRightValue(paramsKey, params) {
    const matcher = new ArgumentMatchers();
    return paramsKey.every((key, j) => {
      if (ArgumentMatchers.isRegExp(key) && typeof params[j] === 'string') {
        return key.test(params[j]);
      }
      const matchKey = matcher.matcheReturnKey(params[j], undefined, key);
      if (matchKey && matchKey === key) {
        return true;
      } else if (this.checkIsEqual(params[j], key)) {
        return true;
      }
      return false;
    });
  }

  checkIsEqual(value1, value2) {
    if (value1 === value2) {
      return true;
    }
    if (typeof value1 !== typeof value2) {
      return false;
    }
    if (Array.isArray(value1) && Array.isArray(value2)) {
      if (value1.length !== value2.length) {
        return false;
      }
      for (let i = 0; i < value1.length; i++) {
        if (!this.checkIsEqual(value1[i], value2[i])) {
          return false;
        }
      }
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object Object]' &&
      Object.prototype.toString.call(value2) === '[object Object]') {
      const keys1 = Object.keys(value1);
      const keys2 = Object.keys(value2);
      if (keys1.length !== keys2.length) {
        return false;
      }
      for (let key of keys1) {
        if (!keys2.includes(key) || !this.checkIsEqual(value1[key], value2[key])) {
          return false;
        }
      }
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object Date]' &&
      Object.prototype.toString.call(value2) === '[object Date]' &&
      value1.getTime() === value2.getTime()) {
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object RegExp]' &&
      Object.prototype.toString.call(value2) === '[object RegExp]' &&
      value1.toString() === value2.toString()) {
      return true;
    }
    return false;
  }

  findName(obj, value) {
    let properties = this.findProperties(obj);
    let name = null;
    properties
      .filter((item) => item !== 'caller' && item !== 'arguments')
      .forEach(function (va1, idx, array) {
        if (obj[va1] === value) {
          name = va1;
        }
      });
    return name;
  }

  isFunctionFromPrototype(f, container, propName) {
    if (
      container.constructor !== Object &&
      container.constructor.prototype !== container
    ) {
      return container.constructor.prototype[propName] === f;
    }
    return false;
  }

  findProperties(obj, ...arg) {
    function getProperty(newObj) {
      if (newObj.__proto__ === null) {
        return [];
      }
      let properties = Object.getOwnPropertyNames(newObj);
      return [...properties, ...getProperty(newObj.__proto__)];
    }
    return getProperty(obj);
  }

  recordMethodCall(originalMethod, args) {
    Function.prototype.getName = function () {
      return this.name || this.toString().match(/function\s*([^(]*)\(/)[1];
    };
    let name = originalMethod.getName();
    let arglistString = name + '(' + Array.from(args).toString() + ')';
    let records = this.recordCalls.get(arglistString);
    if (!records) {
      records = 0;
    }
    records++;
    this.recordCalls.set(arglistString, records);
  }

  mockFunc(originalObject, originalMethod) {
    let tmp = this;
    this.originalMethod = originalMethod;
    let f = function () {
      let args = arguments;
      let action = tmp.getReturnInfo(f, args);
      if (originalMethod) {
        tmp.recordMethodCall(originalMethod, args);
      }
      if (action) {
        return action.apply(this, args);
      }
    };

    f.container = null || originalObject;
    f.original = originalMethod || null;

    if (originalObject && originalMethod) {
      if (typeof originalMethod !== 'function') {
        throw new Error('Not a function');
      }
      var name = this.findName(originalObject, originalMethod);
      originalObject[name] = f;
      this.recordMockedMethod.set(name, originalMethod);
      f.propName = name;
      f.originalFromPrototype = this.isFunctionFromPrototype(
        f.original,
        originalObject,
        f.propName
      );
    }
    f.mocker = this;
    this.mFunctions.push(f);
    this.extend(f, new ExtendInterface(this));
    return f;
  }

  verify(methodName, argsArray) {
    if (!methodName) {
      throw Error('not a function name');
    }
    let a = this.recordCalls.get(methodName + '(' + argsArray.toString() + ')');
    return new VerificationMode(a ? a : 0);
  }

  mockObject(object) {
    if (!object || typeof object === 'string') {
      throw Error(`this ${object} cannot be mocked`);
    }
    const _this = this;
    let mockedObject = {};
    let keys = Reflect.ownKeys(object);
    keys
      .filter((key) => typeof Reflect.get(object, key) === 'function')
      .forEach((key) => {
        mockedObject[key] = object[key];
        mockedObject[key] = _this.mockFunc(mockedObject, mockedObject[key]);
      });
    return mockedObject;
  }
}

function ifMockedFunction(f) {
  if (
    Object.prototype.toString.call(f) !== '[object Function]' &&
    Object.prototype.toString.call(f) !== '[object AsyncFunction]'
  ) {
    throw Error('not a function');
  }
  if (!f.stub) {
    throw Error('not a mock function');
  }
  return true;
}

function when(f) {
  if (!ifMockedFunction(f)) {
    throw Error('not a mock function');
  }
  return f.stub.bind(f);
}

export { MockKit, when };
‘rEïßversion®mappings•namesßsourcesÆsourcesContent‹bîî    î  î  î  ‹ 4î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3‹ Dî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃC‹ Eî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃD‹ ,î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +îî   î î î ‹ 3î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2îî   î î î ‹ Hî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃG‹ Fî  	 î 	î 	î 	î 	î 	î 	î 	î 	î	 		î
 	
î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î  	 î! 	!î" 	"î# 	#î$ 	$î% 	%î& 	&î' 	'î( 	(î) 	)î* 	*î+ 	+î, 	,î- 	-î. 	.î/ 	/î0 	0î1 	1î2 	2î3 	3î4 	4î5 	5î6 	6î7 	7î8 	8î9 	9î: 	:î; 	;î< 	<î= 	=î> 	>î? 	?îÃ@ 	Ã@îÃA 	ÃAîÃB 	ÃBîÃC 	ÃCîÃD 	ÃDîÃE 	ÃE‹ Mî  
 î 
î 
î 
î 
î 
î 
î 
î 
î	 
	î
 

î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î  
 î! 
!î" 
"î# 
#î$ 
$î% 
%î& 
&î' 
'î( 
(î) 
)î* 
*î+ 
+î, 
,î- 
-î. 
.î/ 
/î0 
0î1 
1î2 
2î3 
3î4 
4î5 
5î6 
6î7 
7î8 
8î9 
9î: 
:î; 
;î< 
<î= 
=î> 
>î? 
?îÃ@ 
Ã@îÃA 
ÃAîÃB 
ÃBîÃC 
ÃCîÃD 
ÃDîÃE 
ÃEîÃF 
ÃFîÃG 
ÃGîÃH 
ÃHîÃI 
ÃIîÃJ 
ÃJîÃK 
ÃKîÃL 
ÃL‹ Hî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃG‹ #î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "ïî   î î î î íî   î ‹ 2î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1‹ 4î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3‹ 4î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3íî   î ‹ î   î î î î î î î î î	 	î
 
î î î î î î ‹ î   î î î î î î î î î	 	î
 
î î î î î î î î ‹ î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î ‹ î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î ‹ #î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "‹ %î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $‹ î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î ‹ *î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )ïî   î î î î íî   î úî   î î î î î î î î î	 	î
 
î ‹ î   î î î î î î î î î	 	î
 
î î î î î î î î ïî   î î î î íî    î  ùî  ! î !î !î !î !î !î !î !î !î	 !	î
 !
î !î !‹ î  " î "î "î "î "î "î "î "î "î	 "	î
 "
î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "‹ î  # î #î #î #î #î #î #î #î #î	 #	î
 #
î #î #î #î #î #î #î #î #î #î #î #‹ î  $ î $î $î $î $î $î $î $î $î	 $	î
 $
î $î $î $î $î $î $î $î $î $î $î $î $î $î $î $î $î $‹ %î  % î %î %î %î %î %î %î %î %î	 %	î
 %
î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î %î  % î! %!î" %"î# %#î$ %$‹ î  & î &î &î &î &î &î &î &î &î	 &	î
 &
î &î &î &î &î &î &î &î &î &î &î &î &î &î &î &‹ *î  ' î 'î 'î 'î 'î 'î 'î 'î 'î	 '	î
 '
î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î  ' î! '!î" '"î# '#î$ '$î% '%î& '&î' ''î( '(î) ')ïî  ( î (î (î (î (íî  ) î )‹ î  * î *î *î *î *î *î *î *î *î	 *	î
 *
î *î *î *î *î *‹ î  + î +î +î +î +î +î +î +î +î	 +	î
 +
î +î +î +î +î +î +î +î +‹ $î  , î ,î ,î ,î ,î ,î ,î ,î ,î	 ,	î
 ,
î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î ,î  , î! ,!î" ,"î# ,#‹ .î  - î -î -î -î -î -î -î -î -î	 -	î
 -
î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î -î  - î! -!î" -"î# -#î$ -$î% -%î& -&î' -'î( -(î) -)î* -*î+ -+î, -,î- --‹ î  . î .î .î .î .î .î .î .î .î	 .	î
 .
î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .óî  / î /î /î /î /î /î /íî  0 î 0‹ 3î  1 î 1î 1î 1î 1î 1î 1î 1î 1î	 1	î
 1
î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î  1 î! 1!î" 1"î# 1#î$ 1$î% 1%î& 1&î' 1'î( 1(î) 1)î* 1*î+ 1+î, 1,î- 1-î. 1.î/ 1/î0 10î1 11î2 12‹ .î  2 î 2î 2î 2î 2î 2î 2î 2î 2î	 2	î
 2
î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î 2î  2 î! 2!î" 2"î# 2#î$ 2$î% 2%î& 2&î' 2'î( 2(î) 2)î* 2*î+ 2+î, 2,î- 2-‹ î  3 î 3î 3î 3î 3î 3î 3î 3î 3î	 3	î
 3
î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3óî  4 î 4î 4î 4î 4î 4î 4‹ î  5 î 5î 5î 5î 5î 5î 5î 5î 5î	 5	î
 5
î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5‹ î  6 î 6î 6î 6î 6î 6î 6î 6î 6î	 6	î
 6
î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6óî  7 î 7î 7î 7î 7î 7î 7ïî  8 î 8î 8î 8î 8íî  9 î 9‹ î  : î :î :î :î :î :î :î :î :î	 :	î
 :
î :î :î :î :î :‹ î  ; î ;î ;î ;î ;î ;î ;î ;î ;î	 ;	î
 ;
î ;î ;î ;î ;î ;î ;‹ <î  < î <î <î <î <î <î <î <î <î	 <	î
 <
î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î  < î! <!î" <"î# <#î$ <$î% <%î& <&î' <'î( <(î) <)î* <*î+ <+î, <,î- <-î. <.î/ </î0 <0î1 <1î2 <2î3 <3î4 <4î5 <5î6 <6î7 <7î8 <8î9 <9î: <:î; <;óî  = î =î =î =î =î =î =‹ Aî  > î >î >î >î >î >î >î >î >î	 >	î
 >
î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î  > î! >!î" >"î# >#î$ >$î% >%î& >&î' >'î( >(î) >)î* >*î+ >+î, >,î- >-î. >.î/ >/î0 >0î1 >1î2 >2î3 >3î4 >4î5 >5î6 >6î7 >7î8 >8î9 >9î: >:î; >;î< ><î= >=î> >>î? >?îÃ@ >Ã@‹ 8î  ? î ?î ?î ?î ?î ?î ?î ?î ?î	 ?	î
 ?
î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î  ? î! ?!î" ?"î# ?#î$ ?$î% ?%î& ?&î' ?'î( ?(î) ?)î* ?*î+ ?+î, ?,î- ?-î. ?.î/ ?/î0 ?0î1 ?1î2 ?2î3 ?3î4 ?4î5 ?5î6 ?6î7 ?7óî  Ã@ î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@‹ Bî  ÃA î ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî	 ÃA	î
 ÃA
î ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî  ÃA î! ÃA!î" ÃA"î# ÃA#î$ ÃA$î% ÃA%î& ÃA&î' ÃA'î( ÃA(î) ÃA)î* ÃA*î+ ÃA+î, ÃA,î- ÃA-î. ÃA.î/ ÃA/î0 ÃA0î1 ÃA1î2 ÃA2î3 ÃA3î4 ÃA4î5 ÃA5î6 ÃA6î7 ÃA7î8 ÃA8î9 ÃA9î: ÃA:î; ÃA;î< ÃA<î= ÃA=î> ÃA>î? ÃA?îÃ@ ÃAÃ@îÃA ÃAÃA‹ î  ÃB î ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî	 ÃB	î
 ÃB
î ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃB‹ î  ÃC î ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî	 ÃC	î
 ÃC
î ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCôî  ÃD î ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDôî  ÃE î ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEïî  ÃF î ÃFî ÃFî ÃFî ÃFíî  ÃG î ÃG‹ î  ÃH î ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî	 ÃH	î
 ÃH
î ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃH‹ Aî  ÃI î ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî	 ÃI	î
 ÃI
î ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî  ÃI î! ÃI!î" ÃI"î# ÃI#î$ ÃI$î% ÃI%î& ÃI&î' ÃI'î( ÃI(î) ÃI)î* ÃI*î+ ÃI+î, ÃI,î- ÃI-î. ÃI.î/ ÃI/î0 ÃI0î1 ÃI1î2 ÃI2î3 ÃI3î4 ÃI4î5 ÃI5î6 ÃI6î7 ÃI7î8 ÃI8î9 ÃI9î: ÃI:î; ÃI;î< ÃI<î= ÃI=î> ÃI>î? ÃI?îÃ@ ÃIÃ@‹ 8î  ÃJ î ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî	 ÃJ	î
 ÃJ
î ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî ÃJî  ÃJ î! ÃJ!î" ÃJ"î# ÃJ#î$ ÃJ$î% ÃJ%î& ÃJ&î' ÃJ'î( ÃJ(î) ÃJ)î* ÃJ*î+ ÃJ+î, ÃJ,î- ÃJ-î. ÃJ.î/ ÃJ/î0 ÃJ0î1 ÃJ1î2 ÃJ2î3 ÃJ3î4 ÃJ4î5 ÃJ5î6 ÃJ6î7 ÃJ7óî  ÃK î ÃKî ÃKî ÃKî ÃKî ÃKî ÃK‹ )î  ÃL î ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî	 ÃL	î
 ÃL
î ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî  ÃL î! ÃL!î" ÃL"î# ÃL#î$ ÃL$î% ÃL%î& ÃL&î' ÃL'î( ÃL(‹ *î  ÃM î ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî	 ÃM	î
 ÃM
î ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî  ÃM î! ÃM!î" ÃM"î# ÃM#î$ ÃM$î% ÃM%î& ÃM&î' ÃM'î( ÃM(î) ÃM)óî  ÃN î ÃNî ÃNî ÃNî ÃNî ÃNî ÃN‹ <î  ÃO î ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî	 ÃO	î
 ÃO
î ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî  ÃO î! ÃO!î" ÃO"î# ÃO#î$ ÃO$î% ÃO%î& ÃO&î' ÃO'î( ÃO(î) ÃO)î* ÃO*î+ ÃO+î, ÃO,î- ÃO-î. ÃO.î/ ÃO/î0 ÃO0î1 ÃO1î2 ÃO2î3 ÃO3î4 ÃO4î5 ÃO5î6 ÃO6î7 ÃO7î8 ÃO8î9 ÃO9î: ÃO:î; ÃO;üî  ÃP î ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî	 ÃP	î
 ÃP
î ÃPî ÃPî ÃPî ÃP‹ "î  ÃQ î ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî	 ÃQ	î
 ÃQ
î ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî  ÃQ î! ÃQ!‹ @î  ÃR î ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî	 ÃR	î
 ÃR
î ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî  ÃR î! ÃR!î" ÃR"î# ÃR#î$ ÃR$î% ÃR%î& ÃR&î' ÃR'î( ÃR(î) ÃR)î* ÃR*î+ ÃR+î, ÃR,î- ÃR-î. ÃR.î/ ÃR/î0 ÃR0î1 ÃR1î2 ÃR2î3 ÃR3î4 ÃR4î5 ÃR5î6 ÃR6î7 ÃR7î8 ÃR8î9 ÃR9î: ÃR:î; ÃR;î< ÃR<î= ÃR=î> ÃR>î? ÃR?óî  ÃS î ÃSî ÃSî ÃSî ÃSî ÃSî ÃSïî  ÃT î ÃTî ÃTî ÃTî ÃTíî  ÃU î ÃU‹ î  ÃV î ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî	 ÃV	î
 ÃV
î ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃV‹ $î  ÃW î ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî	 ÃW	î
 ÃW
î ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî  ÃW î! ÃW!î" ÃW"î# ÃW#‹ 2î  ÃX î ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî	 ÃX	î
 ÃX
î ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî  ÃX î! ÃX!î" ÃX"î# ÃX#î$ ÃX$î% ÃX%î& ÃX&î' ÃX'î( ÃX(î) ÃX)î* ÃX*î+ ÃX+î, ÃX,î- ÃX-î. ÃX.î/ ÃX/î0 ÃX0î1 ÃX1‹ @î  ÃY î ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî	 ÃY	î
 ÃY
î ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî  ÃY î! ÃY!î" ÃY"î# ÃY#î$ ÃY$î% ÃY%î& ÃY&î' ÃY'î( ÃY(î) ÃY)î* ÃY*î+ ÃY+î, ÃY,î- ÃY-î. ÃY.î/ ÃY/î0 ÃY0î1 ÃY1î2 ÃY2î3 ÃY3î4 ÃY4î5 ÃY5î6 ÃY6î7 ÃY7î8 ÃY8î9 ÃY9î: ÃY:î; ÃY;î< ÃY<î= ÃY=î> ÃY>î? ÃY?‹ 2î  ÃZ î ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî	 ÃZ	î
 ÃZ
î ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî  ÃZ î! ÃZ!î" ÃZ"î# ÃZ#î$ ÃZ$î% ÃZ%î& ÃZ&î' ÃZ'î( ÃZ(î) ÃZ)î* ÃZ*î+ ÃZ+î, ÃZ,î- ÃZ-î. ÃZ.î/ ÃZ/î0 ÃZ0î1 ÃZ1‹ 0î  Ã[ î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î	 Ã[	î
 Ã[
î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î  Ã[ î! Ã[!î" Ã["î# Ã[#î$ Ã[$î% Ã[%î& Ã[&î' Ã['î( Ã[(î) Ã[)î* Ã[*î+ Ã[+î, Ã[,î- Ã[-î. Ã[.î/ Ã[/‹ 8î  Ã\ î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î	 Ã\	î
 Ã\
î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î  Ã\ î! Ã\!î" Ã\"î# Ã\#î$ Ã\$î% Ã\%î& Ã\&î' Ã\'î( Ã\(î) Ã\)î* Ã\*î+ Ã\+î, Ã\,î- Ã\-î. Ã\.î/ Ã\/î0 Ã\0î1 Ã\1î2 Ã\2î3 Ã\3î4 Ã\4î5 Ã\5î6 Ã\6î7 Ã\7‹ &î  Ã] î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î	 Ã]	î
 Ã]
î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î  Ã] î! Ã]!î" Ã]"î# Ã]#î$ Ã]$î% Ã]%‹ î  Ã^ î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î	 Ã^	î
 Ã^
î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^ïî  Ã_ î Ã_î Ã_î Ã_î Ã_íî  Ã` î Ã`‹ &î  Ãa î Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî	 Ãa	î
 Ãa
î Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî  Ãa î! Ãa!î" Ãa"î# Ãa#î$ Ãa$î% Ãa%‹ %î  Ãb î Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî	 Ãb	î
 Ãb
î Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî  Ãb î! Ãb!î" Ãb"î# Ãb#î$ Ãb$‹ î  Ãc î Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî	 Ãc	î
 Ãc
î Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãc‹ î  Ãd î Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî	 Ãd	î
 Ãd
î Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdóî  Ãe î Ãeî Ãeî Ãeî Ãeî Ãeî Ãe‹ î  Ãf î Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî	 Ãf	î
 Ãf
î Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãf‹ 'î  Ãg î Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî	 Ãg	î
 Ãg
î Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî  Ãg î! Ãg!î" Ãg"î# Ãg#î$ Ãg$î% Ãg%î& Ãg&‹ -î  Ãh î Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî	 Ãh	î
 Ãh
î Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî  Ãh î! Ãh!î" Ãh"î# Ãh#î$ Ãh$î% Ãh%î& Ãh&î' Ãh'î( Ãh(î) Ãh)î* Ãh*î+ Ãh+î, Ãh,ûî  Ãi î Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî	 Ãi	î
 Ãi
î Ãiî Ãiî Ãi‹ î  Ãj î Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî	 Ãj	î
 Ãj
î Ãjî Ãjî Ãjî Ãjî Ãjî Ãj‹ /î  Ãk î Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî	 Ãk	î
 Ãk
î Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî  Ãk î! Ãk!î" Ãk"î# Ãk#î$ Ãk$î% Ãk%î& Ãk&î' Ãk'î( Ãk(î) Ãk)î* Ãk*î+ Ãk+î, Ãk,î- Ãk-î. Ãk.‹ 1î  Ãl î Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî	 Ãl	î
 Ãl
î Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî  Ãl î! Ãl!î" Ãl"î# Ãl#î$ Ãl$î% Ãl%î& Ãl&î' Ãl'î( Ãl(î) Ãl)î* Ãl*î+ Ãl+î, Ãl,î- Ãl-î. Ãl.î/ Ãl/î0 Ãl0‹ "î  Ãm î Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî	 Ãm	î
 Ãm
î Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî  Ãm î! Ãm!‹ 8î  Ãn î Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî	 Ãn	î
 Ãn
î Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî  Ãn î! Ãn!î" Ãn"î# Ãn#î$ Ãn$î% Ãn%î& Ãn&î' Ãn'î( Ãn(î) Ãn)î* Ãn*î+ Ãn+î, Ãn,î- Ãn-î. Ãn.î/ Ãn/î0 Ãn0î1 Ãn1î2 Ãn2î3 Ãn3î4 Ãn4î5 Ãn5î6 Ãn6î7 Ãn7‹ î  Ão î Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî	 Ão	î
 Ão
î Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ãoî Ão‹ î  Ãp î Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî	 Ãp	î
 Ãp
î Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãp‹ î  Ãq î Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî	 Ãq	î
 Ãq
î Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãq‹ î  Ãr î Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî	 Ãr	î
 Ãr
î Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrõî  Ãs î Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî	 Ãs	î
 Ãs
ôî  Ãt î Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtóî  Ãu î Ãuî Ãuî Ãuî Ãuî Ãuî Ãu‹ %î  Ãv î Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî	 Ãv	î
 Ãv
î Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî  Ãv î! Ãv!î" Ãv"î# Ãv#î$ Ãv$‹ "î  Ãw î Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî	 Ãw	î
 Ãw
î Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî  Ãw î! Ãw!‹  î  Ãx î Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî	 Ãx	î
 Ãx
î Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxïî  Ãy î Ãyî Ãyî Ãyî Ãyíî  Ãz î Ãz‹ î  Ã{ î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î	 Ã{	î
 Ã{
î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{‹ %î  Ã| î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î	 Ã|	î
 Ã|
î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î  Ã| î! Ã|!î" Ã|"î# Ã|#î$ Ã|$‹ î  Ã} î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î	 Ã}	î
 Ã}
î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}‹ î  Ã~ î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î	 Ã~	î
 Ã~
î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~óî  Ã î Ãî Ãî Ãî Ãî Ãî Ã‹  î  ÃÄ î ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî	 ÃÄ	î
 ÃÄ
î ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄ‹ ;î  ÃÅ î ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî	 ÃÅ	î
 ÃÅ
î ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî  ÃÅ î! ÃÅ!î" ÃÅ"î# ÃÅ#î$ ÃÅ$î% ÃÅ%î& ÃÅ&î' ÃÅ'î( ÃÅ(î) ÃÅ)î* ÃÅ*î+ ÃÅ+î, ÃÅ,î- ÃÅ-î. ÃÅ.î/ ÃÅ/î0 ÃÅ0î1 ÃÅ1î2 ÃÅ2î3 ÃÅ3î4 ÃÅ4î5 ÃÅ5î6 ÃÅ6î7 ÃÅ7î8 ÃÅ8î9 ÃÅ9î: ÃÅ:‹ -î  ÃÇ î ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî	 ÃÇ	î
 ÃÇ
î ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî  ÃÇ î! ÃÇ!î" ÃÇ"î# ÃÇ#î$ ÃÇ$î% ÃÇ%î& ÃÇ&î' ÃÇ'î( ÃÇ(î) ÃÇ)î* ÃÇ*î+ ÃÇ+î, ÃÇ,‹ "î  ÃÉ î ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî	 ÃÉ	î
 ÃÉ
î ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî  ÃÉ î! ÃÉ!‹ 3î  ÃÑ î ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî	 ÃÑ	î
 ÃÑ
î ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî  ÃÑ î! ÃÑ!î" ÃÑ"î# ÃÑ#î$ ÃÑ$î% ÃÑ%î& ÃÑ&î' ÃÑ'î( ÃÑ(î) ÃÑ)î* ÃÑ*î+ ÃÑ+î, ÃÑ,î- ÃÑ-î. ÃÑ.î/ ÃÑ/î0 ÃÑ0î1 ÃÑ1î2 ÃÑ2íî  ÃÖ î ÃÖ‹ Aî  ÃÜ î ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî	 ÃÜ	î
 ÃÜ
î ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî  ÃÜ î! ÃÜ!î" ÃÜ"î# ÃÜ#î$ ÃÜ$î% ÃÜ%î& ÃÜ&î' ÃÜ'î( ÃÜ(î) ÃÜ)î* ÃÜ*î+ ÃÜ+î, ÃÜ,î- ÃÜ-î. ÃÜ.î/ ÃÜ/î0 ÃÜ0î1 ÃÜ1î2 ÃÜ2î3 ÃÜ3î4 ÃÜ4î5 ÃÜ5î6 ÃÜ6î7 ÃÜ7î8 ÃÜ8î9 ÃÜ9î: ÃÜ:î; ÃÜ;î< ÃÜ<î= ÃÜ=î> ÃÜ>î? ÃÜ?îÃ@ ÃÜÃ@‹ !î  Ãá î Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî	 Ãá	î
 Ãá
î Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî  Ãá ôî  Ãà î Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàûî  Ãâ î Ãâî Ãâî Ãâî Ãâî Ãâî Ãâî Ãâî Ãâî	 Ãâ	î
 Ãâ
î Ãâî Ãâî Ãâ‹ Pî  Ãä î Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî	 Ãä	î
 Ãä
î Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî  Ãä î! Ãä!î" Ãä"î# Ãä#î$ Ãä$î% Ãä%î& Ãä&î' Ãä'î( Ãä(î) Ãä)î* Ãä*î+ Ãä+î, Ãä,î- Ãä-î. Ãä.î/ Ãä/î0 Ãä0î1 Ãä1î2 Ãä2î3 Ãä3î4 Ãä4î5 Ãä5î6 Ãä6î7 Ãä7î8 Ãä8î9 Ãä9î: Ãä:î; Ãä;î< Ãä<î= Ãä=î> Ãä>î? Ãä?îÃ@ ÃäÃ@îÃA ÃäÃAîÃB ÃäÃBîÃC ÃäÃCîÃD ÃäÃDîÃE ÃäÃEîÃF ÃäÃFîÃG ÃäÃGîÃH ÃäÃHîÃI ÃäÃIîÃJ ÃäÃJîÃK ÃäÃKîÃL ÃäÃLîÃM ÃäÃMîÃN ÃäÃNîÃO ÃäÃOóî  Ãã î Ããî Ããî Ããî Ããî Ããî Ããíî  Ãå î Ãå‹ #î  Ãç î Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî	 Ãç	î
 Ãç
î Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî  Ãç î! Ãç!î" Ãç"ïî  Ãé î Ãéî Ãéî Ãéî Ãéíî  Ãè î Ãè‹ ?î  Ãê î Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî	 Ãê	î
 Ãê
î Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî  Ãê î! Ãê!î" Ãê"î# Ãê#î$ Ãê$î% Ãê%î& Ãê&î' Ãê'î( Ãê(î) Ãê)î* Ãê*î+ Ãê+î, Ãê,î- Ãê-î. Ãê.î/ Ãê/î0 Ãê0î1 Ãê1î2 Ãê2î3 Ãê3î4 Ãê4î5 Ãê5î6 Ãê6î7 Ãê7î8 Ãê8î9 Ãê9î: Ãê:î; Ãê;î< Ãê<î= Ãê=î> Ãê>‹ î  Ãë î Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî	 Ãë	î
 Ãë
î Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãë‹ #î  Ãí î Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî	 Ãí	î
 Ãí
î Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî  Ãí î! Ãí!î" Ãí"‹ 1î  Ãì î Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî	 Ãì	î
 Ãì
î Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî  Ãì î! Ãì!î" Ãì"î# Ãì#î$ Ãì$î% Ãì%î& Ãì&î' Ãì'î( Ãì(î) Ãì)î* Ãì*î+ Ãì+î, Ãì,î- Ãì-î. Ãì.î/ Ãì/î0 Ãì0úî  Ãî î Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî	 Ãî	î
 Ãî
î Ãî‹ î  Ãï î Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî	 Ãï	î
 Ãï
î Ãïî Ãïî Ãïî Ãïî Ãïî Ãï‹ (î  Ãñ î Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî	 Ãñ	î
 Ãñ
î Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî  Ãñ î! Ãñ!î" Ãñ"î# Ãñ#î$ Ãñ$î% Ãñ%î& Ãñ&î' Ãñ'‹ /î  Ãó î Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî	 Ãó	î
 Ãó
î Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî  Ãó î! Ãó!î" Ãó"î# Ãó#î$ Ãó$î% Ãó%î& Ãó&î' Ãó'î( Ãó(î) Ãó)î* Ãó*î+ Ãó+î, Ãó,î- Ãó-î. Ãó.‹ 3î  Ãò î Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî	 Ãò	î
 Ãò
î Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî Ãòî  Ãò î! Ãò!î" Ãò"î# Ãò#î$ Ãò$î% Ãò%î& Ãò&î' Ãò'î( Ãò(î) Ãò)î* Ãò*î+ Ãò+î, Ãò,î- Ãò-î. Ãò.î/ Ãò/î0 Ãò0î1 Ãò1î2 Ãò2õî  Ãô î Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî	 Ãô	î
 Ãô
‹  î  Ãö î Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî	 Ãö	î
 Ãö
î Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãö‹ î  Ãõ î Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî	 Ãõ	î
 Ãõ
î Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõôî  Ãú î Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúôî  Ãù î Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãù‹ î  Ãû î Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî	 Ãû	î
 Ãû
î Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûïî  Ãü î Ãüî Ãüî Ãüî Ãüíî  Ã† î Ã†‹ *î  Ã° î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î	 Ã°	î
 Ã°
î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î  Ã° î! Ã°!î" Ã°"î# Ã°#î$ Ã°$î% Ã°%î& Ã°&î' Ã°'î( Ã°(î) Ã°)‹ -î  Ã¢ î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î	 Ã¢	î
 Ã¢
î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î  Ã¢ î! Ã¢!î" Ã¢"î# Ã¢#î$ Ã¢$î% Ã¢%î& Ã¢&î' Ã¢'î( Ã¢(î) Ã¢)î* Ã¢*î+ Ã¢+î, Ã¢,‹ *î  Ã£ î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î	 Ã£	î
 Ã£
î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î  Ã£ î! Ã£!î" Ã£"î# Ã£#î$ Ã£$î% Ã£%î& Ã£&î' Ã£'î( Ã£(î) Ã£)‹ Nî  Ã§ î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î	 Ã§	î
 Ã§
î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î  Ã§ î! Ã§!î" Ã§"î# Ã§#î$ Ã§$î% Ã§%î& Ã§&î' Ã§'î( Ã§(î) Ã§)î* Ã§*î+ Ã§+î, Ã§,î- Ã§-î. Ã§.î/ Ã§/î0 Ã§0î1 Ã§1î2 Ã§2î3 Ã§3î4 Ã§4î5 Ã§5î6 Ã§6î7 Ã§7î8 Ã§8î9 Ã§9î: Ã§:î; Ã§;î< Ã§<î= Ã§=î> Ã§>î? Ã§?îÃ@ Ã§Ã@îÃA Ã§ÃAîÃB Ã§ÃBîÃC Ã§ÃCîÃD Ã§ÃDîÃE Ã§ÃEîÃF Ã§ÃFîÃG Ã§ÃGîÃH Ã§ÃHîÃI Ã§ÃIîÃJ Ã§ÃJîÃK Ã§ÃKîÃL Ã§ÃLîÃM Ã§ÃM‹ %î  Ã• î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î	 Ã•	î
 Ã•
î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î  Ã• î! Ã•!î" Ã•"î# Ã•#î$ Ã•$ôî  Ã¶ î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶‹ Lî  Ãß î Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî	 Ãß	î
 Ãß
î Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî  Ãß î! Ãß!î" Ãß"î# Ãß#î$ Ãß$î% Ãß%î& Ãß&î' Ãß'î( Ãß(î) Ãß)î* Ãß*î+ Ãß+î, Ãß,î- Ãß-î. Ãß.î/ Ãß/î0 Ãß0î1 Ãß1î2 Ãß2î3 Ãß3î4 Ãß4î5 Ãß5î6 Ãß6î7 Ãß7î8 Ãß8î9 Ãß9î: Ãß:î; Ãß;î< Ãß<î= Ãß=î> Ãß>î? Ãß?îÃ@ ÃßÃ@îÃA ÃßÃAîÃB ÃßÃBîÃC ÃßÃCîÃD ÃßÃDîÃE ÃßÃEîÃF ÃßÃFîÃG ÃßÃGîÃH ÃßÃHîÃI ÃßÃIîÃJ ÃßÃJîÃK ÃßÃK‹ +î  Ã® î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î	 Ã®	î
 Ã®
î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î  Ã® î! Ã®!î" Ã®"î# Ã®#î$ Ã®$î% Ã®%î& Ã®&î' Ã®'î( Ã®(î) Ã®)î* Ã®*‹ î  Ã© î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î	 Ã©	î
 Ã©
î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©‹ 7î  Ã™ î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î	 Ã™	î
 Ã™
î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î  Ã™ î! Ã™!î" Ã™"î# Ã™#î$ Ã™$î% Ã™%î& Ã™&î' Ã™'î( Ã™(î) Ã™)î* Ã™*î+ Ã™+î, Ã™,î- Ã™-î. Ã™.î/ Ã™/î0 Ã™0î1 Ã™1î2 Ã™2î3 Ã™3î4 Ã™4î5 Ã™5î6 Ã™6‹ î  Ã´ î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î	 Ã´	î
 Ã´
î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´ôî  Ã¨ î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨‹ î  Ã≠ î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î	 Ã≠	î
 Ã≠
î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠ôî  ÃÆ î ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆïî  ÃØ î ÃØî ÃØî ÃØî ÃØíî  Ã∞ î Ã∞‹ "î  Ã± î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î	 Ã±	î
 Ã±
î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î  Ã± î! Ã±!‹ î  Ã≤ î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î	 Ã≤	î
 Ã≤
î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤‹ î  Ã≥ î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î	 Ã≥	î
 Ã≥
î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥óî  Ã¥ î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥‹ ,î  Ãµ î Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî	 Ãµ	î
 Ãµ
î Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî  Ãµ î! Ãµ!î" Ãµ"î# Ãµ#î$ Ãµ$î% Ãµ%î& Ãµ&î' Ãµ'î( Ãµ(î) Ãµ)î* Ãµ*î+ Ãµ+‹ î  Ã∂ î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î	 Ã∂	î
 Ã∂
î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂óî  Ã∑ î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑‹ ;î  Ã∏ î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î	 Ã∏	î
 Ã∏
î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î  Ã∏ î! Ã∏!î" Ã∏"î# Ã∏#î$ Ã∏$î% Ã∏%î& Ã∏&î' Ã∏'î( Ã∏(î) Ã∏)î* Ã∏*î+ Ã∏+î, Ã∏,î- Ã∏-î. Ã∏.î/ Ã∏/î0 Ã∏0î1 Ã∏1î2 Ã∏2î3 Ã∏3î4 Ã∏4î5 Ã∏5î6 Ã∏6î7 Ã∏7î8 Ã∏8î9 Ã∏9î: Ã∏:‹ .î  Ãπ î Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî	 Ãπ	î
 Ãπ
î Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî  Ãπ î! Ãπ!î" Ãπ"î# Ãπ#î$ Ãπ$î% Ãπ%î& Ãπ&î' Ãπ'î( Ãπ(î) Ãπ)î* Ãπ*î+ Ãπ+î, Ãπ,î- Ãπ-‹ î  Ã∫ î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î	 Ã∫	î
 Ã∫
î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫ôî  Ãª î Ãªî Ãªî Ãªî Ãªî Ãªî Ãªî Ãªî Ãª‹ 1î  Ãº î Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî	 Ãº	î
 Ãº
î Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî  Ãº î! Ãº!î" Ãº"î# Ãº#î$ Ãº$î% Ãº%î& Ãº&î' Ãº'î( Ãº(î) Ãº)î* Ãº*î+ Ãº+î, Ãº,î- Ãº-î. Ãº.î/ Ãº/î0 Ãº0‹ 9î  ÃΩ î ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî	 ÃΩ	î
 ÃΩ
î ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî  ÃΩ î! ÃΩ!î" ÃΩ"î# ÃΩ#î$ ÃΩ$î% ÃΩ%î& ÃΩ&î' ÃΩ'î( ÃΩ(î) ÃΩ)î* ÃΩ*î+ ÃΩ+î, ÃΩ,î- ÃΩ-î. ÃΩ.î/ ÃΩ/î0 ÃΩ0î1 ÃΩ1î2 ÃΩ2î3 ÃΩ3î4 ÃΩ4î5 ÃΩ5î6 ÃΩ6î7 ÃΩ7î8 ÃΩ8‹ î  Ãæ î Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî	 Ãæ	î
 Ãæ
î Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæõî  Ãø î Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî	 Ãø	î
 Ãø
ôî  Ã¿ î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿‹ î  Ã¡ î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î	 Ã¡	î
 Ã¡
î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡óî  Ã¬ î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬‹ Iî  Ã√ î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î	 Ã√	î
 Ã√
î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î  Ã√ î! Ã√!î" Ã√"î# Ã√#î$ Ã√$î% Ã√%î& Ã√&î' Ã√'î( Ã√(î) Ã√)î* Ã√*î+ Ã√+î, Ã√,î- Ã√-î. Ã√.î/ Ã√/î0 Ã√0î1 Ã√1î2 Ã√2î3 Ã√3î4 Ã√4î5 Ã√5î6 Ã√6î7 Ã√7î8 Ã√8î9 Ã√9î: Ã√:î; Ã√;î< Ã√<î= Ã√=î> Ã√>î? Ã√?îÃ@ Ã√Ã@îÃA Ã√ÃAîÃB Ã√ÃBîÃC Ã√ÃCîÃD Ã√ÃDîÃE Ã√ÃEîÃF Ã√ÃFîÃG Ã√ÃGîÃH Ã√ÃH‹ Gî  Ãƒ î Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî	 Ãƒ	î
 Ãƒ
î Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî  Ãƒ î! Ãƒ!î" Ãƒ"î# Ãƒ#î$ Ãƒ$î% Ãƒ%î& Ãƒ&î' Ãƒ'î( Ãƒ(î) Ãƒ)î* Ãƒ*î+ Ãƒ+î, Ãƒ,î- Ãƒ-î. Ãƒ.î/ Ãƒ/î0 Ãƒ0î1 Ãƒ1î2 Ãƒ2î3 Ãƒ3î4 Ãƒ4î5 Ãƒ5î6 Ãƒ6î7 Ãƒ7î8 Ãƒ8î9 Ãƒ9î: Ãƒ:î; Ãƒ;î< Ãƒ<î= Ãƒ=î> Ãƒ>î? Ãƒ?îÃ@ ÃƒÃ@îÃA ÃƒÃAîÃB ÃƒÃBîÃC ÃƒÃCîÃD ÃƒÃDîÃE ÃƒÃEîÃF ÃƒÃF‹ *î  Ã≈ î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î	 Ã≈	î
 Ã≈
î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î  Ã≈ î! Ã≈!î" Ã≈"î# Ã≈#î$ Ã≈$î% Ã≈%î& Ã≈&î' Ã≈'î( Ã≈(î) Ã≈)‹ *î  Ã∆ î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î	 Ã∆	î
 Ã∆
î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î  Ã∆ î! Ã∆!î" Ã∆"î# Ã∆#î$ Ã∆$î% Ã∆%î& Ã∆&î' Ã∆'î( Ã∆(î) Ã∆)‹ ,î  Ã« î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î	 Ã«	î
 Ã«
î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î  Ã« î! Ã«!î" Ã«"î# Ã«#î$ Ã«$î% Ã«%î& Ã«&î' Ã«'î( Ã«(î) Ã«)î* Ã«*î+ Ã«+‹ î  Ã» î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î	 Ã»	î
 Ã»
î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»ôî  Ã… î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…‹  î  Ã  î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î	 Ã 	î
 Ã 
î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã ‹ Uî  ÃÀ î ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî	 ÃÀ	î
 ÃÀ
î ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî  ÃÀ î! ÃÀ!î" ÃÀ"î# ÃÀ#î$ ÃÀ$î% ÃÀ%î& ÃÀ&î' ÃÀ'î( ÃÀ(î) ÃÀ)î* ÃÀ*î+ ÃÀ+î, ÃÀ,î- ÃÀ-î. ÃÀ.î/ ÃÀ/î0 ÃÀ0î1 ÃÀ1î2 ÃÀ2î3 ÃÀ3î4 ÃÀ4î5 ÃÀ5î6 ÃÀ6î7 ÃÀ7î8 ÃÀ8î9 ÃÀ9î: ÃÀ:î; ÃÀ;î< ÃÀ<î= ÃÀ=î> ÃÀ>î? ÃÀ?îÃ@ ÃÀÃ@îÃA ÃÀÃAîÃB ÃÀÃBîÃC ÃÀÃCîÃD ÃÀÃDîÃE ÃÀÃEîÃF ÃÀÃFîÃG ÃÀÃGîÃH ÃÀÃHîÃI ÃÀÃIîÃJ ÃÀÃJîÃK ÃÀÃKîÃL ÃÀÃLîÃM ÃÀÃMîÃN ÃÀÃNîÃO ÃÀÃOîÃP ÃÀÃPîÃQ ÃÀÃQîÃR ÃÀÃRîÃS ÃÀÃSîÃT ÃÀÃT‹ î  ÃÃ î ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî	 ÃÃ	î
 ÃÃ
î ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃõî  ÃÕ î ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî	 ÃÕ	î
 ÃÕ
ôî  ÃŒ î ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒ‹ î  Ãœ î Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî	 Ãœ	î
 Ãœ
î Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœóî  Ã– î Ã–î Ã–î Ã–î Ã–î Ã–î Ã–‹ Gî  Ã— î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î	 Ã—	î
 Ã—
î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î  Ã— î! Ã—!î" Ã—"î# Ã—#î$ Ã—$î% Ã—%î& Ã—&î' Ã—'î( Ã—(î) Ã—)î* Ã—*î+ Ã—+î, Ã—,î- Ã—-î. Ã—.î/ Ã—/î0 Ã—0î1 Ã—1î2 Ã—2î3 Ã—3î4 Ã—4î5 Ã—5î6 Ã—6î7 Ã—7î8 Ã—8î9 Ã—9î: Ã—:î; Ã—;î< Ã—<î= Ã—=î> Ã—>î? Ã—?îÃ@ Ã—Ã@îÃA Ã—ÃAîÃB Ã—ÃBîÃC Ã—ÃCîÃD Ã—ÃDîÃE Ã—ÃEîÃF Ã—ÃF‹ Eî  Ã“ î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î	 Ã“	î
 Ã“
î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î  Ã“ î! Ã“!î" Ã“"î# Ã“#î$ Ã“$î% Ã“%î& Ã“&î' Ã“'î( Ã“(î) Ã“)î* Ã“*î+ Ã“+î, Ã“,î- Ã“-î. Ã“.î/ Ã“/î0 Ã“0î1 Ã“1î2 Ã“2î3 Ã“3î4 Ã“4î5 Ã“5î6 Ã“6î7 Ã“7î8 Ã“8î9 Ã“9î: Ã“:î; Ã“;î< Ã“<î= Ã“=î> Ã“>î? Ã“?îÃ@ Ã“Ã@îÃA Ã“ÃAîÃB Ã“ÃBîÃC Ã“ÃCîÃD Ã“ÃD‹ 0î  Ã” î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î	 Ã”	î
 Ã”
î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î  Ã” î! Ã”!î" Ã”"î# Ã”#î$ Ã”$î% Ã”%î& Ã”&î' Ã”'î( Ã”(î) Ã”)î* Ã”*î+ Ã”+î, Ã”,î- Ã”-î. Ã”.î/ Ã”/‹ î  Ã‘ î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î	 Ã‘	î
 Ã‘
î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘óî  Ã’ î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’‹ Iî  Ã÷ î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î	 Ã÷	î
 Ã÷
î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î  Ã÷ î! Ã÷!î" Ã÷"î# Ã÷#î$ Ã÷$î% Ã÷%î& Ã÷&î' Ã÷'î( Ã÷(î) Ã÷)î* Ã÷*î+ Ã÷+î, Ã÷,î- Ã÷-î. Ã÷.î/ Ã÷/î0 Ã÷0î1 Ã÷1î2 Ã÷2î3 Ã÷3î4 Ã÷4î5 Ã÷5î6 Ã÷6î7 Ã÷7î8 Ã÷8î9 Ã÷9î: Ã÷:î; Ã÷;î< Ã÷<î= Ã÷=î> Ã÷>î? Ã÷?îÃ@ Ã÷Ã@îÃA Ã÷ÃAîÃB Ã÷ÃBîÃC Ã÷ÃCîÃD Ã÷ÃDîÃE Ã÷ÃEîÃF Ã÷ÃFîÃG Ã÷ÃGîÃH Ã÷ÃH‹ Gî  Ã◊ î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î	 Ã◊	î
 Ã◊
î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î  Ã◊ î! Ã◊!î" Ã◊"î# Ã◊#î$ Ã◊$î% Ã◊%î& Ã◊&î' Ã◊'î( Ã◊(î) Ã◊)î* Ã◊*î+ Ã◊+î, Ã◊,î- Ã◊-î. Ã◊.î/ Ã◊/î0 Ã◊0î1 Ã◊1î2 Ã◊2î3 Ã◊3î4 Ã◊4î5 Ã◊5î6 Ã◊6î7 Ã◊7î8 Ã◊8î9 Ã◊9î: Ã◊:î; Ã◊;î< Ã◊<î= Ã◊=î> Ã◊>î? Ã◊?îÃ@ Ã◊Ã@îÃA Ã◊ÃAîÃB Ã◊ÃBîÃC Ã◊ÃCîÃD Ã◊ÃDîÃE Ã◊ÃEîÃF Ã◊ÃF‹ 2î  Ãÿ î Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî	 Ãÿ	î
 Ãÿ
î Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî  Ãÿ î! Ãÿ!î" Ãÿ"î# Ãÿ#î$ Ãÿ$î% Ãÿ%î& Ãÿ&î' Ãÿ'î( Ãÿ(î) Ãÿ)î* Ãÿ*î+ Ãÿ+î, Ãÿ,î- Ãÿ-î. Ãÿ.î/ Ãÿ/î0 Ãÿ0î1 Ãÿ1‹ î  ÃŸ î ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî	 ÃŸ	î
 ÃŸ
î ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸóî  Ã⁄ î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄‹ î  Ã€ î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î	 Ã€	î
 Ã€
î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€ïî  Ã‹ î Ã‹î Ã‹î Ã‹î Ã‹íî  Ã› î Ã›‹ î  Ãﬁ î Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî	 Ãﬁ	î
 Ãﬁ
î Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁ‹ 0î  Ãﬂ î Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî	 Ãﬂ	î
 Ãﬂ
î Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî Ãﬂî  Ãﬂ î! Ãﬂ!î" Ãﬂ"î# Ãﬂ#î$ Ãﬂ$î% Ãﬂ%î& Ãﬂ&î' Ãﬂ'î( Ãﬂ(î) Ãﬂ)î* Ãﬂ*î+ Ãﬂ+î, Ãﬂ,î- Ãﬂ-î. Ãﬂ.î/ Ãﬂ/‹ î  Ã‡ î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î	 Ã‡	î
 Ã‡
î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡‹ î  Ã· î Ã·î Ã·î Ã·î Ã·î Ã·î Ã·î Ã·î Ã·î	 Ã·	î
 Ã·
î Ã·î Ã·î Ã·î Ã·î Ã·‹ Dî  Ã‚ î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î	 Ã‚	î
 Ã‚
î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î  Ã‚ î! Ã‚!î" Ã‚"î# Ã‚#î$ Ã‚$î% Ã‚%î& Ã‚&î' Ã‚'î( Ã‚(î) Ã‚)î* Ã‚*î+ Ã‚+î, Ã‚,î- Ã‚-î. Ã‚.î/ Ã‚/î0 Ã‚0î1 Ã‚1î2 Ã‚2î3 Ã‚3î4 Ã‚4î5 Ã‚5î6 Ã‚6î7 Ã‚7î8 Ã‚8î9 Ã‚9î: Ã‚:î; Ã‚;î< Ã‚<î= Ã‚=î> Ã‚>î? Ã‚?îÃ@ Ã‚Ã@îÃA Ã‚ÃAîÃB Ã‚ÃBîÃC Ã‚ÃC‹ -î  Ã„ î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î	 Ã„	î
 Ã„
î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î  Ã„ î! Ã„!î" Ã„"î# Ã„#î$ Ã„$î% Ã„%î& Ã„&î' Ã„'î( Ã„(î) Ã„)î* Ã„*î+ Ã„+î, Ã„,‹ #î  Ã‰ î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î	 Ã‰	î
 Ã‰
î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î  Ã‰ î! Ã‰!î" Ã‰"‹ î  ÃÂ î ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî	 ÃÂ	î
 ÃÂ
î ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂõî  ÃÊ î ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî	 ÃÊ	î
 ÃÊ
õî  ÃÁ î ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî	 ÃÁ	î
 ÃÁ
‹ î  ÃË î ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî	 ÃË	î
 ÃË
î ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËïî  ÃÈ î ÃÈî ÃÈî ÃÈî ÃÈíî  ÃÍ î ÃÍ‹ 5î  ÃÎ î ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî	 ÃÎ	î
 ÃÎ
î ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî ÃÎî  ÃÎ î! ÃÎ!î" ÃÎ"î# ÃÎ#î$ ÃÎ$î% ÃÎ%î& ÃÎ&î' ÃÎ'î( ÃÎ(î) ÃÎ)î* ÃÎ*î+ ÃÎ+î, ÃÎ,î- ÃÎ-î. ÃÎ.î/ ÃÎ/î0 ÃÎ0î1 ÃÎ1î2 ÃÎ2î3 ÃÎ3î4 ÃÎ4öî  ÃÏ î ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî	 ÃÏ	‹ +î  ÃÌ î ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî	 ÃÌ	î
 ÃÌ
î ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî  ÃÌ î! ÃÌ!î" ÃÌ"î# ÃÌ#î$ ÃÌ$î% ÃÌ%î& ÃÌ&î' ÃÌ'î( ÃÌ(î) ÃÌ)î* ÃÌ*‹ 5î  ÃÓ î ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî	 ÃÓ	î
 ÃÓ
î ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî  ÃÓ î! ÃÓ!î" ÃÓ"î# ÃÓ#î$ ÃÓ$î% ÃÓ%î& ÃÓ&î' ÃÓ'î( ÃÓ(î) ÃÓ)î* ÃÓ*î+ ÃÓ+î, ÃÓ,î- ÃÓ-î. ÃÓ.î/ ÃÓ/î0 ÃÓ0î1 ÃÓ1î2 ÃÓ2î3 ÃÓ3î4 ÃÓ4ôî  ÃÔ î ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔ‹ ?î  Ã î Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî	 Ã	î
 Ã
î Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî  Ã î! Ã!î" Ã"î# Ã#î$ Ã$î% Ã%î& Ã&î' Ã'î( Ã(î) Ã)î* Ã*î+ Ã+î, Ã,î- Ã-î. Ã.î/ Ã/î0 Ã0î1 Ã1î2 Ã2î3 Ã3î4 Ã4î5 Ã5î6 Ã6î7 Ã7î8 Ã8î9 Ã9î: Ã:î; Ã;î< Ã<î= Ã=î> Ã>óî  ÃÒ î ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒ‹ î  ÃÚ î ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî	 ÃÚ	î
 ÃÚ
î ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚïî  ÃÛ î ÃÛî ÃÛî ÃÛî ÃÛíî  ÃÙ î ÃÙ‹ !î  Ãı î Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî	 Ãı	î
 Ãı
î Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî Ãıî  Ãı ‹ $î  Ãˆ î Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî	 Ãˆ	î
 Ãˆ
î Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî  Ãˆ î! Ãˆ!î" Ãˆ"î# Ãˆ#‹ (î  Ã˜ î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î	 Ã˜	î
 Ã˜
î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î  Ã˜ î! Ã˜!î" Ã˜"î# Ã˜#î$ Ã˜$î% Ã˜%î& Ã˜&î' Ã˜'‹ î  Ã¯ î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î	 Ã¯	î
 Ã¯
î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯ôî  Ã˘ î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘‹ <î  Ã˙ î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î	 Ã˙	î
 Ã˙
î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î  Ã˙ î! Ã˙!î" Ã˙"î# Ã˙#î$ Ã˙$î% Ã˙%î& Ã˙&î' Ã˙'î( Ã˙(î) Ã˙)î* Ã˙*î+ Ã˙+î, Ã˙,î- Ã˙-î. Ã˙.î/ Ã˙/î0 Ã˙0î1 Ã˙1î2 Ã˙2î3 Ã˙3î4 Ã˙4î5 Ã˙5î6 Ã˙6î7 Ã˙7î8 Ã˙8î9 Ã˙9î: Ã˙:î; Ã˙;‹ Aî  Ã˚ î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î	 Ã˚	î
 Ã˚
î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î  Ã˚ î! Ã˚!î" Ã˚"î# Ã˚#î$ Ã˚$î% Ã˚%î& Ã˚&î' Ã˚'î( Ã˚(î) Ã˚)î* Ã˚*î+ Ã˚+î, Ã˚,î- Ã˚-î. Ã˚.î/ Ã˚/î0 Ã˚0î1 Ã˚1î2 Ã˚2î3 Ã˚3î4 Ã˚4î5 Ã˚5î6 Ã˚6î7 Ã˚7î8 Ã˚8î9 Ã˚9î: Ã˚:î; Ã˚;î< Ã˚<î= Ã˚=î> Ã˚>î? Ã˚?îÃ@ Ã˚Ã@óî  Ã¸ î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸‹ î  Ã˝ î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î	 Ã˝	î
 Ã˝
î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝ïî  Ã˛ î Ã˛î Ã˛î Ã˛î Ã˛íî  Ãˇ î Ãˇ‹ ,î  Õ  î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î	 Õ 	î
 Õ 
î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î  Õ  î! Õ !î" Õ "î# Õ #î$ Õ $î% Õ %î& Õ &î' Õ 'î( Õ (î) Õ )î* Õ *î+ Õ +‹ 0î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/‹ Mî  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/î0 Õ0î1 Õ1î2 Õ2î3 Õ3î4 Õ4î5 Õ5î6 Õ6î7 Õ7î8 Õ8î9 Õ9î: Õ:î; Õ;î< Õ<î= Õ=î> Õ>î? Õ?îÃ@ ÕÃ@îÃA ÕÃAîÃB ÕÃBîÃC ÕÃCîÃD ÕÃDîÃE ÕÃEîÃF ÕÃFîÃG ÕÃGîÃH ÕÃHîÃI ÕÃIîÃJ ÕÃJîÃK ÕÃKîÃL ÕÃLòî  Õ î Õî Õî Õî Õî Õî Õî Õ‹ *î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)‹ Iî  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/î0 Õ0î1 Õ1î2 Õ2î3 Õ3î4 Õ4î5 Õ5î6 Õ6î7 Õ7î8 Õ8î9 Õ9î: Õ:î; Õ;î< Õ<î= Õ=î> Õ>î? Õ?îÃ@ ÕÃ@îÃA ÕÃAîÃB ÕÃBîÃC ÕÃCîÃD ÕÃDîÃE ÕÃEîÃF ÕÃFîÃG ÕÃGîÃH ÕÃH‹ 8î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/î0 Õ0î1 Õ1î2 Õ2î3 Õ3î4 Õ4î5 Õ5î6 Õ6î7 Õ7‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õóî  Õ	 î Õ	î Õ	î Õ	î Õ	î Õ	î Õ	‹ î  Õ
 î Õ
î Õ
î Õ
î Õ
î Õ
î Õ
î Õ
î Õ
î	 Õ
	î
 Õ

î Õ
î Õ
î Õ
î Õ
î Õ
‹ 3î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/î0 Õ0î1 Õ1î2 Õ2ïî  Õ î Õî Õî Õî Õíî  Õ î Õ‹ .î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ +î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ 0î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ 5î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/î0 Õ0î1 Õ1î2 Õ2î3 Õ3î4 Õ4ôî  Õ î Õî Õî Õî Õî Õî Õî Õî Õ‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ *î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)ôî  Õ î Õî Õî Õî Õî Õî Õî Õî Õòî  Õ î Õî Õî Õî Õî Õî Õî Õíî  Õ î Õ‹ +î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*‹ *î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)íî  Õ î Õ‹ -î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,‹ 3î  Õ  î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î	 Õ 	î
 Õ 
î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î  Õ  î! Õ !î" Õ "î# Õ #î$ Õ $î% Õ %î& Õ &î' Õ 'î( Õ (î) Õ )î* Õ *î+ Õ +î, Õ ,î- Õ -î. Õ .î/ Õ /î0 Õ 0î1 Õ 1î2 Õ 2‹ ,î  Õ! î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î	 Õ!	î
 Õ!
î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î Õ!î  Õ! î! Õ!!î" Õ!"î# Õ!#î$ Õ!$î% Õ!%î& Õ!&î' Õ!'î( Õ!(î) Õ!)î* Õ!*î+ Õ!+ôî  Õ" î Õ"î Õ"î Õ"î Õ"î Õ"î Õ"î Õ"î Õ"‹ Aî  Õ# î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î	 Õ#	î
 Õ#
î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î Õ#î  Õ# î! Õ#!î" Õ#"î# Õ##î$ Õ#$î% Õ#%î& Õ#&î' Õ#'î( Õ#(î) Õ#)î* Õ#*î+ Õ#+î, Õ#,î- Õ#-î. Õ#.î/ Õ#/î0 Õ#0î1 Õ#1î2 Õ#2î3 Õ#3î4 Õ#4î5 Õ#5î6 Õ#6î7 Õ#7î8 Õ#8î9 Õ#9î: Õ#:î; Õ#;î< Õ#<î= Õ#=î> Õ#>î? Õ#?îÃ@ Õ#Ã@‹ !î  Õ$ î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î	 Õ$	î
 Õ$
î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î Õ$î  Õ$ ‹ :î  Õ% î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î	 Õ%	î
 Õ%
î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î Õ%î  Õ% î! Õ%!î" Õ%"î# Õ%#î$ Õ%$î% Õ%%î& Õ%&î' Õ%'î( Õ%(î) Õ%)î* Õ%*î+ Õ%+î, Õ%,î- Õ%-î. Õ%.î/ Õ%/î0 Õ%0î1 Õ%1î2 Õ%2î3 Õ%3î4 Õ%4î5 Õ%5î6 Õ%6î7 Õ%7î8 Õ%8î9 Õ%9‹ î  Õ& î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î	 Õ&	î
 Õ&
î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&î Õ&‹ ?î  Õ' î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î	 Õ'	î
 Õ'
î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î Õ'î  Õ' î! Õ'!î" Õ'"î# Õ'#î$ Õ'$î% Õ'%î& Õ'&î' Õ''î( Õ'(î) Õ')î* Õ'*î+ Õ'+î, Õ',î- Õ'-î. Õ'.î/ Õ'/î0 Õ'0î1 Õ'1î2 Õ'2î3 Õ'3î4 Õ'4î5 Õ'5î6 Õ'6î7 Õ'7î8 Õ'8î9 Õ'9î: Õ':î; Õ';î< Õ'<î= Õ'=î> Õ'>‹ î  Õ( î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î	 Õ(	î
 Õ(
î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(î Õ(‹ î  Õ) î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î	 Õ)	î
 Õ)
î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)‹ î  Õ* î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*î	 Õ*	î
 Õ*
î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*î Õ*öî  Õ+ î Õ+î Õ+î Õ+î Õ+î Õ+î Õ+î Õ+î Õ+î	 Õ+	óî  Õ, î Õ,î Õ,î Õ,î Õ,î Õ,î Õ,‹ î  Õ- î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î	 Õ-	î
 Õ-
î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-î Õ-‹ î  Õ. î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î	 Õ.	î
 Õ.
î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.î Õ.‹ 0î  Õ/ î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î	 Õ/	î
 Õ/
î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î Õ/î  Õ/ î! Õ/!î" Õ/"î# Õ/#î$ Õ/$î% Õ/%î& Õ/&î' Õ/'î( Õ/(î) Õ/)î* Õ/*î+ Õ/+î, Õ/,î- Õ/-î. Õ/.î/ Õ//üî  Õ0 î Õ0î Õ0î Õ0î Õ0î Õ0î Õ0î Õ0î Õ0î	 Õ0	î
 Õ0
î Õ0î Õ0î Õ0î Õ0ïî  Õ1 î Õ1î Õ1î Õ1î Õ1íî  Õ2 î Õ2‹ #î  Õ3 î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î	 Õ3	î
 Õ3
î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î Õ3î  Õ3 î! Õ3!î" Õ3"‹ î  Õ4 î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î	 Õ4	î
 Õ4
î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4î Õ4‹ +î  Õ5 î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î	 Õ5	î
 Õ5
î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î Õ5î  Õ5 î! Õ5!î" Õ5"î# Õ5#î$ Õ5$î% Õ5%î& Õ5&î' Õ5'î( Õ5(î) Õ5)î* Õ5*óî  Õ6 î Õ6î Õ6î Õ6î Õ6î Õ6î Õ6‹ Rî  Õ7 î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î	 Õ7	î
 Õ7
î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î Õ7î  Õ7 î! Õ7!î" Õ7"î# Õ7#î$ Õ7$î% Õ7%î& Õ7&î' Õ7'î( Õ7(î) Õ7)î* Õ7*î+ Õ7+î, Õ7,î- Õ7-î. Õ7.î/ Õ7/î0 Õ70î1 Õ71î2 Õ72î3 Õ73î4 Õ74î5 Õ75î6 Õ76î7 Õ77î8 Õ78î9 Õ79î: Õ7:î; Õ7;î< Õ7<î= Õ7=î> Õ7>î? Õ7?îÃ@ Õ7Ã@îÃA Õ7ÃAîÃB Õ7ÃBîÃC Õ7ÃCîÃD Õ7ÃDîÃE Õ7ÃEîÃF Õ7ÃFîÃG Õ7ÃGîÃH Õ7ÃHîÃI Õ7ÃIîÃJ Õ7ÃJîÃK Õ7ÃKîÃL Õ7ÃLîÃM Õ7ÃMîÃN Õ7ÃNîÃO Õ7ÃOîÃP Õ7ÃPîÃQ Õ7ÃQ‹ -î  Õ8 î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î	 Õ8	î
 Õ8
î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î Õ8î  Õ8 î! Õ8!î" Õ8"î# Õ8#î$ Õ8$î% Õ8%î& Õ8&î' Õ8'î( Õ8(î) Õ8)î* Õ8*î+ Õ8+î, Õ8,ïî  Õ9 î Õ9î Õ9î Õ9î Õ9íî  Õ: î Õ:‹ î  Õ; î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î	 Õ;	î
 Õ;
î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;î Õ;‹ 2î  Õ< î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î	 Õ<	î
 Õ<
î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î Õ<î  Õ< î! Õ<!î" Õ<"î# Õ<#î$ Õ<$î% Õ<%î& Õ<&î' Õ<'î( Õ<(î) Õ<)î* Õ<*î+ Õ<+î, Õ<,î- Õ<-î. Õ<.î/ Õ</î0 Õ<0î1 Õ<1‹ 7î  Õ= î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î	 Õ=	î
 Õ=
î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î Õ=î  Õ= î! Õ=!î" Õ="î# Õ=#î$ Õ=$î% Õ=%î& Õ=&î' Õ='î( Õ=(î) Õ=)î* Õ=*î+ Õ=+î, Õ=,î- Õ=-î. Õ=.î/ Õ=/î0 Õ=0î1 Õ=1î2 Õ=2î3 Õ=3î4 Õ=4î5 Õ=5î6 Õ=6óî  Õ> î Õ>î Õ>î Õ>î Õ>î Õ>î Õ>‹ î  Õ? î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î	 Õ?	î
 Õ?
î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?î Õ?‹ î  Õ@ î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î	 Õ@	î
 Õ@
î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@î Õ@‹ )î  ÕA î ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî	 ÕA	î
 ÕA
î ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî ÕAî  ÕA î! ÕA!î" ÕA"î# ÕA#î$ ÕA$î% ÕA%î& ÕA&î' ÕA'î( ÕA(öî  ÕB î ÕBî ÕBî ÕBî ÕBî ÕBî ÕBî ÕBî ÕBî	 ÕB	‹ Hî  ÕC î ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî	 ÕC	î
 ÕC
î ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî ÕCî  ÕC î! ÕC!î" ÕC"î# ÕC#î$ ÕC$î% ÕC%î& ÕC&î' ÕC'î( ÕC(î) ÕC)î* ÕC*î+ ÕC+î, ÕC,î- ÕC-î. ÕC.î/ ÕC/î0 ÕC0î1 ÕC1î2 ÕC2î3 ÕC3î4 ÕC4î5 ÕC5î6 ÕC6î7 ÕC7î8 ÕC8î9 ÕC9î: ÕC:î; ÕC;î< ÕC<î= ÕC=î> ÕC>î? ÕC?îÃ@ ÕCÃ@îÃA ÕCÃAîÃB ÕCÃBîÃC ÕCÃCîÃD ÕCÃDîÃE ÕCÃEîÃF ÕCÃFîÃG ÕCÃG‹ î  ÕD î ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî	 ÕD	î
 ÕD
î ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕDî ÕD‹ *î  ÕE î ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî	 ÕE	î
 ÕE
î ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî ÕEî  ÕE î! ÕE!î" ÕE"î# ÕE#î$ ÕE$î% ÕE%î& ÕE&î' ÕE'î( ÕE(î) ÕE)‹ Nî  ÕF î ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî	 ÕF	î
 ÕF
î ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî ÕFî  ÕF î! ÕF!î" ÕF"î# ÕF#î$ ÕF$î% ÕF%î& ÕF&î' ÕF'î( ÕF(î) ÕF)î* ÕF*î+ ÕF+î, ÕF,î- ÕF-î. ÕF.î/ ÕF/î0 ÕF0î1 ÕF1î2 ÕF2î3 ÕF3î4 ÕF4î5 ÕF5î6 ÕF6î7 ÕF7î8 ÕF8î9 ÕF9î: ÕF:î; ÕF;î< ÕF<î= ÕF=î> ÕF>î? ÕF?îÃ@ ÕFÃ@îÃA ÕFÃAîÃB ÕFÃBîÃC ÕFÃCîÃD ÕFÃDîÃE ÕFÃEîÃF ÕFÃFîÃG ÕFÃGîÃH ÕFÃHîÃI ÕFÃIîÃJ ÕFÃJîÃK ÕFÃKîÃL ÕFÃLîÃM ÕFÃMõî  ÕG î ÕGî ÕGî ÕGî ÕGî ÕGî ÕGî ÕGî ÕGî	 ÕG	î
 ÕG
‹ î  ÕH î ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî	 ÕH	î
 ÕH
î ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHî ÕHïî  ÕI î ÕIî ÕIî ÕIî ÕIìî  ÕJ î ÕJî ÕJíî  ÕK î ÕK‹  î  ÕL î ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî	 ÕL	î
 ÕL
î ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLî ÕLòî  ÕM î ÕMî ÕMî ÕMî ÕMî ÕMî ÕMî ÕM‹ Bî  ÕN î ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî	 ÕN	î
 ÕN
î ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî ÕNî  ÕN î! ÕN!î" ÕN"î# ÕN#î$ ÕN$î% ÕN%î& ÕN&î' ÕN'î( ÕN(î) ÕN)î* ÕN*î+ ÕN+î, ÕN,î- ÕN-î. ÕN.î/ ÕN/î0 ÕN0î1 ÕN1î2 ÕN2î3 ÕN3î4 ÕN4î5 ÕN5î6 ÕN6î7 ÕN7î8 ÕN8î9 ÕN9î: ÕN:î; ÕN;î< ÕN<î= ÕN=î> ÕN>î? ÕN?îÃ@ ÕNÃ@îÃA ÕNÃA‹ Dî  ÕO î ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî	 ÕO	î
 ÕO
î ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî ÕOî  ÕO î! ÕO!î" ÕO"î# ÕO#î$ ÕO$î% ÕO%î& ÕO&î' ÕO'î( ÕO(î) ÕO)î* ÕO*î+ ÕO+î, ÕO,î- ÕO-î. ÕO.î/ ÕO/î0 ÕO0î1 ÕO1î2 ÕO2î3 ÕO3î4 ÕO4î5 ÕO5î6 ÕO6î7 ÕO7î8 ÕO8î9 ÕO9î: ÕO:î; ÕO;î< ÕO<î= ÕO=î> ÕO>î? ÕO?îÃ@ ÕOÃ@îÃA ÕOÃAîÃB ÕOÃBîÃC ÕOÃCóî  ÕP î ÕPî ÕPî ÕPî ÕPî ÕPî ÕP‹ $î  ÕQ î ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî	 ÕQ	î
 ÕQ
î ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî ÕQî  ÕQ î! ÕQ!î" ÕQ"î# ÕQ#ïî  ÕR î ÕRî ÕRî ÕRî ÕR‹ î  ÕS î ÕSî ÕSî ÕSî ÕSî ÕSî ÕSî ÕSî ÕSî	 ÕS	î
 ÕS
î ÕSî ÕSî ÕSî ÕSî ÕSî ÕSî ÕS‹ )î  ÕT î ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî	 ÕT	î
 ÕT
î ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî ÕTî  ÕT î! ÕT!î" ÕT"î# ÕT#î$ ÕT$î% ÕT%î& ÕT&î' ÕT'î( ÕT(ïî  ÕU î ÕUî ÕUî ÕUî ÕU‹ î  ÕV î ÕVî ÕVî ÕVî ÕVî ÕVî ÕVî ÕVî ÕVî	 ÕV	î
 ÕV
î ÕVî ÕVî ÕVî ÕVî ÕVìî  ÕW î ÕWî ÕWíî  ÕX î ÕX‹ î  ÕY î ÕYî ÕYî ÕYî ÕYî ÕYî ÕYî ÕYî ÕYî	 ÕY	î
 ÕY
î ÕYî ÕYî ÕYî ÕYî ÕYî ÕYî ÕYî ÕYî ÕY‹ î  ÕZ î ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî	 ÕZ	î
 ÕZ
î ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZî ÕZ‹ )î  Õ[ î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î	 Õ[	î
 Õ[
î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î Õ[î  Õ[ î! Õ[!î" Õ["î# Õ[#î$ Õ[$î% Õ[%î& Õ[&î' Õ['î( Õ[(ïî  Õ\ î Õ\î Õ\î Õ\î Õ\‹ î  Õ] î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î	 Õ]	î
 Õ]
î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]î Õ]ìî  Õ^ î Õ^î Õ^íî  Õ_ î Õ_‹ î  Õ` î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î	 Õ`	î
 Õ`
î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`î Õ`êêëŸßD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\MockKit.jsë⁄'≠/*
 * Copyright (c) 2022-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import ExtendInterface from './ExtendInterface';
import VerificationMode from './VerificationMode';
import ArgumentMatchers from './ArgumentMatchers';

class MockKit {
  constructor() {
    this.mFunctions = [];
    this.stubs = new Map();
    this.recordCalls = new Map();
    this.currentSetKey = new Map();
    this.mockObj = null;
    this.recordMockedMethod = new Map();
  }

  init() {
    this.reset();
  }

  reset() {
    this.mFunctions = [];
    this.stubs = {};
    this.recordCalls = {};
    this.currentSetKey = new Map();
    this.mockObj = null;
    this.recordMockedMethod = new Map();
  }

  clearAll() {
    this.reset();
    var props = Object.keys(this);
    for (var i = 0; i < props.length; i++) {
      delete this[props[i]];
    }

    var props = Object.getOwnPropertyNames(this);
    for (var i = 0; i < props.length; i++) {
      delete this[props[i]];
    }
    for (var key in this) {
      delete this[key];
    }
  }

  clear(obj) {
    if (!obj) {
      throw Error('Please enter an object to be cleaned');
    }
    if (typeof obj !== 'object' && typeof obj !== 'function') {
      throw new Error('Not a object or static class');
    }
    this.recordMockedMethod.forEach(function (value, key, map) {
      if (key) {
        obj[key] = value;
      }
    });
  }

  ignoreMock(obj, method) {
    if (typeof obj !== 'object' && typeof obj !== 'function') {
      throw new Error('Not a object or static class');
    }
    if (typeof method !== 'function') {
      throw new Error('Not a function');
    }
    let og = this.recordMockedMethod.get(method.propName);
    if (og) {
      obj[method.propName] = og;
      this.recordMockedMethod.set(method.propName, undefined);
    }
  }

  extend(dest, source) {
    dest['stub'] = source['stub'];
    dest['afterReturn'] = source['afterReturn'];
    dest['afterReturnNothing'] = source['afterReturnNothing'];
    dest['afterAction'] = source['afterAction'];
    dest['afterThrow'] = source['afterThrow'];
    dest['stubMockedCall'] = source['stubMockedCall'];
    dest['clear'] = source['clear'];
    return dest;
  }

  stubApply(f, params, returnInfo) {
    let values = this.stubs.get(f);
    if (!values) {
      values = new Map();
    }
    let key = params[0];
    if (typeof key === 'undefined') {
      key = 'anonymous-mock-' + f.propName;
    } else {
      key = [];
      const matcher = new ArgumentMatchers();
      for (let i = 0; i < params.length; i++) {
        const param = params[i];
        const matchKey = matcher.matcheStubKey(param);
        if (matchKey) {
          key.push(matchKey);
        } else {
          key.push(param);
        }
      }
    }
    this.currentSetKey.set(f, key);
    values.set(key, returnInfo);
    this.stubs.set(f, values);
  }

  getReturnInfo(f, params) {
    let values = this.stubs.get(f);
    if (!values) {
      return undefined;
    }
    let returnKet = params[0];
    const anonymousName = 'anonymous-mock-' + f.propName;
    if (typeof returnKet === 'undefined') {
      returnKet = anonymousName;
      let stubSetKey = this.currentSetKey.get(f);

      if (stubSetKey && (typeof (returnKet) !== 'undefined')) {
        returnKet = stubSetKey;
      }
    } else {
      returnKet = this.getReturnKet(values, params, returnKet, anonymousName);
    }

    return values.get(returnKet);
  }

  getReturnKet(values, params, defaultValue, anonymousName) {
    let flag = true;
    let returnKet = defaultValue;
    values.forEach((value, paramsKey, map) => {
      if (
        flag &&
        paramsKey !== anonymousName &&
        paramsKey.length === params.length &&
        this.checkIsRightValue(paramsKey, params)
      ) {
        returnKet = paramsKey;
        flag = false;
      }
    });
    return returnKet;
  }

  checkIsRightValue(paramsKey, params) {
    const matcher = new ArgumentMatchers();
    return paramsKey.every((key, j) => {
      if (ArgumentMatchers.isRegExp(key) && typeof params[j] === 'string') {
        return key.test(params[j]);
      }
      const matchKey = matcher.matcheReturnKey(params[j], undefined, key);
      if (matchKey && matchKey === key) {
        return true;
      } else if (this.checkIsEqual(params[j], key)) {
        return true;
      }
      return false;
    });
  }

  checkIsEqual(value1, value2) {
    if (value1 === value2) {
      return true;
    }
    if (typeof value1 !== typeof value2) {
      return false;
    }
    if (Array.isArray(value1) && Array.isArray(value2)) {
      if (value1.length !== value2.length) {
        return false;
      }
      for (let i = 0; i < value1.length; i++) {
        if (!this.checkIsEqual(value1[i], value2[i])) {
          return false;
        }
      }
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object Object]' &&
      Object.prototype.toString.call(value2) === '[object Object]') {
      const keys1 = Object.keys(value1);
      const keys2 = Object.keys(value2);
      if (keys1.length !== keys2.length) {
        return false;
      }
      for (let key of keys1) {
        if (!keys2.includes(key) || !this.checkIsEqual(value1[key], value2[key])) {
          return false;
        }
      }
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object Date]' &&
      Object.prototype.toString.call(value2) === '[object Date]' &&
      value1.getTime() === value2.getTime()) {
      return true;
    }
    if (Object.prototype.toString.call(value1) === '[object RegExp]' &&
      Object.prototype.toString.call(value2) === '[object RegExp]' &&
      value1.toString() === value2.toString()) {
      return true;
    }
    return false;
  }

  findName(obj, value) {
    let properties = this.findProperties(obj);
    let name = null;
    properties
      .filter((item) => item !== 'caller' && item !== 'arguments')
      .forEach(function (va1, idx, array) {
        if (obj[va1] === value) {
          name = va1;
        }
      });
    return name;
  }

  isFunctionFromPrototype(f, container, propName) {
    if (
      container.constructor !== Object &&
      container.constructor.prototype !== container
    ) {
      return container.constructor.prototype[propName] === f;
    }
    return false;
  }

  findProperties(obj, ...arg) {
    function getProperty(newObj) {
      if (newObj.__proto__ === null) {
        return [];
      }
      let properties = Object.getOwnPropertyNames(newObj);
      return [...properties, ...getProperty(newObj.__proto__)];
    }
    return getProperty(obj);
  }

  recordMethodCall(originalMethod, args) {
    Function.prototype.getName = function () {
      return this.name || this.toString().match(/function\s*([^(]*)\(/)[1];
    };
    let name = originalMethod.getName();
    let arglistString = name + '(' + Array.from(args).toString() + ')';
    let records = this.recordCalls.get(arglistString);
    if (!records) {
      records = 0;
    }
    records++;
    this.recordCalls.set(arglistString, records);
  }

  mockFunc(originalObject, originalMethod) {
    let tmp = this;
    this.originalMethod = originalMethod;
    let f = function () {
      let args = arguments;
      let action = tmp.getReturnInfo(f, args);
      if (originalMethod) {
        tmp.recordMethodCall(originalMethod, args);
      }
      if (action) {
        return action.apply(this, args);
      }
    };

    f.container = null || originalObject;
    f.original = originalMethod || null;

    if (originalObject && originalMethod) {
      if (typeof originalMethod !== 'function') {
        throw new Error('Not a function');
      }
      var name = this.findName(originalObject, originalMethod);
      originalObject[name] = f;
      this.recordMockedMethod.set(name, originalMethod);
      f.propName = name;
      f.originalFromPrototype = this.isFunctionFromPrototype(
        f.original,
        originalObject,
        f.propName
      );
    }
    f.mocker = this;
    this.mFunctions.push(f);
    this.extend(f, new ExtendInterface(this));
    return f;
  }

  verify(methodName, argsArray) {
    if (!methodName) {
      throw Error('not a function name');
    }
    let a = this.recordCalls.get(methodName + '(' + argsArray.toString() + ')');
    return new VerificationMode(a ? a : 0);
  }

  mockObject(object) {
    if (!object || typeof object === 'string') {
      throw Error(`this ${object} cannot be mocked`);
    }
    const _this = this;
    let mockedObject = {};
    let keys = Reflect.ownKeys(object);
    keys
      .filter((key) => typeof Reflect.get(object, key) === 'function')
      .forEach((key) => {
        mockedObject[key] = object[key];
        mockedObject[key] = _this.mockFunc(mockedObject, mockedObject[key]);
      });
    return mockedObject;
  }
}

function ifMockedFunction(f) {
  if (
    Object.prototype.toString.call(f) !== '[object Function]' &&
    Object.prototype.toString.call(f) !== '[object AsyncFunction]'
  ) {
    throw Error('not a function');
  }
  if (!f.stub) {
    throw Error('not a mock function');
  }
  return true;
}

function when(f) {
  if (!ifMockedFunction(f)) {
    throw Error('not a mock function');
  }
  return f.stub.bind(f);
}

export { MockKit, when };
‘rFì≤./ArgumentMatchers≤./VerificationMode±./ExtendInterface‘rGó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA¬Ÿ∞D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\ArgumentMatchers.jsA√™oh-resolve¬GA¬Ÿ∞D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\VerificationMode.jsA√™oh-resolve¬GA¬ŸØD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\PullLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\ExtendInterface.jsA√™oh-resolve¬ë‘rHíßmissing¶plugin√¶genAbc¬ê‘  ‘rIî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêë‘rJñ§type•start£end´declaration™specifiers¶source∂ExportNamedDeclarationÕ'íÕ'´¿í‘rKï§type•start£end•local®exportedØExportSpecifierÕ'õÕ'¢‘rLî§type•start£end§name™IdentifierÕ'õÕ'¢ßMockKitL™IdentifierÕ'õÕ'¢ßMockKitKØExportSpecifierÕ'§Õ'®L™IdentifierÕ'§Õ'®§whenL™IdentifierÕ'§Õ'®§when¿ì‘rMï§type•start£end™specifiers¶source±ImportDeclarationÕuÕ•ë‘rNî§type•start£end•local∂ImportDefaultSpecifierÕ|ÕãL™IdentifierÕ|ÕãØExtendInterface‘rOï§type•start£end•value£rawßLiteralÕëÕ§±./ExtendInterface≥'./ExtendInterface'M±ImportDeclarationÕßÕŸëN∂ImportDefaultSpecifierÕÆÕæL™IdentifierÕÆÕæ∞VerificationModeOßLiteralÕƒÕÿ≤./VerificationMode¥'./VerificationMode'M±ImportDeclarationÕ€ÕëN∂ImportDefaultSpecifierÕ‚ÕÚL™IdentifierÕ‚ÕÚ∞ArgumentMatchersOßLiteralÕ¯Õ≤./ArgumentMatchers¥'./ArgumentMatchers'
‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄.?/*
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import Core from './src/main/core';
import { DEFAULT, TestType, Size, Level, TAG, PrintTag } from './src/main/Constant';
import DataDriver from './src/main/module/config/DataDriver';
import ExpectExtend from './src/main/module/assert/ExpectExtend';
import OhReport from './src/main/module/report/OhReport';
import SysTestKit from './src/main/module/kit/SysTestKit';
import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, beforeItSpecified, afterItSpecified, xdescribe, xit } from './src/main/interface';
import { MockKit, when } from './src/main/module/mock/MockKit';
import ArgumentMatchers from './src/main/module/mock/ArgumentMatchers';
import worker from '@ohos.worker';

class Hypium {
    static context = new Map();
    static setData(data) {
        const core = Core.getInstance();
        const dataDriver = new DataDriver({ data });
        core.addService('dataDriver', dataDriver);
    }

    static setTimeConfig(systemTime) {
        SysTestKit.systemTime = systemTime;
    }
	
    static set(key, value) {
        Hypium.context.set(key, value);
    }

    static get(key) {
        return Hypium.context.get(key);
    }

    static hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite) {
        const core = Core.getInstance();
        const expectExtend = new ExpectExtend({
            'id': 'extend'
        });
        core.addService('expect', expectExtend);
        const ohReport = new OhReport({
            'delegator': abilityDelegator,
            'abilityDelegatorArguments': abilityDelegatorArguments
        });
        SysTestKit.delegator = abilityDelegator;
        core.addService('report', ohReport);
        core.init();
        core.subscribeEvent('spec', ohReport);
        core.subscribeEvent('suite', ohReport);
        core.subscribeEvent('task', ohReport);
        const configService = core.getDefaultService('config');
        if (abilityDelegatorArguments !== null) {
            let testParameters = configService.translateParams(abilityDelegatorArguments.parameters);
            console.info(`${TAG}parameters:${JSON.stringify(testParameters)}`);
            configService.setConfig(testParameters);
        }
        testsuite();
        core.execute(abilityDelegator);
    }
    static async hypiumInitWorkers(abilityDelegator, scriptURL, workerNum = 8, params) {
        console.info(`${TAG}, hypiumInitWorkers call,${scriptURL}`);
        let workerPromiseArray = [];

        // ÂºÄÂßãÁªüËÆ°Êó∂Èó¥
        let startTime = await SysTestKit.getRealTime();
        for (let i = 0; i < workerNum; i++) {
            // ÂàõÂª∫workerÁ∫øÁ®ã
            const workerPromise = Hypium.createWorkerPromise(scriptURL, i, params);
            workerPromiseArray.push(workerPromise);
        }
        const ret = {total: 0, failure: 0, error: 0, pass: 0, ignore: 0, duration: 0};
        Promise.all(workerPromiseArray).then(async (items) => {
            console.info(`${TAG}, all result from workers, ${JSON.stringify(items)}`);
            let allItemList = new Array();
            // ÁªüËÆ°ÊâßË°åÁªìÊûú
            Hypium.handleWorkerTestResult(ret, allItemList, items);
            console.info(`${TAG}, all it result, ${JSON.stringify(allItemList)}`);
            // ÁªüËÆ°Áî®‰æãÊâßË°åÁªìÊûú
            const retResult = {total: 0, failure: 0, error: 0, pass: 0, ignore: 0, duration: 0};
            // Ê†áËÆ∞Áî®‰æãÊâßË°åÁªìÊûú
            Hypium.configWorkerItTestResult(retResult, allItemList);
            // ÊâìÂç∞Áî®‰æãÁªìÊûú
            Hypium.printWorkerTestResult(abilityDelegator, allItemList);
            // Áî®‰æãÊâßË°åÂÆåÊàêÁªüËÆ°Êó∂Èó¥
            let endTime = await SysTestKit.getRealTime();
            const taskConsuming = endTime - startTime;
            const message =
                `\n${PrintTag.OHOS_REPORT_ALL_RESULT}: stream=Test run: runTimes: ${ret.total},total: ${retResult.total}, Failure: ${retResult.failure}, Error: ${retResult.error}, Pass: ${retResult.pass}, Ignore: ${retResult.ignore}` +
                    `\n${PrintTag.OHOS_REPORT_ALL_CODE}: ${retResult.failure > 0 || retResult.error > 0 ? -1 : 0}` +
                    `\n${PrintTag.OHOS_REPORT_ALL_STATUS}: taskconsuming=${taskConsuming > 0 ? taskConsuming : ret.duration}`;
            abilityDelegator.printSync(message);
            console.info(`${TAG}, [end] you worker test`);
            abilityDelegator.finishTest('you worker test finished!!!', 0, () => {});
        }).catch((e) => {
            console.info(`${TAG}, [end] error you worker test, ${JSON.stringify(e)}`);
            abilityDelegator.finishTest('you worker test error finished!!!', 0, () => {});
        }).finally(() => {
            console.info(`${TAG}, all promise finally end`);
        });
    }
    // ÂàõÂª∫workerÁ∫øÁ®ã
    static createWorkerPromise(scriptURL, i, params) {
        console.info(`${TAG}, createWorkerPromiser, ${scriptURL}, ${i}`);
        const workerPromise = new Promise((resolve, reject) => {
            const workerInstance = new worker.ThreadWorker(scriptURL, {name: `worker_${i}`});
            console.info(`${TAG}, send data to worker`);
            // ÂèëÈÄÅÊï∞ÊçÆÂà∞workerÁ∫øÁ®ã‰∏≠
            workerInstance.postMessage(params);
            workerInstance.onmessage = function (e) {
                let currentThreadName = e.data?.currentThreadName;
                console.info(`${TAG}, receview data from ${currentThreadName}, ${JSON.stringify(e.data)}`);
                //
                resolve(e.data?.summary);
                console.info(`${TAG}, ${currentThreadName} finish`);
                workerInstance.terminate();
            };
            workerInstance.onerror = function (e) {
                console.info(`${TAG}, worker error, ${JSON.stringify(e)}`);
                reject(e);
                workerInstance.terminate();
            };
            workerInstance.onmessageerror = function (e) {
                console.info(`${TAG}, worker message error, ${JSON.stringify(e)}`);
                reject(e);
                workerInstance.terminate();
            };
        });
        return workerPromise;
    }
    static handleWorkerTestResult(ret, allItemList, items) {
        console.info(`${TAG}, handleWorkerTestResult, ${JSON.stringify(items)}`);
        for (const {total, failure, error, pass, ignore, duration, itItemList} of items) {
            ret.total += total;
            ret.failure += failure;
            ret.error += error;
            ret.pass += pass;
            ret.ignore += ignore;
            ret.duration += duration;
            Hypium.handleItResult(allItemList, itItemList);
        }
    }
    static handleItResult(allItemList, itItemList) {
        // ÈÅçÂéÜÊâÄÊúâÁöÑÁî®‰æãÁªìÊûúÁªüËÆ°ÊúÄÁªàÁªìÊûú
        for (const {currentThreadName, description, result} of itItemList) {
            let item = allItemList.find((it) => it.description === description);
            if (item) {
                let itResult = item.result;
                // ÂΩìÂú®worker‰∏≠Âá∫Áé∞‰∏ÄÊ¨°failureÂ∞±Ê†áËÆ∞‰∏∫failure, Âá∫Áé∞‰∏ÄÊ¨°errorÂ∞±Ê†áËÆ∞‰∏∫error, ÊâÄÊúâÁ∫øÁ®ãÈÉΩpassÊâçÊ†áËÆ∞‰∏∫pass
                if (itResult === 0) {
                    item.result = result;
                    item.currentThreadName = currentThreadName;
                }
            } else {
                let it = {
                    description: description,
                    currentThreadName: currentThreadName,
                    result: result
                };
                allItemList.push(it);
            }
        }
    }
    static configWorkerItTestResult(retResult, allItemList) {
        console.info(`${TAG}, configWorkerItTestResult, ${JSON.stringify(allItemList)}`);
        for (const {currentThreadName, description, result} of allItemList) {
            console.info(`${TAG}, description, ${description}, result,${result}`);
            retResult.total ++;
            if (result === 0) {
                retResult.pass ++;
            } else if (result === -1) {
                retResult.error ++;
            } else if (result === -2) {
                retResult.failure ++;
            } else {
                retResult.ignore ++;
            }
        }
    }
    static printWorkerTestResult(abilityDelegator, allItemList) {
        console.info(`${TAG}, printWorkerTestResult, ${JSON.stringify(allItemList)}`);
        let index = 1;
        for (const {currentThreadName, description, result} of allItemList) {
            console.info(`${TAG}, description print, ${description}, result,${result}`);
            let itArray = description.split('#');
            let des;
            let itName;
            if (itArray.length > 1) {
                des = itArray[0];
                itName = itArray[1];
            } else if (itArray.length > 1) {
                des = itArray[0];
                itName = itArray[0];
            } else {
                des = 'undefined';
                itName = 'undefined';
            }

            let msg = `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: class=${des}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: test=${itName}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: current=${index}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: CODE=${result}`;
            abilityDelegator.printSync(msg);
            index ++;
        }
    }
    static hypiumWorkerTest(abilityDelegator, abilityDelegatorArguments, testsuite, workerPort) {
        console.info(`${TAG}, hypiumWorkerTest call`);
        SysTestKit.workerPort = workerPort;
        let currentWorkerName = workerPort.name;
        console.info(`${TAG}, hypiumWorkerTest_currentWorkerName: ${currentWorkerName}`);
        Hypium.hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite);

    }

    static registerAssert(customAssertion) {
        const core = Core.getInstance();
        const expectService = core.getDefaultService('expect');
        let matchers = {};
        matchers[customAssertion.name] = customAssertion;
        expectService.addMatchers(matchers);
        expectService.customMatchers.push(customAssertion.name);
        console.info(`${TAG}success to register the ${customAssertion.name}`);
    }

    static unregisterAssert(customAssertion) {
        const core = Core.getInstance();
        const expectService = core.getDefaultService('expect');
        let customAssertionName = typeof customAssertion === 'function' ? customAssertion.name : customAssertion;
        expectService.removeMatchers(customAssertionName);
        console.info(`${TAG}success to unregister the ${customAssertionName}`);
    }

}

export {
    Hypium,
    Core,
    DEFAULT,
    TestType,
    Size,
    Level,
    DataDriver,
    ExpectExtend,
    OhReport,
    SysTestKit,
    describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, beforeItSpecified, afterItSpecified, xdescribe, xit,
    MockKit, when,
    ArgumentMatchers
};¬öŸóD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\core.jsŸõD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\Constant.jsŸ´D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\config\DataDriver.jsŸ≠D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\assert\ExpectExtend.jsŸ©D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\report\OhReport.jsŸ®D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\kit\SysTestKit.jsŸúD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\interface.jsŸ¶D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\MockKit.jsŸØD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\ArgumentMatchers.jsŸf hvigor_ignore_D:_Program Files_Huawei_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.worker.d.tsŸèD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\index.js‘rBô±isLocalDependencyØisNodeEntryFileßpkgPathßpkgName™pkgVersion±belongProjectPath±dependencyPkgInfo®commonjsØhostModulesInfo¬√ŸÜD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium¨@ohos/hypium¶1.0.24ŸID:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking‘rCíßpkgName™pkgVersion¨@ohos/hypium¶1.0.24‘rDíØhasNamedExports™isCommonJS√¬í‘rEí≤hostDependencyNameÆhostModuleName¨@ohos/hypium™entry_testE¨@ohos/hypium™entry_test√⁄.?/*
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import Core from './src/main/core';
import { DEFAULT, TestType, Size, Level, TAG, PrintTag } from './src/main/Constant';
import DataDriver from './src/main/module/config/DataDriver';
import ExpectExtend from './src/main/module/assert/ExpectExtend';
import OhReport from './src/main/module/report/OhReport';
import SysTestKit from './src/main/module/kit/SysTestKit';
import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, beforeItSpecified, afterItSpecified, xdescribe, xit } from './src/main/interface';
import { MockKit, when } from './src/main/module/mock/MockKit';
import ArgumentMatchers from './src/main/module/mock/ArgumentMatchers';
import worker from '@ohos.worker';

class Hypium {
    static context = new Map();
    static setData(data) {
        const core = Core.getInstance();
        const dataDriver = new DataDriver({ data });
        core.addService('dataDriver', dataDriver);
    }

    static setTimeConfig(systemTime) {
        SysTestKit.systemTime = systemTime;
    }
	
    static set(key, value) {
        Hypium.context.set(key, value);
    }

    static get(key) {
        return Hypium.context.get(key);
    }

    static hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite) {
        const core = Core.getInstance();
        const expectExtend = new ExpectExtend({
            'id': 'extend'
        });
        core.addService('expect', expectExtend);
        const ohReport = new OhReport({
            'delegator': abilityDelegator,
            'abilityDelegatorArguments': abilityDelegatorArguments
        });
        SysTestKit.delegator = abilityDelegator;
        core.addService('report', ohReport);
        core.init();
        core.subscribeEvent('spec', ohReport);
        core.subscribeEvent('suite', ohReport);
        core.subscribeEvent('task', ohReport);
        const configService = core.getDefaultService('config');
        if (abilityDelegatorArguments !== null) {
            let testParameters = configService.translateParams(abilityDelegatorArguments.parameters);
            console.info(`${TAG}parameters:${JSON.stringify(testParameters)}`);
            configService.setConfig(testParameters);
        }
        testsuite();
        core.execute(abilityDelegator);
    }
    static async hypiumInitWorkers(abilityDelegator, scriptURL, workerNum = 8, params) {
        console.info(`${TAG}, hypiumInitWorkers call,${scriptURL}`);
        let workerPromiseArray = [];

        // ÂºÄÂßãÁªüËÆ°Êó∂Èó¥
        let startTime = await SysTestKit.getRealTime();
        for (let i = 0; i < workerNum; i++) {
            // ÂàõÂª∫workerÁ∫øÁ®ã
            const workerPromise = Hypium.createWorkerPromise(scriptURL, i, params);
            workerPromiseArray.push(workerPromise);
        }
        const ret = {total: 0, failure: 0, error: 0, pass: 0, ignore: 0, duration: 0};
        Promise.all(workerPromiseArray).then(async (items) => {
            console.info(`${TAG}, all result from workers, ${JSON.stringify(items)}`);
            let allItemList = new Array();
            // ÁªüËÆ°ÊâßË°åÁªìÊûú
            Hypium.handleWorkerTestResult(ret, allItemList, items);
            console.info(`${TAG}, all it result, ${JSON.stringify(allItemList)}`);
            // ÁªüËÆ°Áî®‰æãÊâßË°åÁªìÊûú
            const retResult = {total: 0, failure: 0, error: 0, pass: 0, ignore: 0, duration: 0};
            // Ê†áËÆ∞Áî®‰æãÊâßË°åÁªìÊûú
            Hypium.configWorkerItTestResult(retResult, allItemList);
            // ÊâìÂç∞Áî®‰æãÁªìÊûú
            Hypium.printWorkerTestResult(abilityDelegator, allItemList);
            // Áî®‰æãÊâßË°åÂÆåÊàêÁªüËÆ°Êó∂Èó¥
            let endTime = await SysTestKit.getRealTime();
            const taskConsuming = endTime - startTime;
            const message =
                `\n${PrintTag.OHOS_REPORT_ALL_RESULT}: stream=Test run: runTimes: ${ret.total},total: ${retResult.total}, Failure: ${retResult.failure}, Error: ${retResult.error}, Pass: ${retResult.pass}, Ignore: ${retResult.ignore}` +
                    `\n${PrintTag.OHOS_REPORT_ALL_CODE}: ${retResult.failure > 0 || retResult.error > 0 ? -1 : 0}` +
                    `\n${PrintTag.OHOS_REPORT_ALL_STATUS}: taskconsuming=${taskConsuming > 0 ? taskConsuming : ret.duration}`;
            abilityDelegator.printSync(message);
            console.info(`${TAG}, [end] you worker test`);
            abilityDelegator.finishTest('you worker test finished!!!', 0, () => {});
        }).catch((e) => {
            console.info(`${TAG}, [end] error you worker test, ${JSON.stringify(e)}`);
            abilityDelegator.finishTest('you worker test error finished!!!', 0, () => {});
        }).finally(() => {
            console.info(`${TAG}, all promise finally end`);
        });
    }
    // ÂàõÂª∫workerÁ∫øÁ®ã
    static createWorkerPromise(scriptURL, i, params) {
        console.info(`${TAG}, createWorkerPromiser, ${scriptURL}, ${i}`);
        const workerPromise = new Promise((resolve, reject) => {
            const workerInstance = new worker.ThreadWorker(scriptURL, {name: `worker_${i}`});
            console.info(`${TAG}, send data to worker`);
            // ÂèëÈÄÅÊï∞ÊçÆÂà∞workerÁ∫øÁ®ã‰∏≠
            workerInstance.postMessage(params);
            workerInstance.onmessage = function (e) {
                let currentThreadName = e.data?.currentThreadName;
                console.info(`${TAG}, receview data from ${currentThreadName}, ${JSON.stringify(e.data)}`);
                //
                resolve(e.data?.summary);
                console.info(`${TAG}, ${currentThreadName} finish`);
                workerInstance.terminate();
            };
            workerInstance.onerror = function (e) {
                console.info(`${TAG}, worker error, ${JSON.stringify(e)}`);
                reject(e);
                workerInstance.terminate();
            };
            workerInstance.onmessageerror = function (e) {
                console.info(`${TAG}, worker message error, ${JSON.stringify(e)}`);
                reject(e);
                workerInstance.terminate();
            };
        });
        return workerPromise;
    }
    static handleWorkerTestResult(ret, allItemList, items) {
        console.info(`${TAG}, handleWorkerTestResult, ${JSON.stringify(items)}`);
        for (const {total, failure, error, pass, ignore, duration, itItemList} of items) {
            ret.total += total;
            ret.failure += failure;
            ret.error += error;
            ret.pass += pass;
            ret.ignore += ignore;
            ret.duration += duration;
            Hypium.handleItResult(allItemList, itItemList);
        }
    }
    static handleItResult(allItemList, itItemList) {
        // ÈÅçÂéÜÊâÄÊúâÁöÑÁî®‰æãÁªìÊûúÁªüËÆ°ÊúÄÁªàÁªìÊûú
        for (const {currentThreadName, description, result} of itItemList) {
            let item = allItemList.find((it) => it.description === description);
            if (item) {
                let itResult = item.result;
                // ÂΩìÂú®worker‰∏≠Âá∫Áé∞‰∏ÄÊ¨°failureÂ∞±Ê†áËÆ∞‰∏∫failure, Âá∫Áé∞‰∏ÄÊ¨°errorÂ∞±Ê†áËÆ∞‰∏∫error, ÊâÄÊúâÁ∫øÁ®ãÈÉΩpassÊâçÊ†áËÆ∞‰∏∫pass
                if (itResult === 0) {
                    item.result = result;
                    item.currentThreadName = currentThreadName;
                }
            } else {
                let it = {
                    description: description,
                    currentThreadName: currentThreadName,
                    result: result
                };
                allItemList.push(it);
            }
        }
    }
    static configWorkerItTestResult(retResult, allItemList) {
        console.info(`${TAG}, configWorkerItTestResult, ${JSON.stringify(allItemList)}`);
        for (const {currentThreadName, description, result} of allItemList) {
            console.info(`${TAG}, description, ${description}, result,${result}`);
            retResult.total ++;
            if (result === 0) {
                retResult.pass ++;
            } else if (result === -1) {
                retResult.error ++;
            } else if (result === -2) {
                retResult.failure ++;
            } else {
                retResult.ignore ++;
            }
        }
    }
    static printWorkerTestResult(abilityDelegator, allItemList) {
        console.info(`${TAG}, printWorkerTestResult, ${JSON.stringify(allItemList)}`);
        let index = 1;
        for (const {currentThreadName, description, result} of allItemList) {
            console.info(`${TAG}, description print, ${description}, result,${result}`);
            let itArray = description.split('#');
            let des;
            let itName;
            if (itArray.length > 1) {
                des = itArray[0];
                itName = itArray[1];
            } else if (itArray.length > 1) {
                des = itArray[0];
                itName = itArray[0];
            } else {
                des = 'undefined';
                itName = 'undefined';
            }

            let msg = `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: class=${des}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: test=${itName}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: current=${index}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: CODE=${result}`;
            abilityDelegator.printSync(msg);
            index ++;
        }
    }
    static hypiumWorkerTest(abilityDelegator, abilityDelegatorArguments, testsuite, workerPort) {
        console.info(`${TAG}, hypiumWorkerTest call`);
        SysTestKit.workerPort = workerPort;
        let currentWorkerName = workerPort.name;
        console.info(`${TAG}, hypiumWorkerTest_currentWorkerName: ${currentWorkerName}`);
        Hypium.hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite);

    }

    static registerAssert(customAssertion) {
        const core = Core.getInstance();
        const expectService = core.getDefaultService('expect');
        let matchers = {};
        matchers[customAssertion.name] = customAssertion;
        expectService.addMatchers(matchers);
        expectService.customMatchers.push(customAssertion.name);
        console.info(`${TAG}success to register the ${customAssertion.name}`);
    }

    static unregisterAssert(customAssertion) {
        const core = Core.getInstance();
        const expectService = core.getDefaultService('expect');
        let customAssertionName = typeof customAssertion === 'function' ? customAssertion.name : customAssertion;
        expectService.removeMatchers(customAssertionName);
        console.info(`${TAG}success to unregister the ${customAssertionName}`);
    }

}

export {
    Hypium,
    Core,
    DEFAULT,
    TestType,
    Size,
    Level,
    DataDriver,
    ExpectExtend,
    OhReport,
    SysTestKit,
    describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, beforeItSpecified, afterItSpecified, xdescribe, xit,
    MockKit, when,
    ArgumentMatchers
};‘rFïßversion®mappings•namesßsourcesÆsourcesContent‹îî    î  î  î  ‹ 4î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3‹ Cî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃB‹ Eî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃD‹ ,î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +îî   î î î ‹ 3î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2îî   î î î ‹ Hî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃG‹ Fî  	 î 	î 	î 	î 	î 	î 	î 	î 	î	 		î
 	
î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î 	î  	 î! 	!î" 	"î# 	#î$ 	$î% 	%î& 	&î' 	'î( 	(î) 	)î* 	*î+ 	+î, 	,î- 	-î. 	.î/ 	/î0 	0î1 	1î2 	2î3 	3î4 	4î5 	5î6 	6î7 	7î8 	8î9 	9î: 	:î; 	;î< 	<î= 	=î> 	>î? 	?îÃ@ 	Ã@îÃA 	ÃAîÃB 	ÃBîÃC 	ÃCîÃD 	ÃDîÃE 	ÃE‹ Mî  
 î 
î 
î 
î 
î 
î 
î 
î 
î	 
	î
 

î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î 
î  
 î! 
!î" 
"î# 
#î$ 
$î% 
%î& 
&î' 
'î( 
(î) 
)î* 
*î+ 
+î, 
,î- 
-î. 
.î/ 
/î0 
0î1 
1î2 
2î3 
3î4 
4î5 
5î6 
6î7 
7î8 
8î9 
9î: 
:î; 
;î< 
<î= 
=î> 
>î? 
?îÃ@ 
Ã@îÃA 
ÃAîÃB 
ÃBîÃC 
ÃCîÃD 
ÃDîÃE 
ÃEîÃF 
ÃFîÃG 
ÃGîÃH 
ÃHîÃI 
ÃIîÃJ 
ÃJîÃK 
ÃKîÃL 
ÃL‹ Hî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃG‹ #î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "ïî   î î î î íî   î ‹ %î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $‹ Vî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃGîÃH ÃHîÃI ÃIîÃJ ÃJîÃK ÃKîÃL ÃLîÃM ÃMîÃN ÃNîÃO ÃOîÃP ÃPîÃQ ÃQîÃR ÃRîÃS ÃSîÃT ÃTîÃU ÃU‹ ?î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >‹ Cî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃB‹ ;î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :‹ <î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;‹ üî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃGîÃH ÃHîÃI ÃIîÃJ ÃJîÃK ÃKîÃL ÃLîÃM ÃMîÃN ÃNîÃO ÃOîÃP ÃPîÃQ ÃQîÃR ÃRîÃS ÃSîÃT ÃTîÃU ÃUîÃV ÃVîÃW ÃWîÃX ÃXîÃY ÃYîÃZ ÃZîÃ[ Ã[îÃ\ Ã\îÃ] Ã]îÃ^ Ã^îÃ_ Ã_îÃ` Ã`îÃa ÃaîÃb ÃbîÃc ÃcîÃd ÃdîÃe ÃeîÃf ÃfîÃg ÃgîÃh ÃhîÃi ÃiîÃj ÃjîÃk ÃkîÃl ÃlîÃm ÃmîÃn ÃnîÃo ÃoîÃp ÃpîÃq ÃqîÃr ÃrîÃs ÃsîÃt ÃtîÃu ÃuîÃv ÃvîÃw ÃwîÃx ÃxîÃy ÃyîÃz ÃzîÃ{ Ã{îÃ| Ã|îÃ} Ã}îÃ~ Ã~îÃ ÃîÃÄ ÃÄîÃÅ ÃÅîÃÇ ÃÇîÃÉ ÃÉîÃÑ ÃÑîÃÖ ÃÖîÃÜ ÃÜîÃá ÃáîÃà ÃàîÃâ ÃâîÃä ÃäîÃã ÃãîÃå ÃåîÃç ÃçîÃé ÃéîÃè ÃèîÃê ÃêîÃë ÃëîÃí ÃíîÃì ÃìîÃî ÃîîÃï ÃïîÃñ ÃñîÃó ÃóîÃò ÃòîÃô ÃôîÃö ÃöîÃõ ÃõîÃú ÃúîÃù ÃùîÃû Ãû‹ Aî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@‹ Iî   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5î6 6î7 7î8 8î9 9î: :î; ;î< <î= =î> >î? ?îÃ@ Ã@îÃA ÃAîÃB ÃBîÃC ÃCîÃD ÃDîÃE ÃEîÃF ÃFîÃG ÃGîÃH ÃH‹ $î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #íî   î ‹ î   î î î î î î î î î	 	î
 
î î î î î ‹ !î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   ‹ î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î ‹ *î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )‹ 6î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3î4 4î5 5‹ 4î   î î î î î î î î î	 	î
 
î î î î î î î î î î î î î î î î î î î î î î   î! !î" "î# #î$ $î% %î& &î' 'î( (î) )î* *î+ +î, ,î- -î. .î/ /î0 0î1 1î2 2î3 3óî    î  î  î  î  î  î  íî  ! î !‹ (î  " î "î "î "î "î "î "î "î "î	 "	î
 "
î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î "î  " î! "!î" ""î# "#î$ "$î% "%î& "&î' "'‹ -î  # î #î #î #î #î #î #î #î #î	 #	î
 #
î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î #î  # î! #!î" #"î# ##î$ #$î% #%î& #&î' #'î( #(î) #)î* #*î+ #+î, #,óî  $ î $î $î $î $î $î $ìî  % î %î %‹ î  & î &î &î &î &î &î &î &î &î	 &	î
 &
î &î &î &î &î &î &î &î &î &î &î &î &î &î &î &î &î &î &î &‹ )î  ' î 'î 'î 'î 'î 'î 'î 'î 'î	 '	î
 '
î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î 'î  ' î! '!î" '"î# '#î$ '$î% '%î& '&î' ''î( '(óî  ( î (î (î (î (î (î (íî  ) î )‹ î  * î *î *î *î *î *î *î *î *î	 *	î
 *
î *î *î *î *î *î *î *î *î *î *î *î *‹ )î  + î +î +î +î +î +î +î +î +î	 +	î
 +
î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î +î  + î! +!î" +"î# +#î$ +$î% +%î& +&î' +'î( +(óî  , î ,î ,î ,î ,î ,î ,íî  - î -‹ Qî  . î .î .î .î .î .î .î .î .î	 .	î
 .
î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î .î  . î! .!î" ."î# .#î$ .$î% .%î& .&î' .'î( .(î) .)î* .*î+ .+î, .,î- .-î. ..î/ ./î0 .0î1 .1î2 .2î3 .3î4 .4î5 .5î6 .6î7 .7î8 .8î9 .9î: .:î; .;î< .<î= .=î> .>î? .?îÃ@ .Ã@îÃA .ÃAîÃB .ÃBîÃC .ÃCîÃD .ÃDîÃE .ÃEîÃF .ÃFîÃG .ÃGîÃH .ÃHîÃI .ÃIîÃJ .ÃJîÃK .ÃKîÃL .ÃLîÃM .ÃMîÃN .ÃNîÃO .ÃOîÃP .ÃP‹ *î  / î /î /î /î /î /î /î /î /î	 /	î
 /
î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î /î  / î! /!î" /"î# /#î$ /$î% /%î& /&î' /'î( /(î) /)‹ 1î  0 î 0î 0î 0î 0î 0î 0î 0î 0î	 0	î
 0
î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î 0î  0 î! 0!î" 0"î# 0#î$ 0$î% 0%î& 0&î' 0'î( 0(î) 0)î* 0*î+ 0+î, 0,î- 0-î. 0.î/ 0/î0 00‹ î  1 î 1î 1î 1î 1î 1î 1î 1î 1î	 1	î
 1
î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1î 1ùî  2 î 2î 2î 2î 2î 2î 2î 2î 2î	 2	î
 2
î 2î 2‹ 2î  3 î 3î 3î 3î 3î 3î 3î 3î 3î	 3	î
 3
î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î 3î  3 î! 3!î" 3"î# 3#î$ 3$î% 3%î& 3&î' 3'î( 3(î) 3)î* 3*î+ 3+î, 3,î- 3-î. 3.î/ 3/î0 30î1 31‹ )î  4 î 4î 4î 4î 4î 4î 4î 4î 4î	 4	î
 4
î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î 4î  4 î! 4!î" 4"î# 4#î$ 4$î% 4%î& 4&î' 4'î( 4(‹ ,î  5 î 5î 5î 5î 5î 5î 5î 5î 5î	 5	î
 5
î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î 5î  5 î! 5!î" 5"î# 5#î$ 5$î% 5%î& 5&î' 5'î( 5(î) 5)î* 5*î+ 5+‹ Dî  6 î 6î 6î 6î 6î 6î 6î 6î 6î	 6	î
 6
î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î 6î  6 î! 6!î" 6"î# 6#î$ 6$î% 6%î& 6&î' 6'î( 6(î) 6)î* 6*î+ 6+î, 6,î- 6-î. 6.î/ 6/î0 60î1 61î2 62î3 63î4 64î5 65î6 66î7 67î8 68î9 69î: 6:î; 6;î< 6<î= 6=î> 6>î? 6?îÃ@ 6Ã@îÃA 6ÃAîÃB 6ÃBîÃC 6ÃCùî  7 î 7î 7î 7î 7î 7î 7î 7î 7î	 7	î
 7
î 7î 7‹ 2î  8 î 8î 8î 8î 8î 8î 8î 8î 8î	 8	î
 8
î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î 8î  8 î! 8!î" 8"î# 8#î$ 8$î% 8%î& 8&î' 8'î( 8(î) 8)î* 8*î+ 8+î, 8,î- 8-î. 8.î/ 8/î0 80î1 81‹ .î  9 î 9î 9î 9î 9î 9î 9î 9î 9î	 9	î
 9
î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î 9î  9 î! 9!î" 9"î# 9#î$ 9$î% 9%î& 9&î' 9'î( 9(î) 9)î* 9*î+ 9+î, 9,î- 9-‹ î  : î :î :î :î :î :î :î :î :î	 :	î
 :
î :î :î :î :î :î :î :î :î :î :î :‹ 0î  ; î ;î ;î ;î ;î ;î ;î ;î ;î	 ;	î
 ;
î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î ;î  ; î! ;!î" ;"î# ;#î$ ;$î% ;%î& ;&î' ;'î( ;(î) ;)î* ;*î+ ;+î, ;,î- ;-î. ;.î/ ;/‹ 1î  < î <î <î <î <î <î <î <î <î	 <	î
 <
î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î <î  < î! <!î" <"î# <#î$ <$î% <%î& <&î' <'î( <(î) <)î* <*î+ <+î, <,î- <-î. <.î/ </î0 <0‹ 0î  = î =î =î =î =î =î =î =î =î	 =	î
 =
î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î =î  = î! =!î" ="î# =#î$ =$î% =%î& =&î' ='î( =(î) =)î* =*î+ =+î, =,î- =-î. =.î/ =/‹ Aî  > î >î >î >î >î >î >î >î >î	 >	î
 >
î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î >î  > î! >!î" >"î# >#î$ >$î% >%î& >&î' >'î( >(î) >)î* >*î+ >+î, >,î- >-î. >.î/ >/î0 >0î1 >1î2 >2î3 >3î4 >4î5 >5î6 >6î7 >7î8 >8î9 >9î: >:î; >;î< ><î= >=î> >>î? >?îÃ@ >Ã@‹ 3î  ? î ?î ?î ?î ?î ?î ?î ?î ?î	 ?	î
 ?
î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î ?î  ? î! ?!î" ?"î# ?#î$ ?$î% ?%î& ?&î' ?'î( ?(î) ?)î* ?*î+ ?+î, ?,î- ?-î. ?.î/ ?/î0 ?0î1 ?1î2 ?2‹ gî  Ã@ î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î	 Ã@	î
 Ã@
î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î Ã@î  Ã@ î! Ã@!î" Ã@"î# Ã@#î$ Ã@$î% Ã@%î& Ã@&î' Ã@'î( Ã@(î) Ã@)î* Ã@*î+ Ã@+î, Ã@,î- Ã@-î. Ã@.î/ Ã@/î0 Ã@0î1 Ã@1î2 Ã@2î3 Ã@3î4 Ã@4î5 Ã@5î6 Ã@6î7 Ã@7î8 Ã@8î9 Ã@9î: Ã@:î; Ã@;î< Ã@<î= Ã@=î> Ã@>î? Ã@?îÃ@ Ã@Ã@îÃA Ã@ÃAîÃB Ã@ÃBîÃC Ã@ÃCîÃD Ã@ÃDîÃE Ã@ÃEîÃF Ã@ÃFîÃG Ã@ÃGîÃH Ã@ÃHîÃI Ã@ÃIîÃJ Ã@ÃJîÃK Ã@ÃKîÃL Ã@ÃLîÃM Ã@ÃMîÃN Ã@ÃNîÃO Ã@ÃOîÃP Ã@ÃPîÃQ Ã@ÃQîÃR Ã@ÃRîÃS Ã@ÃSîÃT Ã@ÃTîÃU Ã@ÃUîÃV Ã@ÃVîÃW Ã@ÃWîÃX Ã@ÃXîÃY Ã@ÃYîÃZ Ã@ÃZîÃ[ Ã@Ã[îÃ\ Ã@Ã\îÃ] Ã@Ã]îÃ^ Ã@Ã^îÃ_ Ã@Ã_îÃ` Ã@Ã`îÃa Ã@ÃaîÃb Ã@ÃbîÃc Ã@ÃcîÃd Ã@ÃdîÃe Ã@ÃeîÃf Ã@Ãf‹ Qî  ÃA î ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî	 ÃA	î
 ÃA
î ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî ÃAî  ÃA î! ÃA!î" ÃA"î# ÃA#î$ ÃA$î% ÃA%î& ÃA&î' ÃA'î( ÃA(î) ÃA)î* ÃA*î+ ÃA+î, ÃA,î- ÃA-î. ÃA.î/ ÃA/î0 ÃA0î1 ÃA1î2 ÃA2î3 ÃA3î4 ÃA4î5 ÃA5î6 ÃA6î7 ÃA7î8 ÃA8î9 ÃA9î: ÃA:î; ÃA;î< ÃA<î= ÃA=î> ÃA>î? ÃA?îÃ@ ÃAÃ@îÃA ÃAÃAîÃB ÃAÃBîÃC ÃAÃCîÃD ÃAÃDîÃE ÃAÃEîÃF ÃAÃFîÃG ÃAÃGîÃH ÃAÃHîÃI ÃAÃIîÃJ ÃAÃJîÃK ÃAÃKîÃL ÃAÃLîÃM ÃAÃMîÃN ÃAÃNîÃO ÃAÃOîÃP ÃAÃP‹ 6î  ÃB î ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî	 ÃB	î
 ÃB
î ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî ÃBî  ÃB î! ÃB!î" ÃB"î# ÃB#î$ ÃB$î% ÃB%î& ÃB&î' ÃB'î( ÃB(î) ÃB)î* ÃB*î+ ÃB+î, ÃB,î- ÃB-î. ÃB.î/ ÃB/î0 ÃB0î1 ÃB1î2 ÃB2î3 ÃB3î4 ÃB4î5 ÃB5õî  ÃC î ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî ÃCî	 ÃC	î
 ÃC
‹ î  ÃD î ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî	 ÃD	î
 ÃD
î ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDî ÃD‹ )î  ÃE î ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî	 ÃE	î
 ÃE
î ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî ÃEî  ÃE î! ÃE!î" ÃE"î# ÃE#î$ ÃE$î% ÃE%î& ÃE&î' ÃE'î( ÃE(óî  ÃF î ÃFî ÃFî ÃFî ÃFî ÃFî ÃF‹ Zî  ÃG î ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî	 ÃG	î
 ÃG
î ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGî  ÃG î! ÃG!î" ÃG"î# ÃG#î$ ÃG$î% ÃG%î& ÃG&î' ÃG'î( ÃG(î) ÃG)î* ÃG*î+ ÃG+î, ÃG,î- ÃG-î. ÃG.î/ ÃG/î0 ÃG0î1 ÃG1î2 ÃG2î3 ÃG3î4 ÃG4î5 ÃG5î6 ÃG6î7 ÃG7î8 ÃG8î9 ÃG9î: ÃG:î; ÃG;î< ÃG<î= ÃG=î> ÃG>î? ÃG?îÃ@ ÃGÃ@îÃA ÃGÃAîÃB ÃGÃBîÃC ÃGÃCîÃD ÃGÃDîÃE ÃGÃEîÃF ÃGÃFîÃG ÃGÃGîÃH ÃGÃHîÃI ÃGÃIîÃJ ÃGÃJîÃK ÃGÃKîÃL ÃGÃLîÃM ÃGÃMîÃN ÃGÃNîÃO ÃGÃOîÃP ÃGÃPîÃQ ÃGÃQîÃR ÃGÃRîÃS ÃGÃSîÃT ÃGÃTîÃU ÃGÃUîÃV ÃGÃVîÃW ÃGÃWîÃX ÃGÃXîÃY ÃGÃY‹ Fî  ÃH î ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî	 ÃH	î
 ÃH
î ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî ÃHî  ÃH î! ÃH!î" ÃH"î# ÃH#î$ ÃH$î% ÃH%î& ÃH&î' ÃH'î( ÃH(î) ÃH)î* ÃH*î+ ÃH+î, ÃH,î- ÃH-î. ÃH.î/ ÃH/î0 ÃH0î1 ÃH1î2 ÃH2î3 ÃH3î4 ÃH4î5 ÃH5î6 ÃH6î7 ÃH7î8 ÃH8î9 ÃH9î: ÃH:î; ÃH;î< ÃH<î= ÃH=î> ÃH>î? ÃH?îÃ@ ÃHÃ@îÃA ÃHÃAîÃB ÃHÃBîÃC ÃHÃCîÃD ÃHÃDîÃE ÃHÃE‹ &î  ÃI î ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî	 ÃI	î
 ÃI
î ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIî  ÃI î! ÃI!î" ÃI"î# ÃI#î$ ÃI$î% ÃI%íî  ÃJ î ÃJ‹ î  ÃK î ÃKî ÃKî ÃKî ÃKî ÃKî ÃKî ÃKî ÃKî	 ÃK	î
 ÃK
î ÃKî ÃKî ÃKî ÃKî ÃKî ÃKî ÃKî ÃK‹ 9î  ÃL î ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî	 ÃL	î
 ÃL
î ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLî  ÃL î! ÃL!î" ÃL"î# ÃL#î$ ÃL$î% ÃL%î& ÃL&î' ÃL'î( ÃL(î) ÃL)î* ÃL*î+ ÃL+î, ÃL,î- ÃL-î. ÃL.î/ ÃL/î0 ÃL0î1 ÃL1î2 ÃL2î3 ÃL3î4 ÃL4î5 ÃL5î6 ÃL6î7 ÃL7î8 ÃL8‹ /î  ÃM î ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî	 ÃM	î
 ÃM
î ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî ÃMî  ÃM î! ÃM!î" ÃM"î# ÃM#î$ ÃM$î% ÃM%î& ÃM&î' ÃM'î( ÃM(î) ÃM)î* ÃM*î+ ÃM+î, ÃM,î- ÃM-î. ÃM.‹ î  ÃN î ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî	 ÃN	î
 ÃN
î ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃN‹ Uî  ÃO î ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî	 ÃO	î
 ÃO
î ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî  ÃO î! ÃO!î" ÃO"î# ÃO#î$ ÃO$î% ÃO%î& ÃO&î' ÃO'î( ÃO(î) ÃO)î* ÃO*î+ ÃO+î, ÃO,î- ÃO-î. ÃO.î/ ÃO/î0 ÃO0î1 ÃO1î2 ÃO2î3 ÃO3î4 ÃO4î5 ÃO5î6 ÃO6î7 ÃO7î8 ÃO8î9 ÃO9î: ÃO:î; ÃO;î< ÃO<î= ÃO=î> ÃO>î? ÃO?îÃ@ ÃOÃ@îÃA ÃOÃAîÃB ÃOÃBîÃC ÃOÃCîÃD ÃOÃDîÃE ÃOÃEîÃF ÃOÃFîÃG ÃOÃGîÃH ÃOÃHîÃI ÃOÃIîÃJ ÃOÃJîÃK ÃOÃKîÃL ÃOÃLîÃM ÃOÃMîÃN ÃOÃNîÃO ÃOÃOîÃP ÃOÃPîÃQ ÃOÃQîÃR ÃOÃRîÃS ÃOÃSîÃT ÃOÃT‹ 5î  ÃP î ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî	 ÃP	î
 ÃP
î ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî ÃPî  ÃP î! ÃP!î" ÃP"î# ÃP#î$ ÃP$î% ÃP%î& ÃP&î' ÃP'î( ÃP(î) ÃP)î* ÃP*î+ ÃP+î, ÃP,î- ÃP-î. ÃP.î/ ÃP/î0 ÃP0î1 ÃP1î2 ÃP2î3 ÃP3î4 ÃP4õî  ÃQ î ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî ÃQî	 ÃQ	î
 ÃQ
‹ Xî  ÃR î ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî	 ÃR	î
 ÃR
î ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî  ÃR î! ÃR!î" ÃR"î# ÃR#î$ ÃR$î% ÃR%î& ÃR&î' ÃR'î( ÃR(î) ÃR)î* ÃR*î+ ÃR+î, ÃR,î- ÃR-î. ÃR.î/ ÃR/î0 ÃR0î1 ÃR1î2 ÃR2î3 ÃR3î4 ÃR4î5 ÃR5î6 ÃR6î7 ÃR7î8 ÃR8î9 ÃR9î: ÃR:î; ÃR;î< ÃR<î= ÃR=î> ÃR>î? ÃR?îÃ@ ÃRÃ@îÃA ÃRÃAîÃB ÃRÃBîÃC ÃRÃCîÃD ÃRÃDîÃE ÃRÃEîÃF ÃRÃFîÃG ÃRÃGîÃH ÃRÃHîÃI ÃRÃIîÃJ ÃRÃJîÃK ÃRÃKîÃL ÃRÃLîÃM ÃRÃMîÃN ÃRÃNîÃO ÃRÃOîÃP ÃRÃPîÃQ ÃRÃQîÃR ÃRÃRîÃS ÃRÃSîÃT ÃRÃTîÃU ÃRÃUîÃV ÃRÃVîÃW ÃRÃW‹ Aî  ÃS î ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî	 ÃS	î
 ÃS
î ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî ÃSî  ÃS î! ÃS!î" ÃS"î# ÃS#î$ ÃS$î% ÃS%î& ÃS&î' ÃS'î( ÃS(î) ÃS)î* ÃS*î+ ÃS+î, ÃS,î- ÃS-î. ÃS.î/ ÃS/î0 ÃS0î1 ÃS1î2 ÃS2î3 ÃS3î4 ÃS4î5 ÃS5î6 ÃS6î7 ÃS7î8 ÃS8î9 ÃS9î: ÃS:î; ÃS;î< ÃS<î= ÃS=î> ÃS>î? ÃS?îÃ@ ÃSÃ@‹ Xî  ÃT î ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî	 ÃT	î
 ÃT
î ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî  ÃT î! ÃT!î" ÃT"î# ÃT#î$ ÃT$î% ÃT%î& ÃT&î' ÃT'î( ÃT(î) ÃT)î* ÃT*î+ ÃT+î, ÃT,î- ÃT-î. ÃT.î/ ÃT/î0 ÃT0î1 ÃT1î2 ÃT2î3 ÃT3î4 ÃT4î5 ÃT5î6 ÃT6î7 ÃT7î8 ÃT8î9 ÃT9î: ÃT:î; ÃT;î< ÃT<î= ÃT=î> ÃT>î? ÃT?îÃ@ ÃTÃ@îÃA ÃTÃAîÃB ÃTÃBîÃC ÃTÃCîÃD ÃTÃDîÃE ÃTÃEîÃF ÃTÃFîÃG ÃTÃGîÃH ÃTÃHîÃI ÃTÃIîÃJ ÃTÃJîÃK ÃTÃKîÃL ÃTÃLîÃM ÃTÃMîÃN ÃTÃNîÃO ÃTÃOîÃP ÃTÃPîÃQ ÃTÃQîÃR ÃTÃRîÃS ÃTÃSîÃT ÃTÃTîÃU ÃTÃUîÃV ÃTÃVîÃW ÃTÃW‹ ,î  ÃU î ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî	 ÃU	î
 ÃU
î ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî ÃUî  ÃU î! ÃU!î" ÃU"î# ÃU#î$ ÃU$î% ÃU%î& ÃU&î' ÃU'î( ÃU(î) ÃU)î* ÃU*î+ ÃU+‹ î  ÃV î ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî	 ÃV	î
 ÃV
î ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃVî ÃV‹ Eî  ÃW î ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî	 ÃW	î
 ÃW
î ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî ÃWî  ÃW î! ÃW!î" ÃW"î# ÃW#î$ ÃW$î% ÃW%î& ÃW&î' ÃW'î( ÃW(î) ÃW)î* ÃW*î+ ÃW+î, ÃW,î- ÃW-î. ÃW.î/ ÃW/î0 ÃW0î1 ÃW1î2 ÃW2î3 ÃW3î4 ÃW4î5 ÃW5î6 ÃW6î7 ÃW7î8 ÃW8î9 ÃW9î: ÃW:î; ÃW;î< ÃW<î= ÃW=î> ÃW>î? ÃW?îÃ@ ÃWÃ@îÃA ÃWÃAîÃB ÃWÃBîÃC ÃWÃCîÃD ÃWÃD‹ Tî  ÃX î ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî	 ÃX	î
 ÃX
î ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî ÃXî  ÃX î! ÃX!î" ÃX"î# ÃX#î$ ÃX$î% ÃX%î& ÃX&î' ÃX'î( ÃX(î) ÃX)î* ÃX*î+ ÃX+î, ÃX,î- ÃX-î. ÃX.î/ ÃX/î0 ÃX0î1 ÃX1î2 ÃX2î3 ÃX3î4 ÃX4î5 ÃX5î6 ÃX6î7 ÃX7î8 ÃX8î9 ÃX9î: ÃX:î; ÃX;î< ÃX<î= ÃX=î> ÃX>î? ÃX?îÃ@ ÃXÃ@îÃA ÃXÃAîÃB ÃXÃBîÃC ÃXÃCîÃD ÃXÃDîÃE ÃXÃEîÃF ÃXÃFîÃG ÃXÃGîÃH ÃXÃHîÃI ÃXÃIîÃJ ÃXÃJîÃK ÃXÃKîÃL ÃXÃLîÃM ÃXÃMîÃN ÃXÃNîÃO ÃXÃOîÃP ÃXÃPîÃQ ÃXÃQîÃR ÃXÃRîÃS ÃXÃS‹ î  ÃY î ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî	 ÃY	î
 ÃY
î ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃYî ÃY‹ bî  ÃZ î ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî	 ÃZ	î
 ÃZ
î ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî ÃZî  ÃZ î! ÃZ!î" ÃZ"î# ÃZ#î$ ÃZ$î% ÃZ%î& ÃZ&î' ÃZ'î( ÃZ(î) ÃZ)î* ÃZ*î+ ÃZ+î, ÃZ,î- ÃZ-î. ÃZ.î/ ÃZ/î0 ÃZ0î1 ÃZ1î2 ÃZ2î3 ÃZ3î4 ÃZ4î5 ÃZ5î6 ÃZ6î7 ÃZ7î8 ÃZ8î9 ÃZ9î: ÃZ:î; ÃZ;î< ÃZ<î= ÃZ=î> ÃZ>î? ÃZ?îÃ@ ÃZÃ@îÃA ÃZÃAîÃB ÃZÃBîÃC ÃZÃCîÃD ÃZÃDîÃE ÃZÃEîÃF ÃZÃFîÃG ÃZÃGîÃH ÃZÃHîÃI ÃZÃIîÃJ ÃZÃJîÃK ÃZÃKîÃL ÃZÃLîÃM ÃZÃMîÃN ÃZÃNîÃO ÃZÃOîÃP ÃZÃPîÃQ ÃZÃQîÃR ÃZÃRîÃS ÃZÃSîÃT ÃZÃTîÃU ÃZÃUîÃV ÃZÃVîÃW ÃZÃWîÃX ÃZÃXîÃY ÃZÃYîÃZ ÃZÃZîÃ[ ÃZÃ[îÃ\ ÃZÃ\îÃ] ÃZÃ]îÃ^ ÃZÃ^îÃ_ ÃZÃ_îÃ` ÃZÃ`îÃa ÃZÃa‹ î  Ã[ î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î	 Ã[	î
 Ã[
î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[î Ã[‹ Fî  Ã\ î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î	 Ã\	î
 Ã\
î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î Ã\î  Ã\ î! Ã\!î" Ã\"î# Ã\#î$ Ã\$î% Ã\%î& Ã\&î' Ã\'î( Ã\(î) Ã\)î* Ã\*î+ Ã\+î, Ã\,î- Ã\-î. Ã\.î/ Ã\/î0 Ã\0î1 Ã\1î2 Ã\2î3 Ã\3î4 Ã\4î5 Ã\5î6 Ã\6î7 Ã\7î8 Ã\8î9 Ã\9î: Ã\:î; Ã\;î< Ã\<î= Ã\=î> Ã\>î? Ã\?îÃ@ Ã\Ã@îÃA Ã\ÃAîÃB Ã\ÃBîÃC Ã\ÃCîÃD Ã\ÃDîÃE Ã\ÃE‹ î  Ã] î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î	 Ã]	î
 Ã]
î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]î Ã]‹ Jî  Ã^ î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î	 Ã^	î
 Ã^
î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î Ã^î  Ã^ î! Ã^!î" Ã^"î# Ã^#î$ Ã^$î% Ã^%î& Ã^&î' Ã^'î( Ã^(î) Ã^)î* Ã^*î+ Ã^+î, Ã^,î- Ã^-î. Ã^.î/ Ã^/î0 Ã^0î1 Ã^1î2 Ã^2î3 Ã^3î4 Ã^4î5 Ã^5î6 Ã^6î7 Ã^7î8 Ã^8î9 Ã^9î: Ã^:î; Ã^;î< Ã^<î= Ã^=î> Ã^>î? Ã^?îÃ@ Ã^Ã@îÃA Ã^ÃAîÃB Ã^ÃBîÃC Ã^ÃCîÃD Ã^ÃDîÃE Ã^ÃEîÃF Ã^ÃFîÃG Ã^ÃGîÃH Ã^ÃHîÃI Ã^ÃI‹ î  Ã_ î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î	 Ã_	î
 Ã_
î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_î Ã_‹ ;î  Ã` î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î	 Ã`	î
 Ã`
î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î Ã`î  Ã` î! Ã`!î" Ã`"î# Ã`#î$ Ã`$î% Ã`%î& Ã`&î' Ã`'î( Ã`(î) Ã`)î* Ã`*î+ Ã`+î, Ã`,î- Ã`-î. Ã`.î/ Ã`/î0 Ã`0î1 Ã`1î2 Ã`2î3 Ã`3î4 Ã`4î5 Ã`5î6 Ã`6î7 Ã`7î8 Ã`8î9 Ã`9î: Ã`:‹ 8î  Ãa î Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî	 Ãa	î
 Ãa
î Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî Ãaî  Ãa î! Ãa!î" Ãa"î# Ãa#î$ Ãa$î% Ãa%î& Ãa&î' Ãa'î( Ãa(î) Ãa)î* Ãa*î+ Ãa+î, Ãa,î- Ãa-î. Ãa.î/ Ãa/î0 Ãa0î1 Ãa1î2 Ãa2î3 Ãa3î4 Ãa4î5 Ãa5î6 Ãa6î7 Ãa7‹ î  Ãb î Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî	 Ãb	î
 Ãb
î Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãbî Ãb‹ Ìî  Ãc î Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî	 Ãc	î
 Ãc
î Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî Ãcî  Ãc î! Ãc!î" Ãc"î# Ãc#î$ Ãc$î% Ãc%î& Ãc&î' Ãc'î( Ãc(î) Ãc)î* Ãc*î+ Ãc+î, Ãc,î- Ãc-î. Ãc.î/ Ãc/î0 Ãc0î1 Ãc1î2 Ãc2î3 Ãc3î4 Ãc4î5 Ãc5î6 Ãc6î7 Ãc7î8 Ãc8î9 Ãc9î: Ãc:î; Ãc;î< Ãc<î= Ãc=î> Ãc>î? Ãc?îÃ@ ÃcÃ@îÃA ÃcÃAîÃB ÃcÃBîÃC ÃcÃCîÃD ÃcÃDîÃE ÃcÃEîÃF ÃcÃFîÃG ÃcÃGîÃH ÃcÃHîÃI ÃcÃIîÃJ ÃcÃJîÃK ÃcÃKîÃL ÃcÃLîÃM ÃcÃMîÃN ÃcÃNîÃO ÃcÃOîÃP ÃcÃPîÃQ ÃcÃQîÃR ÃcÃRîÃS ÃcÃSîÃT ÃcÃTîÃU ÃcÃUîÃV ÃcÃVîÃW ÃcÃWîÃX ÃcÃXîÃY ÃcÃYîÃZ ÃcÃZîÃ[ ÃcÃ[îÃ\ ÃcÃ\îÃ] ÃcÃ]îÃ^ ÃcÃ^îÃ_ ÃcÃ_îÃ` ÃcÃ`îÃa ÃcÃaîÃb ÃcÃbîÃc ÃcÃcîÃd ÃcÃdîÃe ÃcÃeîÃf ÃcÃfîÃg ÃcÃgîÃh ÃcÃhîÃi ÃcÃiîÃj ÃcÃjîÃk ÃcÃkîÃl ÃcÃlîÃm ÃcÃmîÃn ÃcÃnîÃo ÃcÃoîÃp ÃcÃpîÃq ÃcÃqîÃr ÃcÃrîÃs ÃcÃsîÃt ÃcÃtîÃu ÃcÃuîÃv ÃcÃvîÃw ÃcÃwîÃx ÃcÃxîÃy ÃcÃyîÃz ÃcÃzîÃ{ ÃcÃ{îÃ| ÃcÃ|îÃ} ÃcÃ}îÃ~ ÃcÃ~îÃ ÃcÃîÃÄ ÃcÃÄîÃÅ ÃcÃÅîÃÇ ÃcÃÇîÃÉ ÃcÃÉîÃÑ ÃcÃÑîÃÖ ÃcÃÖîÃÜ ÃcÃÜîÃá ÃcÃáîÃà ÃcÃàîÃâ ÃcÃâîÃä ÃcÃäîÃã ÃcÃãîÃå ÃcÃåîÃç ÃcÃçîÃé ÃcÃéîÃè ÃcÃèîÃê ÃcÃêîÃë ÃcÃëîÃí ÃcÃíîÃì ÃcÃìîÃî ÃcÃîîÃï ÃcÃïîÃñ ÃcÃñîÃó ÃcÃóîÃò ÃcÃòîÃô ÃcÃôîÃö ÃcÃöîÃõ ÃcÃõîÃú ÃcÃúîÃù ÃcÃùîÃû ÃcÃûîÃü ÃcÃüîÃ† ÃcÃ†îÃ° ÃcÃ°îÃ¢ ÃcÃ¢îÃ£ ÃcÃ£îÃ§ ÃcÃ§îÃ• ÃcÃ•îÃ¶ ÃcÃ¶îÃß ÃcÃßîÃ® ÃcÃ®îÃ© ÃcÃ©îÃ™ ÃcÃ™îÃ´ ÃcÃ´îÃ¨ ÃcÃ¨îÃ≠ ÃcÃ≠îÃÆ ÃcÃÆîÃØ ÃcÃØîÃ∞ ÃcÃ∞îÃ± ÃcÃ±îÃ≤ ÃcÃ≤îÃ≥ ÃcÃ≥îÃ¥ ÃcÃ¥îÃµ ÃcÃµîÃ∂ ÃcÃ∂îÃ∑ ÃcÃ∑îÃ∏ ÃcÃ∏îÃπ ÃcÃπîÃ∫ ÃcÃ∫îÃª ÃcÃªîÃº ÃcÃºîÃΩ ÃcÃΩîÃæ ÃcÃæîÃø ÃcÃøîÃ¿ ÃcÃ¿îÃ¡ ÃcÃ¡îÃ¬ ÃcÃ¬îÃ√ ÃcÃ√îÃƒ ÃcÃƒîÃ≈ ÃcÃ≈îÃ∆ ÃcÃ∆îÃ« ÃcÃ«îÃ» ÃcÃ»îÃ… ÃcÃ…îÃ  ÃcÃ îÃÀ ÃcÃÀîÃÃ ÃcÃÃîÃÕ ÃcÃÕîÃŒ ÃcÃŒîÃœ ÃcÃœîÃ– ÃcÃ–îÃ— ÃcÃ—îÃ“ ÃcÃ“îÃ” ÃcÃ”îÃ‘ ÃcÃ‘îÃ’ ÃcÃ’îÃ÷ ÃcÃ÷îÃ◊ ÃcÃ◊îÃÿ ÃcÃÿîÃŸ ÃcÃŸîÃ⁄ ÃcÃ⁄îÃ€ ÃcÃ€îÃ‹ ÃcÃ‹îÃ› ÃcÃ›îÃﬁ ÃcÃﬁîÃﬂ ÃcÃﬂîÃ‡ ÃcÃ‡îÃ· ÃcÃ·îÃ‚ ÃcÃ‚îÃ„ ÃcÃ„îÃ‰ ÃcÃ‰îÃÂ ÃcÃÂîÃÊ ÃcÃÊîÃÁ ÃcÃÁîÃË ÃcÃËîÃÈ ÃcÃÈîÃÍ ÃcÃÍîÃÎ ÃcÃÎîÃÏ ÃcÃÏ‹ vî  Ãd î Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî	 Ãd	î
 Ãd
î Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî Ãdî  Ãd î! Ãd!î" Ãd"î# Ãd#î$ Ãd$î% Ãd%î& Ãd&î' Ãd'î( Ãd(î) Ãd)î* Ãd*î+ Ãd+î, Ãd,î- Ãd-î. Ãd.î/ Ãd/î0 Ãd0î1 Ãd1î2 Ãd2î3 Ãd3î4 Ãd4î5 Ãd5î6 Ãd6î7 Ãd7î8 Ãd8î9 Ãd9î: Ãd:î; Ãd;î< Ãd<î= Ãd=î> Ãd>î? Ãd?îÃ@ ÃdÃ@îÃA ÃdÃAîÃB ÃdÃBîÃC ÃdÃCîÃD ÃdÃDîÃE ÃdÃEîÃF ÃdÃFîÃG ÃdÃGîÃH ÃdÃHîÃI ÃdÃIîÃJ ÃdÃJîÃK ÃdÃKîÃL ÃdÃLîÃM ÃdÃMîÃN ÃdÃNîÃO ÃdÃOîÃP ÃdÃPîÃQ ÃdÃQîÃR ÃdÃRîÃS ÃdÃSîÃT ÃdÃTîÃU ÃdÃUîÃV ÃdÃVîÃW ÃdÃWîÃX ÃdÃXîÃY ÃdÃYîÃZ ÃdÃZîÃ[ ÃdÃ[îÃ\ ÃdÃ\îÃ] ÃdÃ]îÃ^ ÃdÃ^îÃ_ ÃdÃ_îÃ` ÃdÃ`îÃa ÃdÃaîÃb ÃdÃbîÃc ÃdÃcîÃd ÃdÃdîÃe ÃdÃeîÃf ÃdÃfîÃg ÃdÃgîÃh ÃdÃhîÃi ÃdÃiîÃj ÃdÃjîÃk ÃdÃkîÃl ÃdÃlîÃm ÃdÃmîÃn ÃdÃnîÃo ÃdÃoîÃp ÃdÃpîÃq ÃdÃqîÃr ÃdÃrîÃs ÃdÃsîÃt ÃdÃtîÃu ÃdÃu‹ Äî  Ãe î Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî	 Ãe	î
 Ãe
î Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî Ãeî  Ãe î! Ãe!î" Ãe"î# Ãe#î$ Ãe$î% Ãe%î& Ãe&î' Ãe'î( Ãe(î) Ãe)î* Ãe*î+ Ãe+î, Ãe,î- Ãe-î. Ãe.î/ Ãe/î0 Ãe0î1 Ãe1î2 Ãe2î3 Ãe3î4 Ãe4î5 Ãe5î6 Ãe6î7 Ãe7î8 Ãe8î9 Ãe9î: Ãe:î; Ãe;î< Ãe<î= Ãe=î> Ãe>î? Ãe?îÃ@ ÃeÃ@îÃA ÃeÃAîÃB ÃeÃBîÃC ÃeÃCîÃD ÃeÃDîÃE ÃeÃEîÃF ÃeÃFîÃG ÃeÃGîÃH ÃeÃHîÃI ÃeÃIîÃJ ÃeÃJîÃK ÃeÃKîÃL ÃeÃLîÃM ÃeÃMîÃN ÃeÃNîÃO ÃeÃOîÃP ÃeÃPîÃQ ÃeÃQîÃR ÃeÃRîÃS ÃeÃSîÃT ÃeÃTîÃU ÃeÃUîÃV ÃeÃVîÃW ÃeÃWîÃX ÃeÃXîÃY ÃeÃYîÃZ ÃeÃZîÃ[ ÃeÃ[îÃ\ ÃeÃ\îÃ] ÃeÃ]îÃ^ ÃeÃ^îÃ_ ÃeÃ_îÃ` ÃeÃ`îÃa ÃeÃaîÃb ÃeÃbîÃc ÃeÃcîÃd ÃeÃdîÃe ÃeÃeîÃf ÃeÃfîÃg ÃeÃgîÃh ÃeÃhîÃi ÃeÃiîÃj ÃeÃjîÃk ÃeÃkîÃl ÃeÃlîÃm ÃeÃmîÃn ÃeÃnîÃo ÃeÃoîÃp ÃeÃpîÃq ÃeÃqîÃr ÃeÃrîÃs ÃeÃsîÃt ÃeÃtîÃu ÃeÃuîÃv ÃeÃvîÃw ÃeÃwîÃx ÃeÃxîÃy ÃeÃyîÃz ÃeÃzîÃ{ ÃeÃ{îÃ| ÃeÃ|îÃ} ÃeÃ}îÃ~ ÃeÃ~îÃ ÃeÃ‹ 2î  Ãf î Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî	 Ãf	î
 Ãf
î Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî Ãfî  Ãf î! Ãf!î" Ãf"î# Ãf#î$ Ãf$î% Ãf%î& Ãf&î' Ãf'î( Ãf(î) Ãf)î* Ãf*î+ Ãf+î, Ãf,î- Ãf-î. Ãf.î/ Ãf/î0 Ãf0î1 Ãf1‹ <î  Ãg î Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî	 Ãg	î
 Ãg
î Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî Ãgî  Ãg î! Ãg!î" Ãg"î# Ãg#î$ Ãg$î% Ãg%î& Ãg&î' Ãg'î( Ãg(î) Ãg)î* Ãg*î+ Ãg+î, Ãg,î- Ãg-î. Ãg.î/ Ãg/î0 Ãg0î1 Ãg1î2 Ãg2î3 Ãg3î4 Ãg4î5 Ãg5î6 Ãg6î7 Ãg7î8 Ãg8î9 Ãg9î: Ãg:î; Ãg;‹ Vî  Ãh î Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî	 Ãh	î
 Ãh
î Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî Ãhî  Ãh î! Ãh!î" Ãh"î# Ãh#î$ Ãh$î% Ãh%î& Ãh&î' Ãh'î( Ãh(î) Ãh)î* Ãh*î+ Ãh+î, Ãh,î- Ãh-î. Ãh.î/ Ãh/î0 Ãh0î1 Ãh1î2 Ãh2î3 Ãh3î4 Ãh4î5 Ãh5î6 Ãh6î7 Ãh7î8 Ãh8î9 Ãh9î: Ãh:î; Ãh;î< Ãh<î= Ãh=î> Ãh>î? Ãh?îÃ@ ÃhÃ@îÃA ÃhÃAîÃB ÃhÃBîÃC ÃhÃCîÃD ÃhÃDîÃE ÃhÃEîÃF ÃhÃFîÃG ÃhÃGîÃH ÃhÃHîÃI ÃhÃIîÃJ ÃhÃJîÃK ÃhÃKîÃL ÃhÃLîÃM ÃhÃMîÃN ÃhÃNîÃO ÃhÃOîÃP ÃhÃPîÃQ ÃhÃQîÃR ÃhÃRîÃS ÃhÃSîÃT ÃhÃTîÃU ÃhÃU‹ î  Ãi î Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî	 Ãi	î
 Ãi
î Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãiî Ãi‹ Xî  Ãj î Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî	 Ãj	î
 Ãj
î Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî Ãjî  Ãj î! Ãj!î" Ãj"î# Ãj#î$ Ãj$î% Ãj%î& Ãj&î' Ãj'î( Ãj(î) Ãj)î* Ãj*î+ Ãj+î, Ãj,î- Ãj-î. Ãj.î/ Ãj/î0 Ãj0î1 Ãj1î2 Ãj2î3 Ãj3î4 Ãj4î5 Ãj5î6 Ãj6î7 Ãj7î8 Ãj8î9 Ãj9î: Ãj:î; Ãj;î< Ãj<î= Ãj=î> Ãj>î? Ãj?îÃ@ ÃjÃ@îÃA ÃjÃAîÃB ÃjÃBîÃC ÃjÃCîÃD ÃjÃDîÃE ÃjÃEîÃF ÃjÃFîÃG ÃjÃGîÃH ÃjÃHîÃI ÃjÃIîÃJ ÃjÃJîÃK ÃjÃKîÃL ÃjÃLîÃM ÃjÃMîÃN ÃjÃNîÃO ÃjÃOîÃP ÃjÃPîÃQ ÃjÃQîÃR ÃjÃRîÃS ÃjÃSîÃT ÃjÃTîÃU ÃjÃUîÃV ÃjÃVîÃW ÃjÃW‹ \î  Ãk î Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî	 Ãk	î
 Ãk
î Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî Ãkî  Ãk î! Ãk!î" Ãk"î# Ãk#î$ Ãk$î% Ãk%î& Ãk&î' Ãk'î( Ãk(î) Ãk)î* Ãk*î+ Ãk+î, Ãk,î- Ãk-î. Ãk.î/ Ãk/î0 Ãk0î1 Ãk1î2 Ãk2î3 Ãk3î4 Ãk4î5 Ãk5î6 Ãk6î7 Ãk7î8 Ãk8î9 Ãk9î: Ãk:î; Ãk;î< Ãk<î= Ãk=î> Ãk>î? Ãk?îÃ@ ÃkÃ@îÃA ÃkÃAîÃB ÃkÃBîÃC ÃkÃCîÃD ÃkÃDîÃE ÃkÃEîÃF ÃkÃFîÃG ÃkÃGîÃH ÃkÃHîÃI ÃkÃIîÃJ ÃkÃJîÃK ÃkÃKîÃL ÃkÃLîÃM ÃkÃMîÃN ÃkÃNîÃO ÃkÃOîÃP ÃkÃPîÃQ ÃkÃQîÃR ÃkÃRîÃS ÃkÃSîÃT ÃkÃTîÃU ÃkÃUîÃV ÃkÃVîÃW ÃkÃWîÃX ÃkÃXîÃY ÃkÃYîÃZ ÃkÃZîÃ[ ÃkÃ[‹ î  Ãl î Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî	 Ãl	î
 Ãl
î Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãlî Ãl‹ >î  Ãm î Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî	 Ãm	î
 Ãm
î Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî Ãmî  Ãm î! Ãm!î" Ãm"î# Ãm#î$ Ãm$î% Ãm%î& Ãm&î' Ãm'î( Ãm(î) Ãm)î* Ãm*î+ Ãm+î, Ãm,î- Ãm-î. Ãm.î/ Ãm/î0 Ãm0î1 Ãm1î2 Ãm2î3 Ãm3î4 Ãm4î5 Ãm5î6 Ãm6î7 Ãm7î8 Ãm8î9 Ãm9î: Ãm:î; Ãm;î< Ãm<î= Ãm=ùî  Ãn î Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnî	 Ãn	î
 Ãn
î Ãnî Ãnóî  Ão î Ãoî Ãoî Ãoî Ãoî Ãoî Ão‹ î  Ãp î Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî	 Ãp	î
 Ãp
î Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpî Ãp‹ 8î  Ãq î Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî	 Ãq	î
 Ãq
î Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî  Ãq î! Ãq!î" Ãq"î# Ãq#î$ Ãq$î% Ãq%î& Ãq&î' Ãq'î( Ãq(î) Ãq)î* Ãq*î+ Ãq+î, Ãq,î- Ãq-î. Ãq.î/ Ãq/î0 Ãq0î1 Ãq1î2 Ãq2î3 Ãq3î4 Ãq4î5 Ãq5î6 Ãq6î7 Ãq7‹ Kî  Ãr î Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî	 Ãr	î
 Ãr
î Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî Ãrî  Ãr î! Ãr!î" Ãr"î# Ãr#î$ Ãr$î% Ãr%î& Ãr&î' Ãr'î( Ãr(î) Ãr)î* Ãr*î+ Ãr+î, Ãr,î- Ãr-î. Ãr.î/ Ãr/î0 Ãr0î1 Ãr1î2 Ãr2î3 Ãr3î4 Ãr4î5 Ãr5î6 Ãr6î7 Ãr7î8 Ãr8î9 Ãr9î: Ãr:î; Ãr;î< Ãr<î= Ãr=î> Ãr>î? Ãr?îÃ@ ÃrÃ@îÃA ÃrÃAîÃB ÃrÃBîÃC ÃrÃCîÃD ÃrÃDîÃE ÃrÃEîÃF ÃrÃFîÃG ÃrÃGîÃH ÃrÃHîÃI ÃrÃIîÃJ ÃrÃJ‹ Bî  Ãs î Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî	 Ãs	î
 Ãs
î Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsî  Ãs î! Ãs!î" Ãs"î# Ãs#î$ Ãs$î% Ãs%î& Ãs&î' Ãs'î( Ãs(î) Ãs)î* Ãs*î+ Ãs+î, Ãs,î- Ãs-î. Ãs.î/ Ãs/î0 Ãs0î1 Ãs1î2 Ãs2î3 Ãs3î4 Ãs4î5 Ãs5î6 Ãs6î7 Ãs7î8 Ãs8î9 Ãs9î: Ãs:î; Ãs;î< Ãs<î= Ãs=î> Ãs>î? Ãs?îÃ@ ÃsÃ@îÃA ÃsÃA‹ _î  Ãt î Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî	 Ãt	î
 Ãt
î Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî Ãtî  Ãt î! Ãt!î" Ãt"î# Ãt#î$ Ãt$î% Ãt%î& Ãt&î' Ãt'î( Ãt(î) Ãt)î* Ãt*î+ Ãt+î, Ãt,î- Ãt-î. Ãt.î/ Ãt/î0 Ãt0î1 Ãt1î2 Ãt2î3 Ãt3î4 Ãt4î5 Ãt5î6 Ãt6î7 Ãt7î8 Ãt8î9 Ãt9î: Ãt:î; Ãt;î< Ãt<î= Ãt=î> Ãt>î? Ãt?îÃ@ ÃtÃ@îÃA ÃtÃAîÃB ÃtÃBîÃC ÃtÃCîÃD ÃtÃDîÃE ÃtÃEîÃF ÃtÃFîÃG ÃtÃGîÃH ÃtÃHîÃI ÃtÃIîÃJ ÃtÃJîÃK ÃtÃKîÃL ÃtÃLîÃM ÃtÃMîÃN ÃtÃNîÃO ÃtÃOîÃP ÃtÃPîÃQ ÃtÃQîÃR ÃtÃRîÃS ÃtÃSîÃT ÃtÃTîÃU ÃtÃUîÃV ÃtÃVîÃW ÃtÃWîÃX ÃtÃXîÃY ÃtÃYîÃZ ÃtÃZîÃ[ ÃtÃ[îÃ\ ÃtÃ\îÃ] ÃtÃ]îÃ^ ÃtÃ^‹ :î  Ãu î Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî	 Ãu	î
 Ãu
î Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî Ãuî  Ãu î! Ãu!î" Ãu"î# Ãu#î$ Ãu$î% Ãu%î& Ãu&î' Ãu'î( Ãu(î) Ãu)î* Ãu*î+ Ãu+î, Ãu,î- Ãu-î. Ãu.î/ Ãu/î0 Ãu0î1 Ãu1î2 Ãu2î3 Ãu3î4 Ãu4î5 Ãu5î6 Ãu6î7 Ãu7î8 Ãu8î9 Ãu9‹ î  Ãv î Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî	 Ãv	î
 Ãv
î Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãvî Ãv‹ 1î  Ãw î Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî	 Ãw	î
 Ãw
î Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî Ãwî  Ãw î! Ãw!î" Ãw"î# Ãw#î$ Ãw$î% Ãw%î& Ãw&î' Ãw'î( Ãw(î) Ãw)î* Ãw*î+ Ãw+î, Ãw,î- Ãw-î. Ãw.î/ Ãw/î0 Ãw0‹ 7î  Ãx î Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî	 Ãx	î
 Ãx
î Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî Ãxî  Ãx î! Ãx!î" Ãx"î# Ãx#î$ Ãx$î% Ãx%î& Ãx&î' Ãx'î( Ãx(î) Ãx)î* Ãx*î+ Ãx+î, Ãx,î- Ãx-î. Ãx.î/ Ãx/î0 Ãx0î1 Ãx1î2 Ãx2î3 Ãx3î4 Ãx4î5 Ãx5î6 Ãx6‹ Dî  Ãy î Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî	 Ãy	î
 Ãy
î Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyî  Ãy î! Ãy!î" Ãy"î# Ãy#î$ Ãy$î% Ãy%î& Ãy&î' Ãy'î( Ãy(î) Ãy)î* Ãy*î+ Ãy+î, Ãy,î- Ãy-î. Ãy.î/ Ãy/î0 Ãy0î1 Ãy1î2 Ãy2î3 Ãy3î4 Ãy4î5 Ãy5î6 Ãy6î7 Ãy7î8 Ãy8î9 Ãy9î: Ãy:î; Ãy;î< Ãy<î= Ãy=î> Ãy>î? Ãy?îÃ@ ÃyÃ@îÃA ÃyÃAîÃB ÃyÃBîÃC ÃyÃC‹ mî  Ãz î Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî	 Ãz	î
 Ãz
î Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî Ãzî  Ãz î! Ãz!î" Ãz"î# Ãz#î$ Ãz$î% Ãz%î& Ãz&î' Ãz'î( Ãz(î) Ãz)î* Ãz*î+ Ãz+î, Ãz,î- Ãz-î. Ãz.î/ Ãz/î0 Ãz0î1 Ãz1î2 Ãz2î3 Ãz3î4 Ãz4î5 Ãz5î6 Ãz6î7 Ãz7î8 Ãz8î9 Ãz9î: Ãz:î; Ãz;î< Ãz<î= Ãz=î> Ãz>î? Ãz?îÃ@ ÃzÃ@îÃA ÃzÃAîÃB ÃzÃBîÃC ÃzÃCîÃD ÃzÃDîÃE ÃzÃEîÃF ÃzÃFîÃG ÃzÃGîÃH ÃzÃHîÃI ÃzÃIîÃJ ÃzÃJîÃK ÃzÃKîÃL ÃzÃLîÃM ÃzÃMîÃN ÃzÃNîÃO ÃzÃOîÃP ÃzÃPîÃQ ÃzÃQîÃR ÃzÃRîÃS ÃzÃSîÃT ÃzÃTîÃU ÃzÃUîÃV ÃzÃVîÃW ÃzÃWîÃX ÃzÃXîÃY ÃzÃYîÃZ ÃzÃZîÃ[ ÃzÃ[îÃ\ ÃzÃ\îÃ] ÃzÃ]îÃ^ ÃzÃ^îÃ_ ÃzÃ_îÃ` ÃzÃ`îÃa ÃzÃaîÃb ÃzÃbîÃc ÃzÃcîÃd ÃzÃdîÃe ÃzÃeîÃf ÃzÃfîÃg ÃzÃgîÃh ÃzÃhîÃi ÃzÃiîÃj ÃzÃjîÃk ÃzÃkîÃl ÃzÃl‹ î  Ã{ î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î	 Ã{	î
 Ã{
î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{î Ã{‹ +î  Ã| î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î	 Ã|	î
 Ã|
î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î Ã|î  Ã| î! Ã|!î" Ã|"î# Ã|#î$ Ã|$î% Ã|%î& Ã|&î' Ã|'î( Ã|(î) Ã|)î* Ã|*‹ Fî  Ã} î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î	 Ã}	î
 Ã}
î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î Ã}î  Ã} î! Ã}!î" Ã}"î# Ã}#î$ Ã}$î% Ã}%î& Ã}&î' Ã}'î( Ã}(î) Ã})î* Ã}*î+ Ã}+î, Ã},î- Ã}-î. Ã}.î/ Ã}/î0 Ã}0î1 Ã}1î2 Ã}2î3 Ã}3î4 Ã}4î5 Ã}5î6 Ã}6î7 Ã}7î8 Ã}8î9 Ã}9î: Ã}:î; Ã};î< Ã}<î= Ã}=î> Ã}>î? Ã}?îÃ@ Ã}Ã@îÃA Ã}ÃAîÃB Ã}ÃBîÃC Ã}ÃCîÃD Ã}ÃDîÃE Ã}ÃE‹ -î  Ã~ î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î	 Ã~	î
 Ã~
î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î Ã~î  Ã~ î! Ã~!î" Ã~"î# Ã~#î$ Ã~$î% Ã~%î& Ã~&î' Ã~'î( Ã~(î) Ã~)î* Ã~*î+ Ã~+î, Ã~,‹ î  Ã î Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî	 Ã	î
 Ã
î Ãî Ãî Ãî Ãî Ã‹ 5î  ÃÄ î ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî	 ÃÄ	î
 ÃÄ
î ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî  ÃÄ î! ÃÄ!î" ÃÄ"î# ÃÄ#î$ ÃÄ$î% ÃÄ%î& ÃÄ&î' ÃÄ'î( ÃÄ(î) ÃÄ)î* ÃÄ*î+ ÃÄ+î, ÃÄ,î- ÃÄ-î. ÃÄ.î/ ÃÄ/î0 ÃÄ0î1 ÃÄ1î2 ÃÄ2î3 ÃÄ3î4 ÃÄ4‹ Mî  ÃÅ î ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî	 ÃÅ	î
 ÃÅ
î ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî ÃÅî  ÃÅ î! ÃÅ!î" ÃÅ"î# ÃÅ#î$ ÃÅ$î% ÃÅ%î& ÃÅ&î' ÃÅ'î( ÃÅ(î) ÃÅ)î* ÃÅ*î+ ÃÅ+î, ÃÅ,î- ÃÅ-î. ÃÅ.î/ ÃÅ/î0 ÃÅ0î1 ÃÅ1î2 ÃÅ2î3 ÃÅ3î4 ÃÅ4î5 ÃÅ5î6 ÃÅ6î7 ÃÅ7î8 ÃÅ8î9 ÃÅ9î: ÃÅ:î; ÃÅ;î< ÃÅ<î= ÃÅ=î> ÃÅ>î? ÃÅ?îÃ@ ÃÅÃ@îÃA ÃÅÃAîÃB ÃÅÃBîÃC ÃÅÃCîÃD ÃÅÃDîÃE ÃÅÃEîÃF ÃÅÃFîÃG ÃÅÃGîÃH ÃÅÃHîÃI ÃÅÃIîÃJ ÃÅÃJîÃK ÃÅÃKîÃL ÃÅÃL‹ î  ÃÇ î ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî	 ÃÇ	î
 ÃÇ
î ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇî ÃÇ‹ -î  ÃÉ î ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî	 ÃÉ	î
 ÃÉ
î ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî  ÃÉ î! ÃÉ!î" ÃÉ"î# ÃÉ#î$ ÃÉ$î% ÃÉ%î& ÃÉ&î' ÃÉ'î( ÃÉ(î) ÃÉ)î* ÃÉ*î+ ÃÉ+î, ÃÉ,‹ î  ÃÑ î ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî ÃÑî	 ÃÑ	î
 ÃÑ
î ÃÑî ÃÑî ÃÑî ÃÑî ÃÑ‹ <î  ÃÖ î ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî	 ÃÖ	î
 ÃÖ
î ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî ÃÖî  ÃÖ î! ÃÖ!î" ÃÖ"î# ÃÖ#î$ ÃÖ$î% ÃÖ%î& ÃÖ&î' ÃÖ'î( ÃÖ(î) ÃÖ)î* ÃÖ*î+ ÃÖ+î, ÃÖ,î- ÃÖ-î. ÃÖ.î/ ÃÖ/î0 ÃÖ0î1 ÃÖ1î2 ÃÖ2î3 ÃÖ3î4 ÃÖ4î5 ÃÖ5î6 ÃÖ6î7 ÃÖ7î8 ÃÖ8î9 ÃÖ9î: ÃÖ:î; ÃÖ;‹ Uî  ÃÜ î ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî	 ÃÜ	î
 ÃÜ
î ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî ÃÜî  ÃÜ î! ÃÜ!î" ÃÜ"î# ÃÜ#î$ ÃÜ$î% ÃÜ%î& ÃÜ&î' ÃÜ'î( ÃÜ(î) ÃÜ)î* ÃÜ*î+ ÃÜ+î, ÃÜ,î- ÃÜ-î. ÃÜ.î/ ÃÜ/î0 ÃÜ0î1 ÃÜ1î2 ÃÜ2î3 ÃÜ3î4 ÃÜ4î5 ÃÜ5î6 ÃÜ6î7 ÃÜ7î8 ÃÜ8î9 ÃÜ9î: ÃÜ:î; ÃÜ;î< ÃÜ<î= ÃÜ=î> ÃÜ>î? ÃÜ?îÃ@ ÃÜÃ@îÃA ÃÜÃAîÃB ÃÜÃBîÃC ÃÜÃCîÃD ÃÜÃDîÃE ÃÜÃEîÃF ÃÜÃFîÃG ÃÜÃGîÃH ÃÜÃHîÃI ÃÜÃIîÃJ ÃÜÃJîÃK ÃÜÃKîÃL ÃÜÃLîÃM ÃÜÃMîÃN ÃÜÃNîÃO ÃÜÃOîÃP ÃÜÃPîÃQ ÃÜÃQîÃR ÃÜÃRîÃS ÃÜÃSîÃT ÃÜÃT‹ î  Ãá î Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî	 Ãá	î
 Ãá
î Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãáî Ãá‹ -î  Ãà î Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî	 Ãà	î
 Ãà
î Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî Ãàî  Ãà î! Ãà!î" Ãà"î# Ãà#î$ Ãà$î% Ãà%î& Ãà&î' Ãà'î( Ãà(î) Ãà)î* Ãà*î+ Ãà+î, Ãà,‹ î  Ãâ î Ãâî Ãâî Ãâî Ãâî Ãâî Ãâî Ãâî Ãâî	 Ãâ	î
 Ãâ
î Ãâî Ãâî Ãâî Ãâî Ãâùî  Ãä î Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî Ãäî	 Ãä	î
 Ãä
î Ãäî Ãä‹ î  Ãã î Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî	 Ãã	î
 Ãã
î Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããî Ããóî  Ãå î Ãåî Ãåî Ãåî Ãåî Ãåî Ãå‹ >î  Ãç î Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî	 Ãç	î
 Ãç
î Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî Ãçî  Ãç î! Ãç!î" Ãç"î# Ãç#î$ Ãç$î% Ãç%î& Ãç&î' Ãç'î( Ãç(î) Ãç)î* Ãç*î+ Ãç+î, Ãç,î- Ãç-î. Ãç.î/ Ãç/î0 Ãç0î1 Ãç1î2 Ãç2î3 Ãç3î4 Ãç4î5 Ãç5î6 Ãç6î7 Ãç7î8 Ãç8î9 Ãç9î: Ãç:î; Ãç;î< Ãç<î= Ãç=‹ Sî  Ãé î Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî	 Ãé	î
 Ãé
î Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî Ãéî  Ãé î! Ãé!î" Ãé"î# Ãé#î$ Ãé$î% Ãé%î& Ãé&î' Ãé'î( Ãé(î) Ãé)î* Ãé*î+ Ãé+î, Ãé,î- Ãé-î. Ãé.î/ Ãé/î0 Ãé0î1 Ãé1î2 Ãé2î3 Ãé3î4 Ãé4î5 Ãé5î6 Ãé6î7 Ãé7î8 Ãé8î9 Ãé9î: Ãé:î; Ãé;î< Ãé<î= Ãé=î> Ãé>î? Ãé?îÃ@ ÃéÃ@îÃA ÃéÃAîÃB ÃéÃBîÃC ÃéÃCîÃD ÃéÃDîÃE ÃéÃEîÃF ÃéÃFîÃG ÃéÃGîÃH ÃéÃHîÃI ÃéÃIîÃJ ÃéÃJîÃK ÃéÃKîÃL ÃéÃLîÃM ÃéÃMîÃN ÃéÃNîÃO ÃéÃOîÃP ÃéÃPîÃQ ÃéÃQîÃR ÃéÃR‹ \î  Ãè î Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî	 Ãè	î
 Ãè
î Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî Ãèî  Ãè î! Ãè!î" Ãè"î# Ãè#î$ Ãè$î% Ãè%î& Ãè&î' Ãè'î( Ãè(î) Ãè)î* Ãè*î+ Ãè+î, Ãè,î- Ãè-î. Ãè.î/ Ãè/î0 Ãè0î1 Ãè1î2 Ãè2î3 Ãè3î4 Ãè4î5 Ãè5î6 Ãè6î7 Ãè7î8 Ãè8î9 Ãè9î: Ãè:î; Ãè;î< Ãè<î= Ãè=î> Ãè>î? Ãè?îÃ@ ÃèÃ@îÃA ÃèÃAîÃB ÃèÃBîÃC ÃèÃCîÃD ÃèÃDîÃE ÃèÃEîÃF ÃèÃFîÃG ÃèÃGîÃH ÃèÃHîÃI ÃèÃIîÃJ ÃèÃJîÃK ÃèÃKîÃL ÃèÃLîÃM ÃèÃMîÃN ÃèÃNîÃO ÃèÃOîÃP ÃèÃPîÃQ ÃèÃQîÃR ÃèÃRîÃS ÃèÃSîÃT ÃèÃTîÃU ÃèÃUîÃV ÃèÃVîÃW ÃèÃWîÃX ÃèÃXîÃY ÃèÃYîÃZ ÃèÃZîÃ[ ÃèÃ[‹ !î  Ãê î Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî	 Ãê	î
 Ãê
î Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêî  Ãê ‹ %î  Ãë î Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî	 Ãë	î
 Ãë
î Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî Ãëî  Ãë î! Ãë!î" Ãë"î# Ãë#î$ Ãë$‹ !î  Ãí î Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî	 Ãí	î
 Ãí
î Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî Ãíî  Ãí ‹ î  Ãì î Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî	 Ãì	î
 Ãì
î Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãìî Ãì‹ #î  Ãî î Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî	 Ãî	î
 Ãî
î Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî Ãîî  Ãî î! Ãî!î" Ãî"‹ 'î  Ãï î Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî	 Ãï	î
 Ãï
î Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî Ãïî  Ãï î! Ãï!î" Ãï"î# Ãï#î$ Ãï$î% Ãï%î& Ãï&‹ =î  Ãñ î Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî	 Ãñ	î
 Ãñ
î Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî Ãñî  Ãñ î! Ãñ!î" Ãñ"î# Ãñ#î$ Ãñ$î% Ãñ%î& Ãñ&î' Ãñ'î( Ãñ(î) Ãñ)î* Ãñ*î+ Ãñ+î, Ãñ,î- Ãñ-î. Ãñ.î/ Ãñ/î0 Ãñ0î1 Ãñ1î2 Ãñ2î3 Ãñ3î4 Ãñ4î5 Ãñ5î6 Ãñ6î7 Ãñ7î8 Ãñ8î9 Ãñ9î: Ãñ:î; Ãñ;î< Ãñ<õî  Ãó î Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî Ãóî	 Ãó	î
 Ãó
óî  Ãò î Ãòî Ãòî Ãòî Ãòî Ãòî Ãò‹ 6î  Ãô î Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî	 Ãô	î
 Ãô
î Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî Ãôî  Ãô î! Ãô!î" Ãô"î# Ãô#î$ Ãô$î% Ãô%î& Ãô&î' Ãô'î( Ãô(î) Ãô)î* Ãô*î+ Ãô+î, Ãô,î- Ãô-î. Ãô.î/ Ãô/î0 Ãô0î1 Ãô1î2 Ãô2î3 Ãô3î4 Ãô4î5 Ãô5‹ î  Ãö î Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî	 Ãö	î
 Ãö
î Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãöî Ãö‹ Nî  Ãõ î Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî	 Ãõ	î
 Ãõ
î Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî Ãõî  Ãõ î! Ãõ!î" Ãõ"î# Ãõ#î$ Ãõ$î% Ãõ%î& Ãõ&î' Ãõ'î( Ãõ(î) Ãõ)î* Ãõ*î+ Ãõ+î, Ãõ,î- Ãõ-î. Ãõ.î/ Ãõ/î0 Ãõ0î1 Ãõ1î2 Ãõ2î3 Ãõ3î4 Ãõ4î5 Ãõ5î6 Ãõ6î7 Ãõ7î8 Ãõ8î9 Ãõ9î: Ãõ:î; Ãõ;î< Ãõ<î= Ãõ=î> Ãõ>î? Ãõ?îÃ@ ÃõÃ@îÃA ÃõÃAîÃB ÃõÃBîÃC ÃõÃCîÃD ÃõÃDîÃE ÃõÃEîÃF ÃõÃFîÃG ÃõÃGîÃH ÃõÃHîÃI ÃõÃIîÃJ ÃõÃJîÃK ÃõÃKîÃL ÃõÃLîÃM ÃõÃM‹ Rî  Ãú î Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî	 Ãú	î
 Ãú
î Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî Ãúî  Ãú î! Ãú!î" Ãú"î# Ãú#î$ Ãú$î% Ãú%î& Ãú&î' Ãú'î( Ãú(î) Ãú)î* Ãú*î+ Ãú+î, Ãú,î- Ãú-î. Ãú.î/ Ãú/î0 Ãú0î1 Ãú1î2 Ãú2î3 Ãú3î4 Ãú4î5 Ãú5î6 Ãú6î7 Ãú7î8 Ãú8î9 Ãú9î: Ãú:î; Ãú;î< Ãú<î= Ãú=î> Ãú>î? Ãú?îÃ@ ÃúÃ@îÃA ÃúÃAîÃB ÃúÃBîÃC ÃúÃCîÃD ÃúÃDîÃE ÃúÃEîÃF ÃúÃFîÃG ÃúÃGîÃH ÃúÃHîÃI ÃúÃIîÃJ ÃúÃJîÃK ÃúÃKîÃL ÃúÃLîÃM ÃúÃMîÃN ÃúÃNîÃO ÃúÃOîÃP ÃúÃPîÃQ ÃúÃQ‹ î  Ãù î Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî	 Ãù	î
 Ãù
î Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãùî Ãù‹ -î  Ãû î Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî	 Ãû	î
 Ãû
î Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî Ãûî  Ãû î! Ãû!î" Ãû"î# Ãû#î$ Ãû$î% Ãû%î& Ãû&î' Ãû'î( Ãû(î) Ãû)î* Ãû*î+ Ãû+î, Ãû,‹ [î  Ãü î Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî	 Ãü	î
 Ãü
î Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî Ãüî  Ãü î! Ãü!î" Ãü"î# Ãü#î$ Ãü$î% Ãü%î& Ãü&î' Ãü'î( Ãü(î) Ãü)î* Ãü*î+ Ãü+î, Ãü,î- Ãü-î. Ãü.î/ Ãü/î0 Ãü0î1 Ãü1î2 Ãü2î3 Ãü3î4 Ãü4î5 Ãü5î6 Ãü6î7 Ãü7î8 Ãü8î9 Ãü9î: Ãü:î; Ãü;î< Ãü<î= Ãü=î> Ãü>î? Ãü?îÃ@ ÃüÃ@îÃA ÃüÃAîÃB ÃüÃBîÃC ÃüÃCîÃD ÃüÃDîÃE ÃüÃEîÃF ÃüÃFîÃG ÃüÃGîÃH ÃüÃHîÃI ÃüÃIîÃJ ÃüÃJîÃK ÃüÃKîÃL ÃüÃLîÃM ÃüÃMîÃN ÃüÃNîÃO ÃüÃOîÃP ÃüÃPîÃQ ÃüÃQîÃR ÃüÃRîÃS ÃüÃSîÃT ÃüÃTîÃU ÃüÃUîÃV ÃüÃVîÃW ÃüÃWîÃX ÃüÃXîÃY ÃüÃYîÃZ ÃüÃZ‹ 'î  Ã† î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î	 Ã†	î
 Ã†
î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î Ã†î  Ã† î! Ã†!î" Ã†"î# Ã†#î$ Ã†$î% Ã†%î& Ã†&‹ +î  Ã° î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î	 Ã°	î
 Ã°
î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î Ã°î  Ã° î! Ã°!î" Ã°"î# Ã°#î$ Ã°$î% Ã°%î& Ã°&î' Ã°'î( Ã°(î) Ã°)î* Ã°*‹ Aî  Ã¢ î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î	 Ã¢	î
 Ã¢
î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î Ã¢î  Ã¢ î! Ã¢!î" Ã¢"î# Ã¢#î$ Ã¢$î% Ã¢%î& Ã¢&î' Ã¢'î( Ã¢(î) Ã¢)î* Ã¢*î+ Ã¢+î, Ã¢,î- Ã¢-î. Ã¢.î/ Ã¢/î0 Ã¢0î1 Ã¢1î2 Ã¢2î3 Ã¢3î4 Ã¢4î5 Ã¢5î6 Ã¢6î7 Ã¢7î8 Ã¢8î9 Ã¢9î: Ã¢:î; Ã¢;î< Ã¢<î= Ã¢=î> Ã¢>î? Ã¢?îÃ@ Ã¢Ã@‹ î  Ã£ î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î	 Ã£	î
 Ã£
î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£î Ã£‹ î  Ã§ î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î	 Ã§	î
 Ã§
î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§î Ã§‹ î  Ã• î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î	 Ã•	î
 Ã•
î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•î Ã•‹ /î  Ã¶ î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î	 Ã¶	î
 Ã¶
î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î Ã¶î  Ã¶ î! Ã¶!î" Ã¶"î# Ã¶#î$ Ã¶$î% Ã¶%î& Ã¶&î' Ã¶'î( Ã¶(î) Ã¶)î* Ã¶*î+ Ã¶+î, Ã¶,î- Ã¶-î. Ã¶.‹ ;î  Ãß î Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî	 Ãß	î
 Ãß
î Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî Ãßî  Ãß î! Ãß!î" Ãß"î# Ãß#î$ Ãß$î% Ãß%î& Ãß&î' Ãß'î( Ãß(î) Ãß)î* Ãß*î+ Ãß+î, Ãß,î- Ãß-î. Ãß.î/ Ãß/î0 Ãß0î1 Ãß1î2 Ãß2î3 Ãß3î4 Ãß4î5 Ãß5î6 Ãß6î7 Ãß7î8 Ãß8î9 Ãß9î: Ãß:‹ $î  Ã® î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î	 Ã®	î
 Ã®
î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î Ã®î  Ã® î! Ã®!î" Ã®"î# Ã®#‹ î  Ã© î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î	 Ã©	î
 Ã©
î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©î Ã©‹ 'î  Ã™ î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î	 Ã™	î
 Ã™
î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î Ã™î  Ã™ î! Ã™!î" Ã™"î# Ã™#î$ Ã™$î% Ã™%î& Ã™&üî  Ã´ î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î Ã´î	 Ã´	î
 Ã´
î Ã´î Ã´î Ã´î Ã´õî  Ã¨ î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î Ã¨î	 Ã¨	î
 Ã¨
óî  Ã≠ î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠î Ã≠‹ ?î  ÃÆ î ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî	 ÃÆ	î
 ÃÆ
î ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî ÃÆî  ÃÆ î! ÃÆ!î" ÃÆ"î# ÃÆ#î$ ÃÆ$î% ÃÆ%î& ÃÆ&î' ÃÆ'î( ÃÆ(î) ÃÆ)î* ÃÆ*î+ ÃÆ+î, ÃÆ,î- ÃÆ-î. ÃÆ.î/ ÃÆ/î0 ÃÆ0î1 ÃÆ1î2 ÃÆ2î3 ÃÆ3î4 ÃÆ4î5 ÃÆ5î6 ÃÆ6î7 ÃÆ7î8 ÃÆ8î9 ÃÆ9î: ÃÆ:î; ÃÆ;î< ÃÆ<î= ÃÆ=î> ÃÆ>‹ [î  ÃØ î ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî	 ÃØ	î
 ÃØ
î ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî  ÃØ î! ÃØ!î" ÃØ"î# ÃØ#î$ ÃØ$î% ÃØ%î& ÃØ&î' ÃØ'î( ÃØ(î) ÃØ)î* ÃØ*î+ ÃØ+î, ÃØ,î- ÃØ-î. ÃØ.î/ ÃØ/î0 ÃØ0î1 ÃØ1î2 ÃØ2î3 ÃØ3î4 ÃØ4î5 ÃØ5î6 ÃØ6î7 ÃØ7î8 ÃØ8î9 ÃØ9î: ÃØ:î; ÃØ;î< ÃØ<î= ÃØ=î> ÃØ>î? ÃØ?îÃ@ ÃØÃ@îÃA ÃØÃAîÃB ÃØÃBîÃC ÃØÃCîÃD ÃØÃDîÃE ÃØÃEîÃF ÃØÃFîÃG ÃØÃGîÃH ÃØÃHîÃI ÃØÃIîÃJ ÃØÃJîÃK ÃØÃKîÃL ÃØÃLîÃM ÃØÃMîÃN ÃØÃNîÃO ÃØÃOîÃP ÃØÃPîÃQ ÃØÃQîÃR ÃØÃRîÃS ÃØÃSîÃT ÃØÃTîÃU ÃØÃUîÃV ÃØÃVîÃW ÃØÃWîÃX ÃØÃXîÃY ÃØÃYîÃZ ÃØÃZ‹ Oî  Ã∞ î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î	 Ã∞	î
 Ã∞
î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î  Ã∞ î! Ã∞!î" Ã∞"î# Ã∞#î$ Ã∞$î% Ã∞%î& Ã∞&î' Ã∞'î( Ã∞(î) Ã∞)î* Ã∞*î+ Ã∞+î, Ã∞,î- Ã∞-î. Ã∞.î/ Ã∞/î0 Ã∞0î1 Ã∞1î2 Ã∞2î3 Ã∞3î4 Ã∞4î5 Ã∞5î6 Ã∞6î7 Ã∞7î8 Ã∞8î9 Ã∞9î: Ã∞:î; Ã∞;î< Ã∞<î= Ã∞=î> Ã∞>î? Ã∞?îÃ@ Ã∞Ã@îÃA Ã∞ÃAîÃB Ã∞ÃBîÃC Ã∞ÃCîÃD Ã∞ÃDîÃE Ã∞ÃEîÃF Ã∞ÃFîÃG Ã∞ÃGîÃH Ã∞ÃHîÃI Ã∞ÃIîÃJ Ã∞ÃJîÃK Ã∞ÃKîÃL Ã∞ÃLîÃM Ã∞ÃMîÃN Ã∞ÃN‹ Tî  Ã± î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î	 Ã±	î
 Ã±
î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î Ã±î  Ã± î! Ã±!î" Ã±"î# Ã±#î$ Ã±$î% Ã±%î& Ã±&î' Ã±'î( Ã±(î) Ã±)î* Ã±*î+ Ã±+î, Ã±,î- Ã±-î. Ã±.î/ Ã±/î0 Ã±0î1 Ã±1î2 Ã±2î3 Ã±3î4 Ã±4î5 Ã±5î6 Ã±6î7 Ã±7î8 Ã±8î9 Ã±9î: Ã±:î; Ã±;î< Ã±<î= Ã±=î> Ã±>î? Ã±?îÃ@ Ã±Ã@îÃA Ã±ÃAîÃB Ã±ÃBîÃC Ã±ÃCîÃD Ã±ÃDîÃE Ã±ÃEîÃF Ã±ÃFîÃG Ã±ÃGîÃH Ã±ÃHîÃI Ã±ÃIîÃJ Ã±ÃJîÃK Ã±ÃKîÃL Ã±ÃLîÃM Ã±ÃMîÃN Ã±ÃNîÃO Ã±ÃOîÃP Ã±ÃPîÃQ Ã±ÃQîÃR Ã±ÃRîÃS Ã±ÃS‹ !î  Ã≤ î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î	 Ã≤	î
 Ã≤
î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î Ã≤î  Ã≤ ‹ !î  Ã≥ î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î	 Ã≥	î
 Ã≥
î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥î  Ã≥ ‹ $î  Ã¥ î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î	 Ã¥	î
 Ã¥
î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î Ã¥î  Ã¥ î! Ã¥!î" Ã¥"î# Ã¥#‹ )î  Ãµ î Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî	 Ãµ	î
 Ãµ
î Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî Ãµî  Ãµ î! Ãµ!î" Ãµ"î# Ãµ#î$ Ãµ$î% Ãµ%î& Ãµ&î' Ãµ'î( Ãµ(‹ %î  Ã∂ î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î	 Ã∂	î
 Ã∂
î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î  Ã∂ î! Ã∂!î" Ã∂"î# Ã∂#î$ Ã∂$‹ )î  Ã∑ î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î	 Ã∑	î
 Ã∑
î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î  Ã∑ î! Ã∑!î" Ã∑"î# Ã∑#î$ Ã∑$î% Ã∑%î& Ã∑&î' Ã∑'î( Ã∑(‹ 'î  Ã∏ î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î	 Ã∏	î
 Ã∏
î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î Ã∏î  Ã∏ î! Ã∏!î" Ã∏"î# Ã∏#î$ Ã∏$î% Ã∏%î& Ã∏&‹ î  Ãπ î Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî	 Ãπ	î
 Ãπ
î Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπî Ãπ‹ &î  Ã∫ î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î	 Ã∫	î
 Ã∫
î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î  Ã∫ î! Ã∫!î" Ã∫"î# Ã∫#î$ Ã∫$î% Ã∫%üî  Ãª î Ãªî Ãªî Ãªî Ãªî Ãªî Ãªî Ãªî Ãªî	 Ãª	î
 Ãª
î Ãªî Ãªî Ãªî Ãªõî  Ãº î Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî Ãºî	 Ãº	î
 Ãº
óî  ÃΩ î ÃΩî ÃΩî ÃΩî ÃΩî ÃΩî ÃΩ‹ Cî  Ãæ î Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî	 Ãæ	î
 Ãæ
î Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî Ãæî  Ãæ î! Ãæ!î" Ãæ"î# Ãæ#î$ Ãæ$î% Ãæ%î& Ãæ&î' Ãæ'î( Ãæ(î) Ãæ)î* Ãæ*î+ Ãæ+î, Ãæ,î- Ãæ-î. Ãæ.î/ Ãæ/î0 Ãæ0î1 Ãæ1î2 Ãæ2î3 Ãæ3î4 Ãæ4î5 Ãæ5î6 Ãæ6î7 Ãæ7î8 Ãæ8î9 Ãæ9î: Ãæ:î; Ãæ;î< Ãæ<î= Ãæ=î> Ãæ>î? Ãæ?îÃ@ ÃæÃ@îÃA ÃæÃAîÃB ÃæÃB‹ Xî  Ãø î Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî	 Ãø	î
 Ãø
î Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî Ãøî  Ãø î! Ãø!î" Ãø"î# Ãø#î$ Ãø$î% Ãø%î& Ãø&î' Ãø'î( Ãø(î) Ãø)î* Ãø*î+ Ãø+î, Ãø,î- Ãø-î. Ãø.î/ Ãø/î0 Ãø0î1 Ãø1î2 Ãø2î3 Ãø3î4 Ãø4î5 Ãø5î6 Ãø6î7 Ãø7î8 Ãø8î9 Ãø9î: Ãø:î; Ãø;î< Ãø<î= Ãø=î> Ãø>î? Ãø?îÃ@ ÃøÃ@îÃA ÃøÃAîÃB ÃøÃBîÃC ÃøÃCîÃD ÃøÃDîÃE ÃøÃEîÃF ÃøÃFîÃG ÃøÃGîÃH ÃøÃHîÃI ÃøÃIîÃJ ÃøÃJîÃK ÃøÃKîÃL ÃøÃLîÃM ÃøÃMîÃN ÃøÃNîÃO ÃøÃOîÃP ÃøÃPîÃQ ÃøÃQîÃR ÃøÃRîÃS ÃøÃSîÃT ÃøÃTîÃU ÃøÃUîÃV ÃøÃVîÃW ÃøÃW‹ î  Ã¿ î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î	 Ã¿	î
 Ã¿
î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿‹ Oî  Ã¡ î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î	 Ã¡	î
 Ã¡
î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î Ã¡î  Ã¡ î! Ã¡!î" Ã¡"î# Ã¡#î$ Ã¡$î% Ã¡%î& Ã¡&î' Ã¡'î( Ã¡(î) Ã¡)î* Ã¡*î+ Ã¡+î, Ã¡,î- Ã¡-î. Ã¡.î/ Ã¡/î0 Ã¡0î1 Ã¡1î2 Ã¡2î3 Ã¡3î4 Ã¡4î5 Ã¡5î6 Ã¡6î7 Ã¡7î8 Ã¡8î9 Ã¡9î: Ã¡:î; Ã¡;î< Ã¡<î= Ã¡=î> Ã¡>î? Ã¡?îÃ@ Ã¡Ã@îÃA Ã¡ÃAîÃB Ã¡ÃBîÃC Ã¡ÃCîÃD Ã¡ÃDîÃE Ã¡ÃEîÃF Ã¡ÃFîÃG Ã¡ÃGîÃH Ã¡ÃHîÃI Ã¡ÃIîÃJ Ã¡ÃJîÃK Ã¡ÃKîÃL Ã¡ÃLîÃM Ã¡ÃMîÃN Ã¡ÃN‹ Zî  Ã¬ î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î	 Ã¬	î
 Ã¬
î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î Ã¬î  Ã¬ î! Ã¬!î" Ã¬"î# Ã¬#î$ Ã¬$î% Ã¬%î& Ã¬&î' Ã¬'î( Ã¬(î) Ã¬)î* Ã¬*î+ Ã¬+î, Ã¬,î- Ã¬-î. Ã¬.î/ Ã¬/î0 Ã¬0î1 Ã¬1î2 Ã¬2î3 Ã¬3î4 Ã¬4î5 Ã¬5î6 Ã¬6î7 Ã¬7î8 Ã¬8î9 Ã¬9î: Ã¬:î; Ã¬;î< Ã¬<î= Ã¬=î> Ã¬>î? Ã¬?îÃ@ Ã¬Ã@îÃA Ã¬ÃAîÃB Ã¬ÃBîÃC Ã¬ÃCîÃD Ã¬ÃDîÃE Ã¬ÃEîÃF Ã¬ÃFîÃG Ã¬ÃGîÃH Ã¬ÃHîÃI Ã¬ÃIîÃJ Ã¬ÃJîÃK Ã¬ÃKîÃL Ã¬ÃLîÃM Ã¬ÃMîÃN Ã¬ÃNîÃO Ã¬ÃOîÃP Ã¬ÃPîÃQ Ã¬ÃQîÃR Ã¬ÃRîÃS Ã¬ÃSîÃT Ã¬ÃTîÃU Ã¬ÃUîÃV Ã¬ÃVîÃW Ã¬ÃWîÃX Ã¬ÃXîÃY Ã¬ÃY‹ 3î  Ã√ î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î	 Ã√	î
 Ã√
î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î Ã√î  Ã√ î! Ã√!î" Ã√"î# Ã√#î$ Ã√$î% Ã√%î& Ã√&î' Ã√'î( Ã√(î) Ã√)î* Ã√*î+ Ã√+î, Ã√,î- Ã√-î. Ã√.î/ Ã√/î0 Ã√0î1 Ã√1î2 Ã√2‹ î  Ãƒ î Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî	 Ãƒ	î
 Ãƒ
î Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒî Ãƒ‹ î  Ã≈ î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î	 Ã≈	î
 Ã≈
î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈î Ã≈‹ 'î  Ã∆ î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î	 Ã∆	î
 Ã∆
î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î Ã∆î  Ã∆ î! Ã∆!î" Ã∆"î# Ã∆#î$ Ã∆$î% Ã∆%î& Ã∆&‹ #î  Ã« î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î	 Ã«	î
 Ã«
î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î Ã«î  Ã« î! Ã«!î" Ã«"‹ &î  Ã» î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î	 Ã»	î
 Ã»
î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î Ã»î  Ã» î! Ã»!î" Ã»"î# Ã»#î$ Ã»$î% Ã»%‹ .î  Ã… î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î	 Ã…	î
 Ã…
î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î  Ã… î! Ã…!î" Ã…"î# Ã…#î$ Ã…$î% Ã…%î& Ã…&î' Ã…'î( Ã…(î) Ã…)î* Ã…*î+ Ã…+î, Ã…,î- Ã…-‹ #î  Ã  î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î	 Ã 	î
 Ã 
î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î Ã î  Ã  î! Ã !î" Ã "‹ &î  ÃÀ î ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî	 ÃÀ	î
 ÃÀ
î ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî ÃÀî  ÃÀ î! ÃÀ!î" ÃÀ"î# ÃÀ#î$ ÃÀ$î% ÃÀ%‹ î  ÃÃ î ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî	 ÃÃ	î
 ÃÃ
î ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃî ÃÃ‹ $î  ÃÕ î ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî	 ÃÕ	î
 ÃÕ
î ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî ÃÕî  ÃÕ î! ÃÕ!î" ÃÕ"î# ÃÕ#‹ 'î  ÃŒ î ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî	 ÃŒ	î
 ÃŒ
î ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî ÃŒî  ÃŒ î! ÃŒ!î" ÃŒ"î# ÃŒ#î$ ÃŒ$î% ÃŒ%î& ÃŒ&üî  Ãœ î Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî Ãœî	 Ãœ	î
 Ãœ
î Ãœî Ãœî Ãœî Ãœíî  Ã– î Ã–‹ Pî  Ã— î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î	 Ã—	î
 Ã—
î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î Ã—î  Ã— î! Ã—!î" Ã—"î# Ã—#î$ Ã—$î% Ã—%î& Ã—&î' Ã—'î( Ã—(î) Ã—)î* Ã—*î+ Ã—+î, Ã—,î- Ã—-î. Ã—.î/ Ã—/î0 Ã—0î1 Ã—1î2 Ã—2î3 Ã—3î4 Ã—4î5 Ã—5î6 Ã—6î7 Ã—7î8 Ã—8î9 Ã—9î: Ã—:î; Ã—;î< Ã—<î= Ã—=î> Ã—>î? Ã—?îÃ@ Ã—Ã@îÃA Ã—ÃAîÃB Ã—ÃBîÃC Ã—ÃCîÃD Ã—ÃDîÃE Ã—ÃEîÃF Ã—ÃFîÃG Ã—ÃGîÃH Ã—ÃHîÃI Ã—ÃIîÃJ Ã—ÃJîÃK Ã—ÃKîÃL Ã—ÃLîÃM Ã—ÃMîÃN Ã—ÃNîÃO Ã—ÃO‹ Oî  Ã“ î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î	 Ã“	î
 Ã“
î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î Ã“î  Ã“ î! Ã“!î" Ã“"î# Ã“#î$ Ã“$î% Ã“%î& Ã“&î' Ã“'î( Ã“(î) Ã“)î* Ã“*î+ Ã“+î, Ã“,î- Ã“-î. Ã“.î/ Ã“/î0 Ã“0î1 Ã“1î2 Ã“2î3 Ã“3î4 Ã“4î5 Ã“5î6 Ã“6î7 Ã“7î8 Ã“8î9 Ã“9î: Ã“:î; Ã“;î< Ã“<î= Ã“=î> Ã“>î? Ã“?îÃ@ Ã“Ã@îÃA Ã“ÃAîÃB Ã“ÃBîÃC Ã“ÃCîÃD Ã“ÃDîÃE Ã“ÃEîÃF Ã“ÃFîÃG Ã“ÃGîÃH Ã“ÃHîÃI Ã“ÃIîÃJ Ã“ÃJîÃK Ã“ÃKîÃL Ã“ÃLîÃM Ã“ÃMîÃN Ã“ÃN‹ Qî  Ã” î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î	 Ã”	î
 Ã”
î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î Ã”î  Ã” î! Ã”!î" Ã”"î# Ã”#î$ Ã”$î% Ã”%î& Ã”&î' Ã”'î( Ã”(î) Ã”)î* Ã”*î+ Ã”+î, Ã”,î- Ã”-î. Ã”.î/ Ã”/î0 Ã”0î1 Ã”1î2 Ã”2î3 Ã”3î4 Ã”4î5 Ã”5î6 Ã”6î7 Ã”7î8 Ã”8î9 Ã”9î: Ã”:î; Ã”;î< Ã”<î= Ã”=î> Ã”>î? Ã”?îÃ@ Ã”Ã@îÃA Ã”ÃAîÃB Ã”ÃBîÃC Ã”ÃCîÃD Ã”ÃDîÃE Ã”ÃEîÃF Ã”ÃFîÃG Ã”ÃGîÃH Ã”ÃHîÃI Ã”ÃIîÃJ Ã”ÃJîÃK Ã”ÃKîÃL Ã”ÃLîÃM Ã”ÃMîÃN Ã”ÃNîÃO Ã”ÃOîÃP Ã”ÃP‹ Oî  Ã‘ î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î	 Ã‘	î
 Ã‘
î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î Ã‘î  Ã‘ î! Ã‘!î" Ã‘"î# Ã‘#î$ Ã‘$î% Ã‘%î& Ã‘&î' Ã‘'î( Ã‘(î) Ã‘)î* Ã‘*î+ Ã‘+î, Ã‘,î- Ã‘-î. Ã‘.î/ Ã‘/î0 Ã‘0î1 Ã‘1î2 Ã‘2î3 Ã‘3î4 Ã‘4î5 Ã‘5î6 Ã‘6î7 Ã‘7î8 Ã‘8î9 Ã‘9î: Ã‘:î; Ã‘;î< Ã‘<î= Ã‘=î> Ã‘>î? Ã‘?îÃ@ Ã‘Ã@îÃA Ã‘ÃAîÃB Ã‘ÃBîÃC Ã‘ÃCîÃD Ã‘ÃDîÃE Ã‘ÃEîÃF Ã‘ÃFîÃG Ã‘ÃGîÃH Ã‘ÃHîÃI Ã‘ÃIîÃJ Ã‘ÃJîÃK Ã‘ÃKîÃL Ã‘ÃLîÃM Ã‘ÃMîÃN Ã‘ÃN‹ .î  Ã’ î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î	 Ã’	î
 Ã’
î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î Ã’î  Ã’ î! Ã’!î" Ã’"î# Ã’#î$ Ã’$î% Ã’%î& Ã’&î' Ã’'î( Ã’(î) Ã’)î* Ã’*î+ Ã’+î, Ã’,î- Ã’-‹ î  Ã÷ î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î	 Ã÷	î
 Ã÷
î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷î Ã÷õî  Ã◊ î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î Ã◊î	 Ã◊	î
 Ã◊
óî  Ãÿ î Ãÿî Ãÿî Ãÿî Ãÿî Ãÿî Ãÿ‹ cî  ÃŸ î ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî	 ÃŸ	î
 ÃŸ
î ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî ÃŸî  ÃŸ î! ÃŸ!î" ÃŸ"î# ÃŸ#î$ ÃŸ$î% ÃŸ%î& ÃŸ&î' ÃŸ'î( ÃŸ(î) ÃŸ)î* ÃŸ*î+ ÃŸ+î, ÃŸ,î- ÃŸ-î. ÃŸ.î/ ÃŸ/î0 ÃŸ0î1 ÃŸ1î2 ÃŸ2î3 ÃŸ3î4 ÃŸ4î5 ÃŸ5î6 ÃŸ6î7 ÃŸ7î8 ÃŸ8î9 ÃŸ9î: ÃŸ:î; ÃŸ;î< ÃŸ<î= ÃŸ=î> ÃŸ>î? ÃŸ?îÃ@ ÃŸÃ@îÃA ÃŸÃAîÃB ÃŸÃBîÃC ÃŸÃCîÃD ÃŸÃDîÃE ÃŸÃEîÃF ÃŸÃFîÃG ÃŸÃGîÃH ÃŸÃHîÃI ÃŸÃIîÃJ ÃŸÃJîÃK ÃŸÃKîÃL ÃŸÃLîÃM ÃŸÃMîÃN ÃŸÃNîÃO ÃŸÃOîÃP ÃŸÃPîÃQ ÃŸÃQîÃR ÃŸÃRîÃS ÃŸÃSîÃT ÃŸÃTîÃU ÃŸÃUîÃV ÃŸÃVîÃW ÃŸÃWîÃX ÃŸÃXîÃY ÃŸÃYîÃZ ÃŸÃZîÃ[ ÃŸÃ[îÃ\ ÃŸÃ\îÃ] ÃŸÃ]îÃ^ ÃŸÃ^îÃ_ ÃŸÃ_îÃ` ÃŸÃ`îÃa ÃŸÃaîÃb ÃŸÃb‹ 8î  Ã⁄ î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î	 Ã⁄	î
 Ã⁄
î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î Ã⁄î  Ã⁄ î! Ã⁄!î" Ã⁄"î# Ã⁄#î$ Ã⁄$î% Ã⁄%î& Ã⁄&î' Ã⁄'î( Ã⁄(î) Ã⁄)î* Ã⁄*î+ Ã⁄+î, Ã⁄,î- Ã⁄-î. Ã⁄.î/ Ã⁄/î0 Ã⁄0î1 Ã⁄1î2 Ã⁄2î3 Ã⁄3î4 Ã⁄4î5 Ã⁄5î6 Ã⁄6î7 Ã⁄7‹ -î  Ã€ î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î	 Ã€	î
 Ã€
î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î Ã€î  Ã€ î! Ã€!î" Ã€"î# Ã€#î$ Ã€$î% Ã€%î& Ã€&î' Ã€'î( Ã€(î) Ã€)î* Ã€*î+ Ã€+î, Ã€,‹ 2î  Ã‹ î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î	 Ã‹	î
 Ã‹
î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î Ã‹î  Ã‹ î! Ã‹!î" Ã‹"î# Ã‹#î$ Ã‹$î% Ã‹%î& Ã‹&î' Ã‹'î( Ã‹(î) Ã‹)î* Ã‹*î+ Ã‹+î, Ã‹,î- Ã‹-î. Ã‹.î/ Ã‹/î0 Ã‹0î1 Ã‹1‹ [î  Ã› î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î	 Ã›	î
 Ã›
î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î Ã›î  Ã› î! Ã›!î" Ã›"î# Ã›#î$ Ã›$î% Ã›%î& Ã›&î' Ã›'î( Ã›(î) Ã›)î* Ã›*î+ Ã›+î, Ã›,î- Ã›-î. Ã›.î/ Ã›/î0 Ã›0î1 Ã›1î2 Ã›2î3 Ã›3î4 Ã›4î5 Ã›5î6 Ã›6î7 Ã›7î8 Ã›8î9 Ã›9î: Ã›:î; Ã›;î< Ã›<î= Ã›=î> Ã›>î? Ã›?îÃ@ Ã›Ã@îÃA Ã›ÃAîÃB Ã›ÃBîÃC Ã›ÃCîÃD Ã›ÃDîÃE Ã›ÃEîÃF Ã›ÃFîÃG Ã›ÃGîÃH Ã›ÃHîÃI Ã›ÃIîÃJ Ã›ÃJîÃK Ã›ÃKîÃL Ã›ÃLîÃM Ã›ÃMîÃN Ã›ÃNîÃO Ã›ÃOîÃP Ã›ÃPîÃQ Ã›ÃQîÃR Ã›ÃRîÃS Ã›ÃSîÃT Ã›ÃTîÃU Ã›ÃUîÃV Ã›ÃVîÃW Ã›ÃWîÃX Ã›ÃXîÃY Ã›ÃYîÃZ Ã›ÃZ‹ Tî  Ãﬁ î Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî	 Ãﬁ	î
 Ãﬁ
î Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî  Ãﬁ î! Ãﬁ!î" Ãﬁ"î# Ãﬁ#î$ Ãﬁ$î% Ãﬁ%î& Ãﬁ&î' Ãﬁ'î( Ãﬁ(î) Ãﬁ)î* Ãﬁ*î+ Ãﬁ+î, Ãﬁ,î- Ãﬁ-î. Ãﬁ.î/ Ãﬁ/î0 Ãﬁ0î1 Ãﬁ1î2 Ãﬁ2î3 Ãﬁ3î4 Ãﬁ4î5 Ãﬁ5î6 Ãﬁ6î7 Ãﬁ7î8 Ãﬁ8î9 Ãﬁ9î: Ãﬁ:î; Ãﬁ;î< Ãﬁ<î= Ãﬁ=î> Ãﬁ>î? Ãﬁ?îÃ@ ÃﬁÃ@îÃA ÃﬁÃAîÃB ÃﬁÃBîÃC ÃﬁÃCîÃD ÃﬁÃDîÃE ÃﬁÃEîÃF ÃﬁÃFîÃG ÃﬁÃGîÃH ÃﬁÃHîÃI ÃﬁÃIîÃJ ÃﬁÃJîÃK ÃﬁÃKîÃL ÃﬁÃLîÃM ÃﬁÃMîÃN ÃﬁÃNîÃO ÃﬁÃOîÃP ÃﬁÃPîÃQ ÃﬁÃQîÃR ÃﬁÃRîÃS ÃﬁÃSíî  Ãﬂ î Ãﬂóî  Ã‡ î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡î Ã‡íî  Ã· î Ã·‹ .î  Ã‚ î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î	 Ã‚	î
 Ã‚
î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î Ã‚î  Ã‚ î! Ã‚!î" Ã‚"î# Ã‚#î$ Ã‚$î% Ã‚%î& Ã‚&î' Ã‚'î( Ã‚(î) Ã‚)î* Ã‚*î+ Ã‚+î, Ã‚,î- Ã‚-‹ *î  Ã„ î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î	 Ã„	î
 Ã„
î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î Ã„î  Ã„ î! Ã„!î" Ã„"î# Ã„#î$ Ã„$î% Ã„%î& Ã„&î' Ã„'î( Ã„(î) Ã„)‹ Aî  Ã‰ î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î	 Ã‰	î
 Ã‰
î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î Ã‰î  Ã‰ î! Ã‰!î" Ã‰"î# Ã‰#î$ Ã‰$î% Ã‰%î& Ã‰&î' Ã‰'î( Ã‰(î) Ã‰)î* Ã‰*î+ Ã‰+î, Ã‰,î- Ã‰-î. Ã‰.î/ Ã‰/î0 Ã‰0î1 Ã‰1î2 Ã‰2î3 Ã‰3î4 Ã‰4î5 Ã‰5î6 Ã‰6î7 Ã‰7î8 Ã‰8î9 Ã‰9î: Ã‰:î; Ã‰;î< Ã‰<î= Ã‰=î> Ã‰>î? Ã‰?îÃ@ Ã‰Ã@‹ î  ÃÂ î ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî	 ÃÂ	î
 ÃÂ
î ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂî ÃÂ‹ ;î  ÃÊ î ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî	 ÃÊ	î
 ÃÊ
î ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî  ÃÊ î! ÃÊ!î" ÃÊ"î# ÃÊ#î$ ÃÊ$î% ÃÊ%î& ÃÊ&î' ÃÊ'î( ÃÊ(î) ÃÊ)î* ÃÊ*î+ ÃÊ+î, ÃÊ,î- ÃÊ-î. ÃÊ.î/ ÃÊ/î0 ÃÊ0î1 ÃÊ1î2 ÃÊ2î3 ÃÊ3î4 ÃÊ4î5 ÃÊ5î6 ÃÊ6î7 ÃÊ7î8 ÃÊ8î9 ÃÊ9î: ÃÊ:‹ .î  ÃÁ î ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî	 ÃÁ	î
 ÃÁ
î ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî ÃÁî  ÃÁ î! ÃÁ!î" ÃÁ"î# ÃÁ#î$ ÃÁ$î% ÃÁ%î& ÃÁ&î' ÃÁ'î( ÃÁ(î) ÃÁ)î* ÃÁ*î+ ÃÁ+î, ÃÁ,î- ÃÁ-‹ Bî  ÃË î ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî	 ÃË	î
 ÃË
î ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî ÃËî  ÃË î! ÃË!î" ÃË"î# ÃË#î$ ÃË$î% ÃË%î& ÃË&î' ÃË'î( ÃË(î) ÃË)î* ÃË*î+ ÃË+î, ÃË,î- ÃË-î. ÃË.î/ ÃË/î0 ÃË0î1 ÃË1î2 ÃË2î3 ÃË3î4 ÃË4î5 ÃË5î6 ÃË6î7 ÃË7î8 ÃË8î9 ÃË9î: ÃË:î; ÃË;î< ÃË<î= ÃË=î> ÃË>î? ÃË?îÃ@ ÃËÃ@îÃA ÃËÃA‹ Pî  ÃÈ î ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî	 ÃÈ	î
 ÃÈ
î ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî ÃÈî  ÃÈ î! ÃÈ!î" ÃÈ"î# ÃÈ#î$ ÃÈ$î% ÃÈ%î& ÃÈ&î' ÃÈ'î( ÃÈ(î) ÃÈ)î* ÃÈ*î+ ÃÈ+î, ÃÈ,î- ÃÈ-î. ÃÈ.î/ ÃÈ/î0 ÃÈ0î1 ÃÈ1î2 ÃÈ2î3 ÃÈ3î4 ÃÈ4î5 ÃÈ5î6 ÃÈ6î7 ÃÈ7î8 ÃÈ8î9 ÃÈ9î: ÃÈ:î; ÃÈ;î< ÃÈ<î= ÃÈ=î> ÃÈ>î? ÃÈ?îÃ@ ÃÈÃ@îÃA ÃÈÃAîÃB ÃÈÃBîÃC ÃÈÃCîÃD ÃÈÃDîÃE ÃÈÃEîÃF ÃÈÃFîÃG ÃÈÃGîÃH ÃÈÃHîÃI ÃÈÃIîÃJ ÃÈÃJîÃK ÃÈÃKîÃL ÃÈÃLîÃM ÃÈÃMîÃN ÃÈÃNîÃO ÃÈÃOóî  ÃÍ î ÃÍî ÃÍî ÃÍî ÃÍî ÃÍî ÃÍíî  ÃÎ î ÃÎ‹ 0î  ÃÏ î ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî	 ÃÏ	î
 ÃÏ
î ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî  ÃÏ î! ÃÏ!î" ÃÏ"î# ÃÏ#î$ ÃÏ$î% ÃÏ%î& ÃÏ&î' ÃÏ'î( ÃÏ(î) ÃÏ)î* ÃÏ*î+ ÃÏ+î, ÃÏ,î- ÃÏ-î. ÃÏ.î/ ÃÏ/‹ *î  ÃÌ î ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî	 ÃÌ	î
 ÃÌ
î ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî ÃÌî  ÃÌ î! ÃÌ!î" ÃÌ"î# ÃÌ#î$ ÃÌ$î% ÃÌ%î& ÃÌ&î' ÃÌ'î( ÃÌ(î) ÃÌ)‹ Aî  ÃÓ î ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî	 ÃÓ	î
 ÃÓ
î ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî ÃÓî  ÃÓ î! ÃÓ!î" ÃÓ"î# ÃÓ#î$ ÃÓ$î% ÃÓ%î& ÃÓ&î' ÃÓ'î( ÃÓ(î) ÃÓ)î* ÃÓ*î+ ÃÓ+î, ÃÓ,î- ÃÓ-î. ÃÓ.î/ ÃÓ/î0 ÃÓ0î1 ÃÓ1î2 ÃÓ2î3 ÃÓ3î4 ÃÓ4î5 ÃÓ5î6 ÃÓ6î7 ÃÓ7î8 ÃÓ8î9 ÃÓ9î: ÃÓ:î; ÃÓ;î< ÃÓ<î= ÃÓ=î> ÃÓ>î? ÃÓ?îÃ@ ÃÓÃ@‹ sî  ÃÔ î ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî	 ÃÔ	î
 ÃÔ
î ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔî  ÃÔ î! ÃÔ!î" ÃÔ"î# ÃÔ#î$ ÃÔ$î% ÃÔ%î& ÃÔ&î' ÃÔ'î( ÃÔ(î) ÃÔ)î* ÃÔ*î+ ÃÔ+î, ÃÔ,î- ÃÔ-î. ÃÔ.î/ ÃÔ/î0 ÃÔ0î1 ÃÔ1î2 ÃÔ2î3 ÃÔ3î4 ÃÔ4î5 ÃÔ5î6 ÃÔ6î7 ÃÔ7î8 ÃÔ8î9 ÃÔ9î: ÃÔ:î; ÃÔ;î< ÃÔ<î= ÃÔ=î> ÃÔ>î? ÃÔ?îÃ@ ÃÔÃ@îÃA ÃÔÃAîÃB ÃÔÃBîÃC ÃÔÃCîÃD ÃÔÃDîÃE ÃÔÃEîÃF ÃÔÃFîÃG ÃÔÃGîÃH ÃÔÃHîÃI ÃÔÃIîÃJ ÃÔÃJîÃK ÃÔÃKîÃL ÃÔÃLîÃM ÃÔÃMîÃN ÃÔÃNîÃO ÃÔÃOîÃP ÃÔÃPîÃQ ÃÔÃQîÃR ÃÔÃRîÃS ÃÔÃSîÃT ÃÔÃTîÃU ÃÔÃUîÃV ÃÔÃVîÃW ÃÔÃWîÃX ÃÔÃXîÃY ÃÔÃYîÃZ ÃÔÃZîÃ[ ÃÔÃ[îÃ\ ÃÔÃ\îÃ] ÃÔÃ]îÃ^ ÃÔÃ^îÃ_ ÃÔÃ_îÃ` ÃÔÃ`îÃa ÃÔÃaîÃb ÃÔÃbîÃc ÃÔÃcîÃd ÃÔÃdîÃe ÃÔÃeîÃf ÃÔÃfîÃg ÃÔÃgîÃh ÃÔÃhîÃi ÃÔÃiîÃj ÃÔÃjîÃk ÃÔÃkîÃl ÃÔÃlîÃm ÃÔÃmîÃn ÃÔÃnîÃo ÃÔÃoîÃp ÃÔÃpîÃq ÃÔÃqîÃr ÃÔÃr‹ <î  Ã î Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî	 Ã	î
 Ã
î Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî Ãî  Ã î! Ã!î" Ã"î# Ã#î$ Ã$î% Ã%î& Ã&î' Ã'î( Ã(î) Ã)î* Ã*î+ Ã+î, Ã,î- Ã-î. Ã.î/ Ã/î0 Ã0î1 Ã1î2 Ã2î3 Ã3î4 Ã4î5 Ã5î6 Ã6î7 Ã7î8 Ã8î9 Ã9î: Ã:î; Ã;‹ Qî  ÃÒ î ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî	 ÃÒ	î
 ÃÒ
î ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî ÃÒî  ÃÒ î! ÃÒ!î" ÃÒ"î# ÃÒ#î$ ÃÒ$î% ÃÒ%î& ÃÒ&î' ÃÒ'î( ÃÒ(î) ÃÒ)î* ÃÒ*î+ ÃÒ+î, ÃÒ,î- ÃÒ-î. ÃÒ.î/ ÃÒ/î0 ÃÒ0î1 ÃÒ1î2 ÃÒ2î3 ÃÒ3î4 ÃÒ4î5 ÃÒ5î6 ÃÒ6î7 ÃÒ7î8 ÃÒ8î9 ÃÒ9î: ÃÒ:î; ÃÒ;î< ÃÒ<î= ÃÒ=î> ÃÒ>î? ÃÒ?îÃ@ ÃÒÃ@îÃA ÃÒÃAîÃB ÃÒÃBîÃC ÃÒÃCîÃD ÃÒÃDîÃE ÃÒÃEîÃF ÃÒÃFîÃG ÃÒÃGîÃH ÃÒÃHîÃI ÃÒÃIîÃJ ÃÒÃJîÃK ÃÒÃKîÃL ÃÒÃLîÃM ÃÒÃMîÃN ÃÒÃNîÃO ÃÒÃOîÃP ÃÒÃPóî  ÃÚ î ÃÚî ÃÚî ÃÚî ÃÚî ÃÚî ÃÚíî  ÃÛ î ÃÛìî  ÃÙ î ÃÙî ÃÙíî  Ãı î Ãıöî  Ãˆ î Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî Ãˆî	 Ãˆ	ùî  Ã˜ î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î	 Ã˜	î
 Ã˜
î Ã˜î Ã˜õî  Ã¯ î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î	 Ã¯	î
 Ã¯
ûî  Ã˘ î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î	 Ã˘	î
 Ã˘
î Ã˘î Ã˘î Ã˘üî  Ã˙ î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î Ã˙î	 Ã˙	î
 Ã˙
î Ã˙î Ã˙î Ã˙î Ã˙õî  Ã˚ î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î	 Ã˚	î
 Ã˚
úî  Ã¸ î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î	 Ã¸	î
 Ã¸
î Ã¸‹ î  Ã˝ î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î	 Ã˝	î
 Ã˝
î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝î Ã˝‹ î  Ã˛ î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î	 Ã˛	î
 Ã˛
î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î Ã˛üî  Ãˇ î Ãˇî Ãˇî Ãˇî Ãˇî Ãˇî Ãˇî Ãˇî Ãˇî	 Ãˇ	î
 Ãˇ
î Ãˇî Ãˇî Ãˇî Ãˇ‹ î  Õ  î Õ î Õ î Õ î Õ î Õ î Õ î Õ î Õ î	 Õ 	î
 Õ 
î Õ î Õ î Õ î Õ î Õ î Õ ‹ |î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî  Õ î! Õ!î" Õ"î# Õ#î$ Õ$î% Õ%î& Õ&î' Õ'î( Õ(î) Õ)î* Õ*î+ Õ+î, Õ,î- Õ-î. Õ.î/ Õ/î0 Õ0î1 Õ1î2 Õ2î3 Õ3î4 Õ4î5 Õ5î6 Õ6î7 Õ7î8 Õ8î9 Õ9î: Õ:î; Õ;î< Õ<î= Õ=î> Õ>î? Õ?îÃ@ ÕÃ@îÃA ÕÃAîÃB ÕÃBîÃC ÕÃCîÃD ÕÃDîÃE ÕÃEîÃF ÕÃFîÃG ÕÃGîÃH ÕÃHîÃI ÕÃIîÃJ ÕÃJîÃK ÕÃKîÃL ÕÃLîÃM ÕÃMîÃN ÕÃNîÃO ÕÃOîÃP ÕÃPîÃQ ÕÃQîÃR ÕÃRîÃS ÕÃSîÃT ÕÃTîÃU ÕÃUîÃV ÕÃVîÃW ÕÃWîÃX ÕÃXîÃY ÕÃYîÃZ ÕÃZîÃ[ ÕÃ[îÃ\ ÕÃ\îÃ] ÕÃ]îÃ^ ÕÃ^îÃ_ ÕÃ_îÃ` ÕÃ`îÃa ÕÃaîÃb ÕÃbîÃc ÕÃcîÃd ÕÃdîÃe ÕÃeîÃf ÕÃfîÃg ÕÃgîÃh ÕÃhîÃi ÕÃiîÃj ÕÃjîÃk ÕÃkîÃl ÕÃlîÃm ÕÃmîÃn ÕÃnîÃo ÕÃoîÃp ÕÃpîÃq ÕÃqîÃr ÕÃrîÃs ÕÃsîÃt ÕÃtîÃu ÕÃuîÃv ÕÃvîÃw ÕÃwîÃx ÕÃxîÃy ÕÃyîÃz ÕÃzîÃ{ ÕÃ{‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õ‹ î  Õ î Õî Õî Õî Õî Õî Õî Õî Õî	 Õ	î
 Õ
î Õî Õî Õî Õî Õî Õî Õî Õî Õî Õî Õíî  Õ î ÕêëŸèD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\index.jsë⁄.?/*
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import Core from './src/main/core';
import { DEFAULT, TestType, Size, Level, TAG, PrintTag } from './src/main/Constant';
import DataDriver from './src/main/module/config/DataDriver';
import ExpectExtend from './src/main/module/assert/ExpectExtend';
import OhReport from './src/main/module/report/OhReport';
import SysTestKit from './src/main/module/kit/SysTestKit';
import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, beforeItSpecified, afterItSpecified, xdescribe, xit } from './src/main/interface';
import { MockKit, when } from './src/main/module/mock/MockKit';
import ArgumentMatchers from './src/main/module/mock/ArgumentMatchers';
import worker from '@ohos.worker';

class Hypium {
    static context = new Map();
    static setData(data) {
        const core = Core.getInstance();
        const dataDriver = new DataDriver({ data });
        core.addService('dataDriver', dataDriver);
    }

    static setTimeConfig(systemTime) {
        SysTestKit.systemTime = systemTime;
    }
	
    static set(key, value) {
        Hypium.context.set(key, value);
    }

    static get(key) {
        return Hypium.context.get(key);
    }

    static hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite) {
        const core = Core.getInstance();
        const expectExtend = new ExpectExtend({
            'id': 'extend'
        });
        core.addService('expect', expectExtend);
        const ohReport = new OhReport({
            'delegator': abilityDelegator,
            'abilityDelegatorArguments': abilityDelegatorArguments
        });
        SysTestKit.delegator = abilityDelegator;
        core.addService('report', ohReport);
        core.init();
        core.subscribeEvent('spec', ohReport);
        core.subscribeEvent('suite', ohReport);
        core.subscribeEvent('task', ohReport);
        const configService = core.getDefaultService('config');
        if (abilityDelegatorArguments !== null) {
            let testParameters = configService.translateParams(abilityDelegatorArguments.parameters);
            console.info(`${TAG}parameters:${JSON.stringify(testParameters)}`);
            configService.setConfig(testParameters);
        }
        testsuite();
        core.execute(abilityDelegator);
    }
    static async hypiumInitWorkers(abilityDelegator, scriptURL, workerNum = 8, params) {
        console.info(`${TAG}, hypiumInitWorkers call,${scriptURL}`);
        let workerPromiseArray = [];

        // ÂºÄÂßãÁªüËÆ°Êó∂Èó¥
        let startTime = await SysTestKit.getRealTime();
        for (let i = 0; i < workerNum; i++) {
            // ÂàõÂª∫workerÁ∫øÁ®ã
            const workerPromise = Hypium.createWorkerPromise(scriptURL, i, params);
            workerPromiseArray.push(workerPromise);
        }
        const ret = {total: 0, failure: 0, error: 0, pass: 0, ignore: 0, duration: 0};
        Promise.all(workerPromiseArray).then(async (items) => {
            console.info(`${TAG}, all result from workers, ${JSON.stringify(items)}`);
            let allItemList = new Array();
            // ÁªüËÆ°ÊâßË°åÁªìÊûú
            Hypium.handleWorkerTestResult(ret, allItemList, items);
            console.info(`${TAG}, all it result, ${JSON.stringify(allItemList)}`);
            // ÁªüËÆ°Áî®‰æãÊâßË°åÁªìÊûú
            const retResult = {total: 0, failure: 0, error: 0, pass: 0, ignore: 0, duration: 0};
            // Ê†áËÆ∞Áî®‰æãÊâßË°åÁªìÊûú
            Hypium.configWorkerItTestResult(retResult, allItemList);
            // ÊâìÂç∞Áî®‰æãÁªìÊûú
            Hypium.printWorkerTestResult(abilityDelegator, allItemList);
            // Áî®‰æãÊâßË°åÂÆåÊàêÁªüËÆ°Êó∂Èó¥
            let endTime = await SysTestKit.getRealTime();
            const taskConsuming = endTime - startTime;
            const message =
                `\n${PrintTag.OHOS_REPORT_ALL_RESULT}: stream=Test run: runTimes: ${ret.total},total: ${retResult.total}, Failure: ${retResult.failure}, Error: ${retResult.error}, Pass: ${retResult.pass}, Ignore: ${retResult.ignore}` +
                    `\n${PrintTag.OHOS_REPORT_ALL_CODE}: ${retResult.failure > 0 || retResult.error > 0 ? -1 : 0}` +
                    `\n${PrintTag.OHOS_REPORT_ALL_STATUS}: taskconsuming=${taskConsuming > 0 ? taskConsuming : ret.duration}`;
            abilityDelegator.printSync(message);
            console.info(`${TAG}, [end] you worker test`);
            abilityDelegator.finishTest('you worker test finished!!!', 0, () => {});
        }).catch((e) => {
            console.info(`${TAG}, [end] error you worker test, ${JSON.stringify(e)}`);
            abilityDelegator.finishTest('you worker test error finished!!!', 0, () => {});
        }).finally(() => {
            console.info(`${TAG}, all promise finally end`);
        });
    }
    // ÂàõÂª∫workerÁ∫øÁ®ã
    static createWorkerPromise(scriptURL, i, params) {
        console.info(`${TAG}, createWorkerPromiser, ${scriptURL}, ${i}`);
        const workerPromise = new Promise((resolve, reject) => {
            const workerInstance = new worker.ThreadWorker(scriptURL, {name: `worker_${i}`});
            console.info(`${TAG}, send data to worker`);
            // ÂèëÈÄÅÊï∞ÊçÆÂà∞workerÁ∫øÁ®ã‰∏≠
            workerInstance.postMessage(params);
            workerInstance.onmessage = function (e) {
                let currentThreadName = e.data?.currentThreadName;
                console.info(`${TAG}, receview data from ${currentThreadName}, ${JSON.stringify(e.data)}`);
                //
                resolve(e.data?.summary);
                console.info(`${TAG}, ${currentThreadName} finish`);
                workerInstance.terminate();
            };
            workerInstance.onerror = function (e) {
                console.info(`${TAG}, worker error, ${JSON.stringify(e)}`);
                reject(e);
                workerInstance.terminate();
            };
            workerInstance.onmessageerror = function (e) {
                console.info(`${TAG}, worker message error, ${JSON.stringify(e)}`);
                reject(e);
                workerInstance.terminate();
            };
        });
        return workerPromise;
    }
    static handleWorkerTestResult(ret, allItemList, items) {
        console.info(`${TAG}, handleWorkerTestResult, ${JSON.stringify(items)}`);
        for (const {total, failure, error, pass, ignore, duration, itItemList} of items) {
            ret.total += total;
            ret.failure += failure;
            ret.error += error;
            ret.pass += pass;
            ret.ignore += ignore;
            ret.duration += duration;
            Hypium.handleItResult(allItemList, itItemList);
        }
    }
    static handleItResult(allItemList, itItemList) {
        // ÈÅçÂéÜÊâÄÊúâÁöÑÁî®‰æãÁªìÊûúÁªüËÆ°ÊúÄÁªàÁªìÊûú
        for (const {currentThreadName, description, result} of itItemList) {
            let item = allItemList.find((it) => it.description === description);
            if (item) {
                let itResult = item.result;
                // ÂΩìÂú®worker‰∏≠Âá∫Áé∞‰∏ÄÊ¨°failureÂ∞±Ê†áËÆ∞‰∏∫failure, Âá∫Áé∞‰∏ÄÊ¨°errorÂ∞±Ê†áËÆ∞‰∏∫error, ÊâÄÊúâÁ∫øÁ®ãÈÉΩpassÊâçÊ†áËÆ∞‰∏∫pass
                if (itResult === 0) {
                    item.result = result;
                    item.currentThreadName = currentThreadName;
                }
            } else {
                let it = {
                    description: description,
                    currentThreadName: currentThreadName,
                    result: result
                };
                allItemList.push(it);
            }
        }
    }
    static configWorkerItTestResult(retResult, allItemList) {
        console.info(`${TAG}, configWorkerItTestResult, ${JSON.stringify(allItemList)}`);
        for (const {currentThreadName, description, result} of allItemList) {
            console.info(`${TAG}, description, ${description}, result,${result}`);
            retResult.total ++;
            if (result === 0) {
                retResult.pass ++;
            } else if (result === -1) {
                retResult.error ++;
            } else if (result === -2) {
                retResult.failure ++;
            } else {
                retResult.ignore ++;
            }
        }
    }
    static printWorkerTestResult(abilityDelegator, allItemList) {
        console.info(`${TAG}, printWorkerTestResult, ${JSON.stringify(allItemList)}`);
        let index = 1;
        for (const {currentThreadName, description, result} of allItemList) {
            console.info(`${TAG}, description print, ${description}, result,${result}`);
            let itArray = description.split('#');
            let des;
            let itName;
            if (itArray.length > 1) {
                des = itArray[0];
                itName = itArray[1];
            } else if (itArray.length > 1) {
                des = itArray[0];
                itName = itArray[0];
            } else {
                des = 'undefined';
                itName = 'undefined';
            }

            let msg = `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: class=${des}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: test=${itName}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: current=${index}`;
            msg += `\n${PrintTag.OHOS_REPORT_WORKER_STATUS}: CODE=${result}`;
            abilityDelegator.printSync(msg);
            index ++;
        }
    }
    static hypiumWorkerTest(abilityDelegator, abilityDelegatorArguments, testsuite, workerPort) {
        console.info(`${TAG}, hypiumWorkerTest call`);
        SysTestKit.workerPort = workerPort;
        let currentWorkerName = workerPort.name;
        console.info(`${TAG}, hypiumWorkerTest_currentWorkerName: ${currentWorkerName}`);
        Hypium.hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite);

    }

    static registerAssert(customAssertion) {
        const core = Core.getInstance();
        const expectService = core.getDefaultService('expect');
        let matchers = {};
        matchers[customAssertion.name] = customAssertion;
        expectService.addMatchers(matchers);
        expectService.customMatchers.push(customAssertion.name);
        console.info(`${TAG}success to register the ${customAssertion.name}`);
    }

    static unregisterAssert(customAssertion) {
        const core = Core.getInstance();
        const expectService = core.getDefaultService('expect');
        let customAssertionName = typeof customAssertion === 'function' ? customAssertion.name : customAssertion;
        expectService.removeMatchers(customAssertionName);
        console.info(`${TAG}success to unregister the ${customAssertionName}`);
    }

}

export {
    Hypium,
    Core,
    DEFAULT,
    TestType,
    Size,
    Level,
    DataDriver,
    ExpectExtend,
    OhReport,
    SysTestKit,
    describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, beforeItSpecified, afterItSpecified, xdescribe, xit,
    MockKit, when,
    ArgumentMatchers
};‘rGö¨@ohos.workerØ./src/main/core≥./src/main/ConstantŸ#./src/main/module/config/DataDriverŸ%./src/main/module/assert/ExpectExtend¥./src/main/interfaceŸ ./src/main/module/kit/SysTestKitæ./src/main/module/mock/MockKitŸ!./src/main/module/report/OhReportŸ'./src/main/module/mock/ArgumentMatchers‘rHó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√Ÿf hvigor_ignore_D:_Program Files_Huawei_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.worker.d.tsA√™oh-resolve¬HA¬ŸóD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\core.jsA√™oh-resolve¬HA¬ŸõD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\Constant.jsA√™oh-resolve¬HA¬Ÿ´D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\config\DataDriver.jsA√™oh-resolve¬HA¬Ÿ≠D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\assert\ExpectExtend.jsA√™oh-resolve¬HA¬ŸúD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\interface.jsA√™oh-resolve¬HA¬Ÿ®D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\kit\SysTestKit.jsA√™oh-resolve¬HA¬Ÿ¶D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\MockKit.jsA√™oh-resolve¬HA¬Ÿ©D:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\report\OhReport.jsA√™oh-resolve¬HA¬ŸØD:\tl\www\applications_app_samples_fyj\code\DocsSample\Ability\AppLinking\oh_modules\.ohpm\@ohos+hypium@1.0.24\oh_modules\@ohos\hypium\src\main\module\mock\ArgumentMatchers.jsA√™oh-resolve¬ë‘rIíßmissing¶plugin√¶genAbc¬ê‘  ‘rJî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêë‘rKñ§type•start£end´declaration™specifiers¶source∂ExportNamedDeclarationÕ,/Õ-q¿‹ ‘rLï§type•start£end•local®exportedØExportSpecifierÕ,=Õ,C‘rMî§type•start£end§name™IdentifierÕ,=Õ,C¶HypiumM™IdentifierÕ,=Õ,C¶HypiumLØExportSpecifierÕ,JÕ,NM™IdentifierÕ,JÕ,N§CoreM™IdentifierÕ,JÕ,N§CoreLØExportSpecifierÕ,UÕ,\M™IdentifierÕ,UÕ,\ßDEFAULTM™IdentifierÕ,UÕ,\ßDEFAULTLØExportSpecifierÕ,cÕ,kM™IdentifierÕ,cÕ,k®TestTypeM™IdentifierÕ,cÕ,k®TestTypeLØExportSpecifierÕ,rÕ,vM™IdentifierÕ,rÕ,v§SizeM™IdentifierÕ,rÕ,v§SizeLØExportSpecifierÕ,}Õ,ÇM™IdentifierÕ,}Õ,Ç•LevelM™IdentifierÕ,}Õ,Ç•LevelLØExportSpecifierÕ,âÕ,ìM™IdentifierÕ,âÕ,ì™DataDriverM™IdentifierÕ,âÕ,ì™DataDriverLØExportSpecifierÕ,öÕ,¶M™IdentifierÕ,öÕ,¶¨ExpectExtendM™IdentifierÕ,öÕ,¶¨ExpectExtendLØExportSpecifierÕ,≠Õ,µM™IdentifierÕ,≠Õ,µ®OhReportM™IdentifierÕ,≠Õ,µ®OhReportLØExportSpecifierÕ,ºÕ,∆M™IdentifierÕ,ºÕ,∆™SysTestKitM™IdentifierÕ,ºÕ,∆™SysTestKitLØExportSpecifierÕ,ÕÕ,’M™IdentifierÕ,ÕÕ,’®describeM™IdentifierÕ,ÕÕ,’®describeLØExportSpecifierÕ,◊Õ,‡M™IdentifierÕ,◊Õ,‡©beforeAllM™IdentifierÕ,◊Õ,‡©beforeAllLØExportSpecifierÕ,‚Õ,ÏM™IdentifierÕ,‚Õ,Ï™beforeEachM™IdentifierÕ,‚Õ,Ï™beforeEachLØExportSpecifierÕ,ÓÕ,˜M™IdentifierÕ,ÓÕ,˜©afterEachM™IdentifierÕ,ÓÕ,˜©afterEachLØExportSpecifierÕ,˘Õ-M™IdentifierÕ,˘Õ-®afterAllM™IdentifierÕ,˘Õ-®afterAllLØExportSpecifierÕ-Õ-M™IdentifierÕ-Õ-¢itM™IdentifierÕ-Õ-¢itLØExportSpecifierÕ-Õ-M™IdentifierÕ-Õ-¶expectM™IdentifierÕ-Õ-¶expectLØExportSpecifierÕ-Õ- M™IdentifierÕ-Õ- ±beforeItSpecifiedM™IdentifierÕ-Õ- ±beforeItSpecifiedLØExportSpecifierÕ-"Õ-2M™IdentifierÕ-"Õ-2∞afterItSpecifiedM™IdentifierÕ-"Õ-2∞afterItSpecifiedLØExportSpecifierÕ-4Õ-=M™IdentifierÕ-4Õ-=©xdescribeM™IdentifierÕ-4Õ-=©xdescribeLØExportSpecifierÕ-?Õ-BM™IdentifierÕ-?Õ-B£xitM™IdentifierÕ-?Õ-B£xitLØExportSpecifierÕ-IÕ-PM™IdentifierÕ-IÕ-PßMockKitM™IdentifierÕ-IÕ-PßMockKitLØExportSpecifierÕ-RÕ-VM™IdentifierÕ-RÕ-V§whenM™IdentifierÕ-RÕ-V§whenLØExportSpecifierÕ-]Õ-mM™IdentifierÕ-]Õ-m∞ArgumentMatchersM™IdentifierÕ-]Õ-m∞ArgumentMatchers¿ö‘rNï§type•start£end™specifiers¶source±ImportDeclarationÕtÕóë‘rOî§type•start£end•local∂ImportDefaultSpecifierÕ{ÕM™IdentifierÕ{Õ§Core‘rPï§type•start£end•value£rawßLiteralÕÖÕñØ./src/main/core±'./src/main/core'N±ImportDeclarationÕôÕÌñ‘rQï§type•start£end®imported•localØImportSpecifierÕ¢Õ©M™IdentifierÕ¢Õ©ßDEFAULTM™IdentifierÕ¢Õ©ßDEFAULTQØImportSpecifierÕ´Õ≥M™IdentifierÕ´Õ≥®TestTypeM™IdentifierÕ´Õ≥®TestTypeQØImportSpecifierÕµÕπM™IdentifierÕµÕπ§SizeM™IdentifierÕµÕπ§SizeQØImportSpecifierÕªÕ¿M™IdentifierÕªÕ¿•LevelM™IdentifierÕªÕ¿•LevelQØImportSpecifierÕ¬Õ≈M™IdentifierÕ¬Õ≈£TAGM™IdentifierÕ¬Õ≈£TAGQØImportSpecifierÕ«ÕœM™IdentifierÕ«Õœ®PrintTagM™IdentifierÕ«Õœ®PrintTagPßLiteralÕ◊ÕÏ≥./src/main/Constantµ'./src/main/Constant'N±ImportDeclarationÕÔÕ,ëO∂ImportDefaultSpecifierÕˆÕ M™IdentifierÕˆÕ ™DataDriverPßLiteralÕÕ+Ÿ#./src/main/module/config/DataDriverŸ%'./src/main/module/config/DataDriver'N±ImportDeclarationÕ.ÕoëO∂ImportDefaultSpecifierÕ5ÕAM™IdentifierÕ5ÕA¨ExpectExtendPßLiteralÕGÕnŸ%./src/main/module/assert/ExpectExtendŸ''./src/main/module/assert/ExpectExtend'N±ImportDeclarationÕqÕ™ëO∂ImportDefaultSpecifierÕxÕÄM™IdentifierÕxÕÄ®OhReportPßLiteralÕÜÕ©Ÿ!./src/main/module/report/OhReportŸ#'./src/main/module/report/OhReport'N±ImportDeclarationÕ¨ÕÊëO∂ImportDefaultSpecifierÕ≥ÕΩM™IdentifierÕ≥ÕΩ™SysTestKitPßLiteralÕ√ÕÂŸ ./src/main/module/kit/SysTestKitŸ"'./src/main/module/kit/SysTestKit'N±ImportDeclarationÕËÕÖõQØImportSpecifierÕÒÕ˘M™IdentifierÕÒÕ˘®describeM™IdentifierÕÒÕ˘®describeQØImportSpecifierÕ˚ÕM™IdentifierÕ˚Õ©beforeAllM™IdentifierÕ˚Õ©beforeAllQØImportSpecifierÕÕM™IdentifierÕÕ™beforeEachM™IdentifierÕÕ™beforeEachQØImportSpecifierÕÕM™IdentifierÕÕ©afterEachM™IdentifierÕÕ©afterEachQØImportSpecifierÕÕ%M™IdentifierÕÕ%®afterAllM™IdentifierÕÕ%®afterAllQØImportSpecifierÕ'Õ)M™IdentifierÕ'Õ)¢itM™IdentifierÕ'Õ)¢itQØImportSpecifierÕ+Õ1M™IdentifierÕ+Õ1¶expectM™IdentifierÕ+Õ1¶expectQØImportSpecifierÕ3ÕDM™IdentifierÕ3ÕD±beforeItSpecifiedM™IdentifierÕ3ÕD±beforeItSpecifiedQØImportSpecifierÕFÕVM™IdentifierÕFÕV∞afterItSpecifiedM™IdentifierÕFÕV∞afterItSpecifiedQØImportSpecifierÕXÕaM™IdentifierÕXÕa©xdescribeM™IdentifierÕXÕa©xdescribeQØImportSpecifierÕcÕfM™IdentifierÕcÕf£xitM™IdentifierÕcÕf£xitPßLiteralÕnÕÑ¥./src/main/interface∂'./src/main/interface'N±ImportDeclarationÕáÕ∆íQØImportSpecifierÕêÕóM™IdentifierÕêÕóßMockKitM™IdentifierÕêÕóßMockKitQØImportSpecifierÕôÕùM™IdentifierÕôÕù§whenM™IdentifierÕôÕù§whenPßLiteralÕ•Õ≈æ./src/main/module/mock/MockKitŸ './src/main/module/mock/MockKit'N±ImportDeclarationÕ»ÕëO∂ImportDefaultSpecifierÕœÕﬂM™IdentifierÕœÕﬂ∞ArgumentMatchersPßLiteralÕÂÕŸ'./src/main/module/mock/ArgumentMatchersŸ)'./src/main/module/mock/ArgumentMatchers'N±ImportDeclarationÕÕ3ëO∂ImportDefaultSpecifierÕÕM™IdentifierÕÕ¶workerPßLiteralÕ$Õ2¨@ohos.workerÆ'@ohos.worker'
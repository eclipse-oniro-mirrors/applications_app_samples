{
  "title": "openHarmony module-level build-profile configuration",
  "description": "This document describes the configuration details of the openHarmony module-level configuration file build-profile.json5.",
  "type": "object",
  "propertyNames": {
    "enum": [
      "apiType",
      "targets",
      "buildOption"
    ]
  },
  "properties": {
    "targets": {
      "description": "Defines different target schemes customized for the module. Multiple target schemes can be included. By default, a default target exists.",
      "type": "array",
      "items": {
        "type": "object",
        "propertyNames": {
          "enum": [
            "name",
            "runtimeOS"
          ]
        },
        "properties": {
          "name": {
            "description": "Define the target name",
            "type": "string",
            "maxLength": 127,
            "pattern": "^[0-9a-zA-Z_-]+$"
          },
          "runtimeOS": {
            "description": "The type of runtimeOS specified by the target",
            "type": "string",
            "enum": [
              "HarmonyOS",
              "OpenHarmony"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "minItems": 1
    },
    "buildOption": {
      "description": "Configure the related configurations used by the module during the build process.",
      "type": "object",
      "propertyNames": {
        "enum": [
          "externalNativeOptions",
          "napiLibFilterOption"
        ]
      },
      "properties": {
        "externalNativeOptions": {
          "description": "Configurations related to native compilation.",
          "type": "object",
          "propertyNames": {
            "enum": [
              "path",
              "abiFilters",
              "arguments",
              "cppFlags"
            ]
          },
          "properties": {
            "path": {
              "description": "Path of the CMakeLists.txt file (relative to the configuration file), for example, ./src/main/cpp/CMakeLists.txt.",
              "type": "string"
            },
            "abiFilters": {
              "description": "Defines the CPU architecture type of the system where the CPP application runs. Multiple CPU architecture types can be included, for example, Arm64-v8a.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arm64-v8a",
                  "armeabi-v7a",
                  "x86_64"
                ]
              },
              "minItems": 1
            },
            "arguments": {
              "description": "Specifies cmake compilation parameters, for example, -v -DOHOS_STL=c++_static",
              "type": "string"
            },
            "cppFlags": {
              "description": "Specifies the settings related to CMAKE_CXX_FLAGS.",
              "type": "string"
            }
          }
        },
        "napiLibFilterOption": {
          "description": "Filter options for NAPI library (.so) files",
          "type": "object",
          "propertyNames": {
            "enum": [
              "excludes",
              "pickFirsts",
              "pickLasts",
              "enableOverride"
            ]
          },
          "properties": {
            "excludes": {
              "description": "Set of excluded patterns. NAPI libraries matching any of these patterns will not be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickFirsts": {
              "description": "Set of patterns where the first occurrence is packaged into HAP. For each NAPI libraries matched any of these pattern, only the first one will be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pickLasts": {
              "description": "Set of patterns where the last occurrence is packaged into HAP. For each NAPI libraries matched any of these pattern, only the last one will be packaged.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enableOverride": {
              "description": "Enable the override of NAPI library. NAPI libraries with the same path will be allowed. ",
              "type": "boolean"
            }
          }
        }
      }
    },
    "apiType": {
      "type": "string",
      "description": "Ability API model type. The faMode and updated stageMode models can be configured.",
      "enum": [
        "faMode",
        "stageMode"
      ]
    }
  }
}

import { OhosHapTask } from '../task/ohos-hap-task.js';
import { RestoolConfigBuilder } from '../../builder/restool-file-config-builder.js';
import { TargetTaskService } from '../service/target-task-service.js';
import { TaskInputValue } from '@ohos/hvigor-base/src/internal/snapshot/util/task-input-value-entry.js';
import { FileSet } from '@ohos/hvigor-base/src/internal/snapshot/util/file-set.js';
import { RestoolCommandBuilder } from '../../builder/restool-command-builder.js';
import { TaskDetails } from '@ohos/hvigor-base';
/**
 * 编译前的资源处理和生成resConfig.json的公共抽象类
 *
 * @since 2022/9/8
 */
export declare abstract class AbstractProcessResource extends OhosHapTask {
    restoolConfigBuilder: RestoolConfigBuilder;
    restoolCommandBuilder: RestoolCommandBuilder;
    outputDir: string | undefined;
    protected resConfigFilePath: string | undefined;
    protected entryModuleName: string | undefined;
    private needInitCommandBuilder;
    protected processedJson: string | undefined;
    protected constructor(taskService: TargetTaskService, taskDetails: TaskDetails);
    protected doTaskAction(): void;
    protected abstract initCommandBuilder(): void;
    getCompileResourceInputFiles(): FileSet;
    getCompileResourceOutputFiles(): FileSet;
    declareInputs(): Map<string, TaskInputValue>;
    declareOutputFiles(): FileSet;
    /**
     * get common restool config builder
     *
     * @returns {RestoolBuilderInterface} resTool命令构造器
     */
    private getRestoolConfigBuilder;
    private initConfigTargetResource;
    /**
     *  相对路径转换为资源绝对路径
     *
     * @param {string}  resourcesDirs 资源路径
     * @param {Function} returnAfterProcessResourcePath 资源路径回调函数
     */
    convertResourceAbsolutePath(resourcesDirs: string[], returnAfterProcessResourcePath?: Function): void;
    /**
     * get common restool command builder
     *
     * @returns {RestoolBuilderInterface} resTool编译、链接命令构造器
     * @protected
     */
    protected getRestoolCommandBuilder(): RestoolCommandBuilder;
    protected initCommandTargetResource(): RestoolCommandBuilder;
}

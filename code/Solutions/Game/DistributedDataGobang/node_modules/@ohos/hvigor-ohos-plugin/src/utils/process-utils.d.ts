/// <reference types="node" />
import execa from 'execa';
import { WorkerPoolDelegator } from '@ohos/hvigor-base/src/internal/pool/worker-pool/worker-delegator.js';
import { LogCombineType } from './log/log-combine-type';
/**
 * 执行命令的工具类
 *
 * @since 2021-12-14
 */
export declare class ProcessUtils {
    private _log;
    private readonly _moduleName;
    private readonly _taskName;
    private readonly _errLog;
    private readonly _ohosCharset;
    private readonly _solution;
    private readonly _defaultOptions;
    constructor(moduleName?: string, taskName?: string, errLog?: string, solution?: string, charset?: string);
    /**
     * 向工作池提交同步执行的命令，执行命令无返回值
     *
     * @param workerPool 工作池代理器
     * @param inputData 输入数据
     * @param callback 回调函数
     * @param callbackInput 回调函数的输入数据
     * @param targetWorkers 目标worker的集合
     * @param combine
     */
    submitSyncExecutionWithoutReturn(workerPool: WorkerPoolDelegator, inputData: any, callback: Function, callbackInput: unknown[], targetWorkers?: number[], combine?: LogCombineType): void;
    /**
     * 向工作池提交同步执行的命令，执行命令有返回值，作为callback的输入
     *
     * @param workerPool 工作池代理器
     * @param funcPath 执行函数的路径
     * @param inputData 输入数据
     * @param callback 回调函数
     * @param targetWorkers 目标worker的集合
     * @returns {boolean} 是否成功提交
     */
    submitSyncExecutionWithReturn(workerPool: WorkerPoolDelegator, funcPath: string, inputData: any, callback: Function, targetWorkers?: number[]): boolean;
    /**
     * 同步地执行命令，并打印结果。同步的执行方式必然需要等到执行结束
     *
     * @param command 命令
     * @param options - 传入参数
     * @param combine
     */
    executeSync(command: string[], options?: execa.SyncOptions<null>, combine?: LogCombineType): execa.ExecaSyncReturnValue<Buffer>;
    /**
     * 以文件的方式执行命令同步地执行命令，并打印结果。
     *
     * @param {string} command 命令
     * @param {execa.SyncOptions<null>} options - 传入参数
     * @return {execa.ExecaSyncReturnValue<Buffer>} 返回信息
     */
    execaCommandSync(command: string, options?: execa.SyncOptions<null>): execa.ExecaSyncReturnValue<Buffer>;
    /**
     * 根据process状态判断该报错是否需要打印到输出流中
     *
     * @returns {boolean}
     * @private
     */
    private needPrintInfoWhenErrorOccur;
    /**
     * 生成execa需要的options入参
     *
     * @param options - 传入参数
     */
    processOptionsFactory(options: execa.SyncOptions<null> | undefined): execa.SyncOptions<null>;
    private validateExecuteFile;
    /**
     * 校验命令合法性，避免命令注入
     *
     * @param {string} command
     * @private
     */
    private validateExecuteCommand;
}

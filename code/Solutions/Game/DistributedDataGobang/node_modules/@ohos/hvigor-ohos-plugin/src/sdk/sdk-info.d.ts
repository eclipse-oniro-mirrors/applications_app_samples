import { SdkVersion } from '../version/sdk-version.js';
export declare class SdkInfo {
    private readonly sdkVersion;
    private ohosSdkInfo;
    private hosSdkInfo;
    private readonly requireComponents;
    readonly isOhos: boolean;
    constructor(sdkVersion: number, requireComponents: string[], isOhos?: boolean);
    private getOhosSdkInfo;
    private getHosSdkInfo;
    private getSdkDir;
    private getSdkInfo;
    isPreviewCompileResourceIncrement(isHarmonyOS: boolean): boolean;
    /**
     * 获取当前sdk中对应api 的toolchains组件的小版本号
     *
     * @return {string | undefined}
     */
    getToolchainsComponentVersion(): string | undefined;
    getModuleSchema(): string;
    getAppSchema(): string;
    getFormSchema(): string;
    getSdkJsDir(): string;
    getSdkEtsDir(): string;
    getSdkVersion(): number;
    getHapTobin(): string;
    getReleaseType(): string;
    getSdkNativeDir(): string;
    getCmakeTool(): string;
    getNativeNinjaTool(): string;
    getNativeToolchain(): string;
    getSdkToolchainsDir(): string;
    getRestool(): string;
    getSysCapTool(): string;
    getSysCapFileInEts(): string;
    getSysCapFileInJs(): string;
    getVerifySignConfigTool(): string;
    getJsArkVersion(): string;
    getNdkVersion(): SdkVersion;
    getRichSchema(): string;
    getLiteSchema(): string;
    getEtsArkVersion(): string;
    getArkVersion(): string;
    getPackageTool(): string;
    getSignDir(): string;
    getJsLoader(): string;
    getEtsLoader(): string;
    requireUISyntax(): boolean;
    getHosResTool(): string;
    getAbilityShellJar(): string;
    getAceJar(): string;
    getApkSignerJar(): string;
    getAJar(): string;
    getD8Jar(): string;
    getAapt2Tool(): string;
    getOhosJar(): string;
    getHapSignToolV2(): string;
    getHosModuleSchema(): string;
}

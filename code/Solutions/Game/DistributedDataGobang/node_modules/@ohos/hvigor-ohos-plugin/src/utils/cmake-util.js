"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CmakeArg=exports.CmakeUtil=void 0;const crypto_1=__importDefault(require("crypto")),fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),code_type_enum_js_1=require("../enum/code-type-enum.js"),common_const_js_1=require("../const/common-const.js"),sdk_version_js_1=require("../version/sdk-version.js"),file_util_js_1=require("./file-util.js"),ohos_logger_js_1=require("./log/ohos-logger.js");class CmakeUtil{static checkNativeCache(e,t){var r;const i=null===(r=e.getProfileOpt().buildOption)||void 0===r?void 0:r.externalNativeOptions,a=null==i?void 0:i.cFlags,s=null==i?void 0:i.cppFlags,o=null==i?void 0:i.arguments,_=[a?a.trim():"",s?s.trim():"",o?o.trim():""],l=crypto_1.default.createHash("sha256").update(_.join(" ").trim()).update(e.getProjectDir()).update(t).digest("hex");return CmakeUtil.getNativeCache(e.getName())!==l&&(CmakeUtil.updateNativeCache(e.getName(),l),!0)}static cleanCache(e){const t=path_1.default.resolve(e,"CMakeCache.txt");file_util_js_1.FileUtil.deleteFile(t)}static getNativeCache(e){return file_util_js_1.FileUtil.readFile(this.resolveModuleCache(e))}static updateNativeCache(e,t){const r=this.resolveModuleCache(e);try{const e=path_1.default.dirname(r);if(fs_extra_1.default.existsSync(e)){fs_extra_1.default.statSync(e).isFile()&&fs_extra_1.default.rmSync(e,{recursive:!0})}fs_extra_1.default.outputFileSync(r,t)}catch(e){this._log.error(`Please check the native cache and remove it \n        at ${r}`)}}static resolveModuleCache(e){return path_1.default.resolve(CmakeUtil._nativeCacheDir,"native",e)}static getCmakeListDir(e,t){return void 0!==t&&""!==t.trim()||(t="./src/main/cpp/CMakeLists.txt"),path_1.default.resolve(e,t,"..")}static resolveArch(e,t,r){if(e.indexOf(this.ARCH_X86_64)>-1)return;const i=t?this.OHOS_MIN_NDK_FOR_X86_64:this.HOS_MIN_NDK_FOR_X86_64;(r.equals(i)||r.isHigherThan(i))&&e.push(this.ARCH_X86_64)}static checkAbiFilters(e,t,r){const i=[];return void 0===e||0===e.length?i.push("arm64-v8a","armeabi-v7a"):i.push(...e),CmakeUtil.resolveArch(i,t,r),i}static nativeTaskCondition(e,t,r){return e.getSourceSetByTargetName(t.getTargetName()).getCodeMap().has(code_type_enum_js_1.CodeType.CPP)&&void 0!==r&&t.getTargetName()!==common_const_js_1.DefaultTargetConst.OHOS_TEST_TARGET}static mergeCommandLine(e,t){const r=CmakeUtil.getArguments(t),i=CmakeUtil.parseCmakeArgs(r,void 0);return CmakeUtil.parseCmakeArgs(e,i),CmakeUtil.toCommandLine(i,e)}static toCommandLine(e,t){const r=[t[0]];return e.forEach((e=>r.push(CmakeUtil.assembleArg(e)))),r}static parseCmakeArgs(e,t){return t=t||new Map,e.forEach((e=>{const r=CmakeUtil.parseArg(e.trim());if(void 0!==r){const e=r.getPrefix()+r.getKey();t.has(e)||t.set(e,r)}})),t}static getArguments(e){return e.split(" ").filter((e=>e.startsWith("-")))}static parseArg(e){if(!e.startsWith("-"))return;const t=e.substring(0,2),r=e.substring(2),i=r.indexOf("=");if(-1===i)return new CmakeArg(t,r,void 0);{const e=r.substring(0,i).trim(),a=r.substring(i+1).trim();return new CmakeArg(t,e,a)}}static assembleArg(e){return void 0===e.getValue()?e.getPrefix()+e.getKey():`${e.getPrefix()+e.getKey()}=${e.getValue()}`}static mkCodeModelRequest(e){fs_extra_1.default.mkdirSync(path_1.default.resolve(e,".cmake","api","v1","query","codemodel-v2"),{recursive:!0})}}exports.CmakeUtil=CmakeUtil,CmakeUtil._log=ohos_logger_js_1.OhosLogger.getLogger("Cmake"),CmakeUtil._nativeCacheDir=path_1.default.resolve(process.cwd(),".hvigor","cache"),CmakeUtil.ARCH_X86_64="x86_64",CmakeUtil.OHOS_MIN_NDK_FOR_X86_64=new sdk_version_js_1.SdkVersion("3.2.10.6"),CmakeUtil.HOS_MIN_NDK_FOR_X86_64=new sdk_version_js_1.SdkVersion("3.2.2.6");class CmakeArg{constructor(e,t,r){this._prefix=e,this._key=t,this._value=r}getPrefix(){return this._prefix}setPrefix(e){this._prefix=e}getKey(){return this._key}setKey(e){this._key=e}getValue(){return this._value}setValue(e){this._value=e}}exports.CmakeArg=CmakeArg;
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var a=Object.getOwnPropertyDescriptor(t,i);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,a)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ValidateUtil=void 0;const hap_extra_info_js_1=require("../../project/data/hap-extra-info.js"),array_util_js_1=require("../array-util.js"),project_file_reader_js_1=require("../project-file-reader.js"),ohos_logger_js_1=require("../log/ohos-logger.js"),util=__importStar(require("util")),os=__importStar(require("os")),fs=__importStar(require("fs-extra")),path_1=__importDefault(require("path")),java_command_builder_js_1=require("../../builder/java-command-builder.js"),process_utils_js_1=require("../process-utils.js"),parse_json_util_js_1=require("@ohos/hvigor-base/src/util/parse/parse-json-util.js"),validator_store_js_1=require("./validator-store.js"),file_util_js_1=require("../file-util.js");class ValidateUtil{static apiCompatibleCheck(e,t,i){const r={suggestedVersion:-1};if((null==i?void 0:i.getApiType())!==hap_extra_info_js_1.ApiType.STAGE&&!t)return r;const a=this.hosApiMatrixCheck(e);return a[0]?r:{suggestedVersion:a[1],errorHandler:()=>{this._log._buildError(`According to the compatibility specifications, apps of API version ${e.getCompileApiVersion()} or stage mode can only run on devices of API version ${a[1]} or later.`)._solution(`Upgrade compatibleSdkVersion to ${a[1]} or later in the build-profile.json5.`)._file(null==e?void 0:e.getProfilePath())._printErrorAndExit()}}}static hosApiMatrixCheck(e){const t=this.hosApiCompatible.get(e.getCompileApiVersion());return t?[e.getCompatibleApiVersion()>=t,t]:[!0,-1]}static schemaCheckOnly(e,t,i){return i(project_file_reader_js_1.ProjectFileReader.getJson5Obj(t))}static submitSchemaCheckWork(e){const{moduleName:t,filePath:i,schemaPath:r,changeAppSchema:a=!1,checkOnly:l=!1,errorHandlers:o}=e,s=validator_store_js_1.ValidatorStore.addValidator(r,a);return l?ValidateUtil.schemaCheckOnly(t,i,s):ValidateUtil.doSchemaCheck(t,i,s,o)}static doSchemaCheck(e,t,i,r){var a;const l=project_file_reader_js_1.ProjectFileReader.getJson5Obj(t),o=i(l);if(o)ValidateUtil._log.debug(`Schema ${t} success.`);else{if(!i.errors)return o;const s=(0,parse_json_util_js_1.parseJsonFile)(t,!0);let n=[];if(null===(a=i.errors)||void 0===a||a.forEach((e=>{const i={instancePath:e.instancePath,keyword:e.keyword,params:e.params,message:e.message,location:`${t.replace(/\\/g,"/")}`};ValidateUtil.addLocationInfo(i,s),n.push(i)})),r&&r.forEach((e=>{n=e(n,l)})),0!==n.length){let t="";null==n||n.forEach((e=>{t+=util.format(e,os.EOL)})),ValidateUtil._log._buildError("Schema validate failed.")._solution(`Please check the following fields.${os.EOL}${t}`)._printErrorAndExit(e)}}return o}static addLocationInfo(e,t){var i;let r="",a=t;null===(i=e.instancePath)||void 0===i||i.split("/").forEach((e=>{null===e||""===e||("NaN"===parseInt(e).toString()?(a=a[e],r+=""===r?e:`.${e}`):(a=a[parseInt(e)],r+=`[${e}]`))})),e.instancePath=r,e.location+=`:${a._line}:${a._column+1}`}static getBundleNameFromP7b(e,t,i){if(void 0!==t){const r=e.getVerifySignConfigTool();""!==r&&fs.existsSync(path_1.default.resolve(r))||ValidateUtil._log._buildError("No HAP signing tool found in the SDK.")._solution("Download toolchains in the SDK again.")._file(e.getSdkToolchainsDir())._printErrorAndExit();const a=t.material.profile,l=i.getIntermediatesTemp(),o=path_1.default.resolve(l,"signConfigCheckJson.json");file_util_js_1.FileUtil.checkDirWithoutDelete(path_1.default.resolve(l)),file_util_js_1.FileUtil.checkFile(o);const s=(new java_command_builder_js_1.JavaCommandBuilder).addCalledJarFile(r).addJvmOption("verify-profile").addJvmOption("-inFile").addJvmOption(a).addJvmOption("-outFile").addJvmOption(o).build();(new process_utils_js_1.ProcessUtils).executeSync(s);const n=project_file_reader_js_1.ProjectFileReader.getJson5Obj(o).content["bundle-info"]["bundle-name"];return fs.existsSync(o)&&(fs.removeSync(o.toString()),fs.removeSync(o)),n}return null}static getBundleNameFromHap(e,t){const i=e.bundleName;return i||t.getDefaultBundleName()}static searchDuplicateName(e){return(0,array_util_js_1.findDuplicateElement)(e.map((e=>e.name)))}static validateDuplicatedName(e,t,i){if(void 0===e)return;const r=ValidateUtil.searchDuplicateName(e);0!==r.length&&ValidateUtil._log._buildError(`Duplicated ${t}: ${r.join(",")}.`)._solution(`Ensure that all ${t} names are unique.`)._file(i)._printErrorAndExit()}static validateContainsDefault(e,t){e&&e.some((e=>"default"===e.name))||ValidateUtil._log._buildError("Unable to find or load the default product.")._solution("Add the product named 'default' to build-profile.json5.")._file(t)._printErrorAndExit()}static isDeviceTypeExist(e,t){return e.some((e=>t.has(e)))}static isAllLiteDeviceType(e,t){return e.every((e=>t.has(e)))}static validateHybridDeviceTypes(e){const t="Check whether the device type field is correctly configured.";ValidateUtil.isDeviceTypeExist(e,ValidateUtil.richDeviceTypes)&&ValidateUtil.isDeviceTypeExist(e,ValidateUtil.liteDeviceTypes)?ValidateUtil._log._buildError("It's not allowed to configure mini-system device when standard-system device exists.")._solution(t)._printErrorAndExit():ValidateUtil.isAllLiteDeviceType(e,ValidateUtil.liteDeviceTypes)&&e.length>1&&ValidateUtil._log._buildError("The device types cannot include multiple mini-system devices.")._solution(t)._printErrorAndExit()}static validateFALiteDevice(e){e.some((e=>ValidateUtil.liteDeviceTypes.has(e)))&&ValidateUtil._log._buildError("Mini-system devices cannot be configured in an FA project.")._solution("Verify the deviceType field in the config.json file.")._printErrorAndExit()}static validateTargetCustomizeResources(e,t){e&&null!==e.match("^./?[\\s\\S]*[^ ]$")&&fs.existsSync(t)||ValidateUtil._log._buildError(`Invalid Targets resource '${e}' configuration.`)._solution("Check whether the resource directories field is correctly configured.")._printErrorAndExit()}static fieldRegExpCheck(e,t,i,r){if(!i.test(e)){const e=`Invalid value of '${t}' in the syscap.json file.`,a=`Correct the sysCaps in '${t}' based on the schema '${i}'.`;ValidateUtil._log._buildError(e)._solution(a)._file(r)._printErrorAndExit()}}}exports.ValidateUtil=ValidateUtil,ValidateUtil._log=ohos_logger_js_1.OhosLogger.getLogger(ValidateUtil.name),ValidateUtil.richDeviceTypes=new Set(["phone","tablet","tv","wearable","car"]),ValidateUtil.liteDeviceTypes=new Set(["lite Wearable","smart Vision","router"]),ValidateUtil.hosApiCompatible=new Map([[9,9]]);
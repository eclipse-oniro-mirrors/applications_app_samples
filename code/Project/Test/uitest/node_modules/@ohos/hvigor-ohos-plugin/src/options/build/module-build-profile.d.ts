import { Configurable, Named, RequiredNamed } from '../options';
import { ApiType } from '../../project/data/hap-extra-info.js';
import { CompileModeEnum } from '../../enum/compile-mode-enum.js';
/**
 * 模块级别的build-profile.json5的pattern
 * 所有需要配到project.json5的数据通过对应接口提供，
 * 若该接口中未定义，则认为是开发者手动加了不支持的字段(开发态无法联想)
 *
 * 命名规范:
 *   1. 每一个子标签都以xxxBuildOpt结尾
 *   2. 如果project跟Module有相同命名的字段，加一个project/module的前缀区分
 */
export declare namespace ModuleBuildProfile {
    interface ConfigOpt {
        buildOption?: BuildOptionBuildOpt;
        deviceType?: string[];
        distroFilter?: DistroFilterBuildOpt;
    }
    interface DistroFilterBuildOpt {
        apiVersion?: object;
        screenShape?: object;
        screenWindow?: object;
        screenDensity?: object;
        countryCode?: object;
    }
    interface NAPILibFilterOpt {
        excludes?: string[];
        pickFirsts?: string[];
        pickLasts?: string[];
        enableOverride?: boolean;
    }
    interface ExternalNativeOpt {
        path?: string;
        arguments?: string;
        abiFilters?: string[];
        cppFlags?: string;
        cFlags?: string;
    }
    interface BuildOptionBuildOpt {
        resOptions?: object;
        externalNativeOptions?: ExternalNativeOpt;
        sourceOption?: SourceOptionOpt;
        compileMode?: CompileModeEnum;
        napiLibFilterOption?: NAPILibFilterOpt;
    }
    interface SourceOptionOpt {
        workers?: string[];
    }
    interface AbilityBuildOpt extends Named {
        pages?: string[];
        res?: string[];
    }
    interface SourcesOpt {
        abilities?: AbilityBuildOpt[];
        pages?: string[];
    }
    interface ModuleTargetBuildOpt extends RequiredNamed, Configurable {
        source?: SourcesOpt;
        resource?: ResourceBuildOpt;
        config?: ConfigOpt;
    }
    interface ResourceBuildOpt {
        directories?: string[];
    }
    interface ModuleBuildOpt extends Configurable {
        apiType?: ApiType;
        buildOption?: BuildOptionBuildOpt;
        targets?: ModuleTargetBuildOpt[];
        entryModules?: string[];
    }
}

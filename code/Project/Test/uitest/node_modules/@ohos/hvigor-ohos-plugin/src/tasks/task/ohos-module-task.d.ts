import { ModuleTargetData } from '../data/hap-task-target-data.js';
import { SdkInfo } from '../../sdk/sdk-info.js';
import { CoreModuleModelImpl } from '../../model/module/core-module-model-impl';
import { Module, TaskDetails } from '@ohos/hvigor-base';
import { OhosLogger } from '../../utils/log/ohos-logger.js';
import { TargetTaskService } from '../service/target-task-service.js';
import { ModuleTaskService } from '../service/module-task-service.js';
import { ModulePathInfoIml } from '../../common/iml/module-path-info-iml.js';
import { ProjectModel } from '../../model/project/project-model.js';
import { IncrementalExecTask } from '@ohos/hvigor-base/src/external/task/incremental-exec-task.js';
/**
 * openHarmony的公共module类型的基础task
 *
 * @since 2022/1/5
 */
export declare abstract class OhosModuleTask extends IncrementalExecTask {
    protected readonly projectModel: ProjectModel;
    protected module: Module;
    protected moduleName: string;
    protected moduleModel: CoreModuleModelImpl;
    protected targetName: string;
    protected targetData: ModuleTargetData;
    protected service: ModuleTaskService;
    protected targetService: TargetTaskService;
    protected sdkInfo: SdkInfo;
    protected isFaMode: boolean;
    protected readonly pathInfo: ModulePathInfoIml;
    protected readonly needPackShell: boolean;
    protected constructor(targetService: TargetTaskService, taskDetails: TaskDetails);
    protected abstract initTaskDepends(): void;
    protected initHarModuleDepends(): void;
    /**
     * 为每个target执行task的具体逻辑
     */
    protected abstract doTaskAction(): void;
    /**
     * 在task执行之前做hook, 通常用于clean上次构建的输出
     */
    protected beforeTask(): void;
    /**
     * 根据targetData状态判断是否跳过该task
     */
    protected taskShouldDo(): boolean;
    registryAction: () => Function;
    /**
     * 获取每个target的临时目录(缓存目录)
     * 调该方法时如果该目录不存在，则创建新目录
     *
     * @param {string} targetData targets数据对象
     * @param {string} tempDirName 拼接目录名称
     * @param {boolean} isCreateDir 若目录不存在，是否创建新目录
     * @protected
     */
    protected getTaskTempDir(targetData: ModuleTargetData, tempDirName?: string, isCreateDir?: boolean): string;
    /**
     * 替换module.json5中配置的pages信息
     * 该方法需要在stage模型的资源编译后才可调用
     *
     * @param {OhosLogger} log
     * @param {string[]} pages
     * @protected
     */
    protected replacePages(log: OhosLogger, pages: string[]): void;
    /**
     * 获取profile pages路由配置文件名
     *
     * @param {OhosLogger} log
     * @return {string} profile路由配置文件名称
     * @protected
     */
    protected getPageJsonFileName(log: OhosLogger): string;
}
